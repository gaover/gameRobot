// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: MG_Room.proto

package pbd

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 房间位置信息
type RoomSeatInfo struct {
	SeatId               *int32          `protobuf:"zigzag32,1,req,name=seat_id" json:"seat_id,omitempty"`
	IsMaster             *bool           `protobuf:"varint,2,req,name=is_master" json:"is_master,omitempty"`
	IsReady              *bool           `protobuf:"varint,3,req,name=is_ready" json:"is_ready,omitempty"`
	RoleIndex            *int64          `protobuf:"zigzag64,4,req,name=role_index" json:"role_index,omitempty"`
	ShowPlayer           *PlayerShowInfo `protobuf:"bytes,5,req,name=show_player" json:"show_player,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RoomSeatInfo) Reset()         { *m = RoomSeatInfo{} }
func (m *RoomSeatInfo) String() string { return proto.CompactTextString(m) }
func (*RoomSeatInfo) ProtoMessage()    {}
func (*RoomSeatInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{0}
}
func (m *RoomSeatInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomSeatInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomSeatInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoomSeatInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomSeatInfo.Merge(m, src)
}
func (m *RoomSeatInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoomSeatInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomSeatInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomSeatInfo proto.InternalMessageInfo

func (m *RoomSeatInfo) GetSeatId() int32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *RoomSeatInfo) GetIsMaster() bool {
	if m != nil && m.IsMaster != nil {
		return *m.IsMaster
	}
	return false
}

func (m *RoomSeatInfo) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

func (m *RoomSeatInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *RoomSeatInfo) GetShowPlayer() *PlayerShowInfo {
	if m != nil {
		return m.ShowPlayer
	}
	return nil
}

// 房间信息
type MgRoomInfo struct {
	RoomId               *int32          `protobuf:"zigzag32,1,req,name=room_id" json:"room_id,omitempty"`
	RoomType             *MG_ROOM_TYPE   `protobuf:"varint,2,req,name=room_type,enum=pbd.MG_ROOM_TYPE" json:"room_type,omitempty"`
	RoomSceneId          *int32          `protobuf:"zigzag32,3,req,name=room_scene_id" json:"room_scene_id,omitempty"`
	RoomMaxPlayer        *int32          `protobuf:"zigzag32,4,req,name=room_max_player" json:"room_max_player,omitempty"`
	RoomSeat             []*RoomSeatInfo `protobuf:"bytes,5,rep,name=room_seat" json:"room_seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MgRoomInfo) Reset()         { *m = MgRoomInfo{} }
func (m *MgRoomInfo) String() string { return proto.CompactTextString(m) }
func (*MgRoomInfo) ProtoMessage()    {}
func (*MgRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{1}
}
func (m *MgRoomInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MgRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MgRoomInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MgRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MgRoomInfo.Merge(m, src)
}
func (m *MgRoomInfo) XXX_Size() int {
	return m.Size()
}
func (m *MgRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MgRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MgRoomInfo proto.InternalMessageInfo

func (m *MgRoomInfo) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *MgRoomInfo) GetRoomType() MG_ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return MG_ROOM_TYPE_MGRT_PUBLIC
}

func (m *MgRoomInfo) GetRoomSceneId() int32 {
	if m != nil && m.RoomSceneId != nil {
		return *m.RoomSceneId
	}
	return 0
}

func (m *MgRoomInfo) GetRoomMaxPlayer() int32 {
	if m != nil && m.RoomMaxPlayer != nil {
		return *m.RoomMaxPlayer
	}
	return 0
}

func (m *MgRoomInfo) GetRoomSeat() []*RoomSeatInfo {
	if m != nil {
		return m.RoomSeat
	}
	return nil
}

// 同步房间信息
type S2C_MG_RoomInfo struct {
	RoomInfo             *MgRoomInfo `protobuf:"bytes,1,req,name=room_info" json:"room_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_MG_RoomInfo) Reset()         { *m = S2C_MG_RoomInfo{} }
func (m *S2C_MG_RoomInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_RoomInfo) ProtoMessage()    {}
func (*S2C_MG_RoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{2}
}
func (m *S2C_MG_RoomInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_RoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_RoomInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_RoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_RoomInfo.Merge(m, src)
}
func (m *S2C_MG_RoomInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_RoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_RoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_RoomInfo proto.InternalMessageInfo

func (m *S2C_MG_RoomInfo) GetRoomInfo() *MgRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 创建房间
type C2S_MG_CreateRoom struct {
	RoomType             *MG_ROOM_TYPE `protobuf:"varint,1,req,name=room_type,enum=pbd.MG_ROOM_TYPE" json:"room_type,omitempty"`
	RoomSceneId          *int32        `protobuf:"zigzag32,2,req,name=room_scene_id" json:"room_scene_id,omitempty"`
	RoleIndex            *int64        `protobuf:"zigzag64,3,req,name=role_index" json:"role_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *C2S_MG_CreateRoom) Reset()         { *m = C2S_MG_CreateRoom{} }
func (m *C2S_MG_CreateRoom) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_CreateRoom) ProtoMessage()    {}
func (*C2S_MG_CreateRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{3}
}
func (m *C2S_MG_CreateRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_CreateRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_CreateRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_CreateRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_CreateRoom.Merge(m, src)
}
func (m *C2S_MG_CreateRoom) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_CreateRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_CreateRoom.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_CreateRoom proto.InternalMessageInfo

func (m *C2S_MG_CreateRoom) GetRoomType() MG_ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return MG_ROOM_TYPE_MGRT_PUBLIC
}

func (m *C2S_MG_CreateRoom) GetRoomSceneId() int32 {
	if m != nil && m.RoomSceneId != nil {
		return *m.RoomSceneId
	}
	return 0
}

func (m *C2S_MG_CreateRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

// 回复创建房间
type S2C_MG_CreateRoom struct {
	RoomType             *MG_ROOM_TYPE   `protobuf:"varint,1,req,name=room_type,enum=pbd.MG_ROOM_TYPE" json:"room_type,omitempty"`
	RoomSceneId          *int32          `protobuf:"zigzag32,2,req,name=room_scene_id" json:"room_scene_id,omitempty"`
	RoleIndex            *int64          `protobuf:"zigzag64,3,req,name=role_index" json:"role_index,omitempty"`
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,4,req,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	RoomInfo             *MgRoomInfo     `protobuf:"bytes,5,opt,name=room_info" json:"room_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_MG_CreateRoom) Reset()         { *m = S2C_MG_CreateRoom{} }
func (m *S2C_MG_CreateRoom) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_CreateRoom) ProtoMessage()    {}
func (*S2C_MG_CreateRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{4}
}
func (m *S2C_MG_CreateRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_CreateRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_CreateRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_CreateRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_CreateRoom.Merge(m, src)
}
func (m *S2C_MG_CreateRoom) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_CreateRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_CreateRoom.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_CreateRoom proto.InternalMessageInfo

func (m *S2C_MG_CreateRoom) GetRoomType() MG_ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return MG_ROOM_TYPE_MGRT_PUBLIC
}

func (m *S2C_MG_CreateRoom) GetRoomSceneId() int32 {
	if m != nil && m.RoomSceneId != nil {
		return *m.RoomSceneId
	}
	return 0
}

func (m *S2C_MG_CreateRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *S2C_MG_CreateRoom) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

func (m *S2C_MG_CreateRoom) GetRoomInfo() *MgRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 请求加入
type C2S_MG_JoinRoom struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32   `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_MG_JoinRoom) Reset()         { *m = C2S_MG_JoinRoom{} }
func (m *C2S_MG_JoinRoom) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_JoinRoom) ProtoMessage()    {}
func (*C2S_MG_JoinRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{5}
}
func (m *C2S_MG_JoinRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_JoinRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_JoinRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_JoinRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_JoinRoom.Merge(m, src)
}
func (m *C2S_MG_JoinRoom) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_JoinRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_JoinRoom.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_JoinRoom proto.InternalMessageInfo

func (m *C2S_MG_JoinRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_MG_JoinRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 快速加入
type C2S_MG_FastJoinRoom struct {
	RoleIndex            *int64        `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomType             *MG_ROOM_TYPE `protobuf:"varint,2,req,name=room_type,enum=pbd.MG_ROOM_TYPE" json:"room_type,omitempty"`
	RoomSceneId          *int32        `protobuf:"zigzag32,3,req,name=room_scene_id" json:"room_scene_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *C2S_MG_FastJoinRoom) Reset()         { *m = C2S_MG_FastJoinRoom{} }
func (m *C2S_MG_FastJoinRoom) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_FastJoinRoom) ProtoMessage()    {}
func (*C2S_MG_FastJoinRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{6}
}
func (m *C2S_MG_FastJoinRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_FastJoinRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_FastJoinRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_FastJoinRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_FastJoinRoom.Merge(m, src)
}
func (m *C2S_MG_FastJoinRoom) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_FastJoinRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_FastJoinRoom.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_FastJoinRoom proto.InternalMessageInfo

func (m *C2S_MG_FastJoinRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_MG_FastJoinRoom) GetRoomType() MG_ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return MG_ROOM_TYPE_MGRT_PUBLIC
}

func (m *C2S_MG_FastJoinRoom) GetRoomSceneId() int32 {
	if m != nil && m.RoomSceneId != nil {
		return *m.RoomSceneId
	}
	return 0
}

// 回复加入房间
type S2C_MG_JoinRoom struct {
	RoleIndex            *int64          `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32          `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,3,req,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	RoomInfo             *MgRoomInfo     `protobuf:"bytes,4,opt,name=room_info" json:"room_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_MG_JoinRoom) Reset()         { *m = S2C_MG_JoinRoom{} }
func (m *S2C_MG_JoinRoom) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_JoinRoom) ProtoMessage()    {}
func (*S2C_MG_JoinRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{7}
}
func (m *S2C_MG_JoinRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_JoinRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_JoinRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_JoinRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_JoinRoom.Merge(m, src)
}
func (m *S2C_MG_JoinRoom) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_JoinRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_JoinRoom.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_JoinRoom proto.InternalMessageInfo

func (m *S2C_MG_JoinRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *S2C_MG_JoinRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *S2C_MG_JoinRoom) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

func (m *S2C_MG_JoinRoom) GetRoomInfo() *MgRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 离开房间
type C2S_MG_LeaveRoom struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32   `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_MG_LeaveRoom) Reset()         { *m = C2S_MG_LeaveRoom{} }
func (m *C2S_MG_LeaveRoom) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_LeaveRoom) ProtoMessage()    {}
func (*C2S_MG_LeaveRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{8}
}
func (m *C2S_MG_LeaveRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_LeaveRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_LeaveRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_LeaveRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_LeaveRoom.Merge(m, src)
}
func (m *C2S_MG_LeaveRoom) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_LeaveRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_LeaveRoom.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_LeaveRoom proto.InternalMessageInfo

func (m *C2S_MG_LeaveRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_MG_LeaveRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 回复离开房间
type S2C_MG_LeaveRoom struct {
	RoleIndex            *int64          `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32          `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,3,req,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_MG_LeaveRoom) Reset()         { *m = S2C_MG_LeaveRoom{} }
func (m *S2C_MG_LeaveRoom) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_LeaveRoom) ProtoMessage()    {}
func (*S2C_MG_LeaveRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{9}
}
func (m *S2C_MG_LeaveRoom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_LeaveRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_LeaveRoom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_LeaveRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_LeaveRoom.Merge(m, src)
}
func (m *S2C_MG_LeaveRoom) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_LeaveRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_LeaveRoom.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_LeaveRoom proto.InternalMessageInfo

func (m *S2C_MG_LeaveRoom) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *S2C_MG_LeaveRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *S2C_MG_LeaveRoom) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

// 切换准备
type C2S_MG_Ready struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32   `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	IsReady              *bool    `protobuf:"varint,3,req,name=is_ready" json:"is_ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_MG_Ready) Reset()         { *m = C2S_MG_Ready{} }
func (m *C2S_MG_Ready) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_Ready) ProtoMessage()    {}
func (*C2S_MG_Ready) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{10}
}
func (m *C2S_MG_Ready) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_Ready) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_Ready.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_Ready) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_Ready.Merge(m, src)
}
func (m *C2S_MG_Ready) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_Ready) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_Ready.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_Ready proto.InternalMessageInfo

func (m *C2S_MG_Ready) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_MG_Ready) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *C2S_MG_Ready) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

// 回复准备
type S2C_MG_Ready struct {
	RoleIndex            *int64          `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32          `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,3,req,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_MG_Ready) Reset()         { *m = S2C_MG_Ready{} }
func (m *S2C_MG_Ready) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_Ready) ProtoMessage()    {}
func (*S2C_MG_Ready) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{11}
}
func (m *S2C_MG_Ready) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_Ready) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_Ready.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_Ready) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_Ready.Merge(m, src)
}
func (m *S2C_MG_Ready) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_Ready) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_Ready.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_Ready proto.InternalMessageInfo

func (m *S2C_MG_Ready) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *S2C_MG_Ready) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *S2C_MG_Ready) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

// 同步房间座位信息
type S2C_MG_SyncReady struct {
	RoomSeat             []*RoomSeatInfo `protobuf:"bytes,1,rep,name=room_seat" json:"room_seat,omitempty"`
	EmptyRoomSeat        []int32         `protobuf:"zigzag32,2,rep,name=empty_room_seat" json:"empty_room_seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_MG_SyncReady) Reset()         { *m = S2C_MG_SyncReady{} }
func (m *S2C_MG_SyncReady) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_SyncReady) ProtoMessage()    {}
func (*S2C_MG_SyncReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{12}
}
func (m *S2C_MG_SyncReady) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_SyncReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_SyncReady.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_SyncReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_SyncReady.Merge(m, src)
}
func (m *S2C_MG_SyncReady) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_SyncReady) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_SyncReady.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_SyncReady proto.InternalMessageInfo

func (m *S2C_MG_SyncReady) GetRoomSeat() []*RoomSeatInfo {
	if m != nil {
		return m.RoomSeat
	}
	return nil
}

func (m *S2C_MG_SyncReady) GetEmptyRoomSeat() []int32 {
	if m != nil {
		return m.EmptyRoomSeat
	}
	return nil
}

// 同步房间倒计时
type S2C_MG_SyncCountDown struct {
	CountDown            *int32   `protobuf:"zigzag32,1,req,name=count_down" json:"count_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_MG_SyncCountDown) Reset()         { *m = S2C_MG_SyncCountDown{} }
func (m *S2C_MG_SyncCountDown) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_SyncCountDown) ProtoMessage()    {}
func (*S2C_MG_SyncCountDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{13}
}
func (m *S2C_MG_SyncCountDown) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_SyncCountDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_SyncCountDown.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_SyncCountDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_SyncCountDown.Merge(m, src)
}
func (m *S2C_MG_SyncCountDown) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_SyncCountDown) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_SyncCountDown.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_SyncCountDown proto.InternalMessageInfo

func (m *S2C_MG_SyncCountDown) GetCountDown() int32 {
	if m != nil && m.CountDown != nil {
		return *m.CountDown
	}
	return 0
}

// 房主请求踢人
type C2S_MG_MasterKickPlayer struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32   `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	TarRoleIndex         *int64   `protobuf:"zigzag64,3,req,name=tar_role_index" json:"tar_role_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_MG_MasterKickPlayer) Reset()         { *m = C2S_MG_MasterKickPlayer{} }
func (m *C2S_MG_MasterKickPlayer) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_MasterKickPlayer) ProtoMessage()    {}
func (*C2S_MG_MasterKickPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{14}
}
func (m *C2S_MG_MasterKickPlayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_MasterKickPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_MasterKickPlayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_MasterKickPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_MasterKickPlayer.Merge(m, src)
}
func (m *C2S_MG_MasterKickPlayer) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_MasterKickPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_MasterKickPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_MasterKickPlayer proto.InternalMessageInfo

func (m *C2S_MG_MasterKickPlayer) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_MG_MasterKickPlayer) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *C2S_MG_MasterKickPlayer) GetTarRoleIndex() int64 {
	if m != nil && m.TarRoleIndex != nil {
		return *m.TarRoleIndex
	}
	return 0
}

// 回复房主踢人
type S2C_MG_MasterKickPlayer struct {
	RoleIndex            *int64          `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32          `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	TarRoleIndex         *int64          `protobuf:"zigzag64,3,req,name=tar_role_index" json:"tar_role_index,omitempty"`
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,4,req,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_MG_MasterKickPlayer) Reset()         { *m = S2C_MG_MasterKickPlayer{} }
func (m *S2C_MG_MasterKickPlayer) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_MasterKickPlayer) ProtoMessage()    {}
func (*S2C_MG_MasterKickPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{15}
}
func (m *S2C_MG_MasterKickPlayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_MasterKickPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_MasterKickPlayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_MasterKickPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_MasterKickPlayer.Merge(m, src)
}
func (m *S2C_MG_MasterKickPlayer) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_MasterKickPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_MasterKickPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_MasterKickPlayer proto.InternalMessageInfo

func (m *S2C_MG_MasterKickPlayer) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *S2C_MG_MasterKickPlayer) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *S2C_MG_MasterKickPlayer) GetTarRoleIndex() int64 {
	if m != nil && m.TarRoleIndex != nil {
		return *m.TarRoleIndex
	}
	return 0
}

func (m *S2C_MG_MasterKickPlayer) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

// 请求扔蛋
type C2S_MG_ThrowJBEgg struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	RoomId               *int32   `protobuf:"zigzag32,2,req,name=room_id" json:"room_id,omitempty"`
	SrcRoleIndex         *int64   `protobuf:"zigzag64,3,req,name=src_role_index" json:"src_role_index,omitempty"`
	SrcSeatId            *int32   `protobuf:"zigzag32,4,req,name=src_seat_id" json:"src_seat_id,omitempty"`
	TarRoleIndex         *int64   `protobuf:"zigzag64,5,req,name=tar_role_index" json:"tar_role_index,omitempty"`
	TarSeatId            *int32   `protobuf:"zigzag32,6,req,name=tar_seat_id" json:"tar_seat_id,omitempty"`
	EggType              []byte   `protobuf:"bytes,7,req,name=egg_type" json:"egg_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_MG_ThrowJBEgg) Reset()         { *m = C2S_MG_ThrowJBEgg{} }
func (m *C2S_MG_ThrowJBEgg) String() string { return proto.CompactTextString(m) }
func (*C2S_MG_ThrowJBEgg) ProtoMessage()    {}
func (*C2S_MG_ThrowJBEgg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{16}
}
func (m *C2S_MG_ThrowJBEgg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_MG_ThrowJBEgg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_MG_ThrowJBEgg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_MG_ThrowJBEgg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_MG_ThrowJBEgg.Merge(m, src)
}
func (m *C2S_MG_ThrowJBEgg) XXX_Size() int {
	return m.Size()
}
func (m *C2S_MG_ThrowJBEgg) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_MG_ThrowJBEgg.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_MG_ThrowJBEgg proto.InternalMessageInfo

func (m *C2S_MG_ThrowJBEgg) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_MG_ThrowJBEgg) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *C2S_MG_ThrowJBEgg) GetSrcRoleIndex() int64 {
	if m != nil && m.SrcRoleIndex != nil {
		return *m.SrcRoleIndex
	}
	return 0
}

func (m *C2S_MG_ThrowJBEgg) GetSrcSeatId() int32 {
	if m != nil && m.SrcSeatId != nil {
		return *m.SrcSeatId
	}
	return 0
}

func (m *C2S_MG_ThrowJBEgg) GetTarRoleIndex() int64 {
	if m != nil && m.TarRoleIndex != nil {
		return *m.TarRoleIndex
	}
	return 0
}

func (m *C2S_MG_ThrowJBEgg) GetTarSeatId() int32 {
	if m != nil && m.TarSeatId != nil {
		return *m.TarSeatId
	}
	return 0
}

func (m *C2S_MG_ThrowJBEgg) GetEggType() []byte {
	if m != nil {
		return m.EggType
	}
	return nil
}

// 回复扔蛋
type S2C_MG_ThrowJBEgg struct {
	RoomId               *int32   `protobuf:"zigzag32,1,req,name=room_id" json:"room_id,omitempty"`
	SrcRoleIndex         *int64   `protobuf:"zigzag64,2,req,name=src_role_index" json:"src_role_index,omitempty"`
	SrcSeatId            *int32   `protobuf:"zigzag32,3,req,name=src_seat_id" json:"src_seat_id,omitempty"`
	TarRoleIndex         *int64   `protobuf:"zigzag64,4,req,name=tar_role_index" json:"tar_role_index,omitempty"`
	TarSeatId            *int32   `protobuf:"zigzag32,5,req,name=tar_seat_id" json:"tar_seat_id,omitempty"`
	EggType              []byte   `protobuf:"bytes,6,req,name=egg_type" json:"egg_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_MG_ThrowJBEgg) Reset()         { *m = S2C_MG_ThrowJBEgg{} }
func (m *S2C_MG_ThrowJBEgg) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_ThrowJBEgg) ProtoMessage()    {}
func (*S2C_MG_ThrowJBEgg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{17}
}
func (m *S2C_MG_ThrowJBEgg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_ThrowJBEgg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_ThrowJBEgg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_ThrowJBEgg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_ThrowJBEgg.Merge(m, src)
}
func (m *S2C_MG_ThrowJBEgg) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_ThrowJBEgg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_ThrowJBEgg.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_ThrowJBEgg proto.InternalMessageInfo

func (m *S2C_MG_ThrowJBEgg) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *S2C_MG_ThrowJBEgg) GetSrcRoleIndex() int64 {
	if m != nil && m.SrcRoleIndex != nil {
		return *m.SrcRoleIndex
	}
	return 0
}

func (m *S2C_MG_ThrowJBEgg) GetSrcSeatId() int32 {
	if m != nil && m.SrcSeatId != nil {
		return *m.SrcSeatId
	}
	return 0
}

func (m *S2C_MG_ThrowJBEgg) GetTarRoleIndex() int64 {
	if m != nil && m.TarRoleIndex != nil {
		return *m.TarRoleIndex
	}
	return 0
}

func (m *S2C_MG_ThrowJBEgg) GetTarSeatId() int32 {
	if m != nil && m.TarSeatId != nil {
		return *m.TarSeatId
	}
	return 0
}

func (m *S2C_MG_ThrowJBEgg) GetEggType() []byte {
	if m != nil {
		return m.EggType
	}
	return nil
}

// 回复倒计时
type S2C_MG_CountDown struct {
	RoomId               *int32   `protobuf:"zigzag32,1,req,name=room_id" json:"room_id,omitempty"`
	CountDown            *int32   `protobuf:"zigzag32,2,req,name=count_down" json:"count_down,omitempty"`
	CanGo                *bool    `protobuf:"varint,3,req,name=can_go" json:"can_go,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2C_MG_CountDown) Reset()         { *m = S2C_MG_CountDown{} }
func (m *S2C_MG_CountDown) String() string { return proto.CompactTextString(m) }
func (*S2C_MG_CountDown) ProtoMessage()    {}
func (*S2C_MG_CountDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea12afef94b08d48, []int{18}
}
func (m *S2C_MG_CountDown) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_MG_CountDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_MG_CountDown.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_MG_CountDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_MG_CountDown.Merge(m, src)
}
func (m *S2C_MG_CountDown) XXX_Size() int {
	return m.Size()
}
func (m *S2C_MG_CountDown) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_MG_CountDown.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_MG_CountDown proto.InternalMessageInfo

func (m *S2C_MG_CountDown) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *S2C_MG_CountDown) GetCountDown() int32 {
	if m != nil && m.CountDown != nil {
		return *m.CountDown
	}
	return 0
}

func (m *S2C_MG_CountDown) GetCanGo() bool {
	if m != nil && m.CanGo != nil {
		return *m.CanGo
	}
	return false
}

func init() {
	proto.RegisterType((*RoomSeatInfo)(nil), "pbd.room_seat_info")
	proto.RegisterType((*MgRoomInfo)(nil), "pbd.mg_room_info")
	proto.RegisterType((*S2C_MG_RoomInfo)(nil), "pbd.S2C_MG_RoomInfo")
	proto.RegisterType((*C2S_MG_CreateRoom)(nil), "pbd.C2S_MG_CreateRoom")
	proto.RegisterType((*S2C_MG_CreateRoom)(nil), "pbd.S2C_MG_CreateRoom")
	proto.RegisterType((*C2S_MG_JoinRoom)(nil), "pbd.C2S_MG_JoinRoom")
	proto.RegisterType((*C2S_MG_FastJoinRoom)(nil), "pbd.C2S_MG_FastJoinRoom")
	proto.RegisterType((*S2C_MG_JoinRoom)(nil), "pbd.S2C_MG_JoinRoom")
	proto.RegisterType((*C2S_MG_LeaveRoom)(nil), "pbd.C2S_MG_LeaveRoom")
	proto.RegisterType((*S2C_MG_LeaveRoom)(nil), "pbd.S2C_MG_LeaveRoom")
	proto.RegisterType((*C2S_MG_Ready)(nil), "pbd.C2S_MG_Ready")
	proto.RegisterType((*S2C_MG_Ready)(nil), "pbd.S2C_MG_Ready")
	proto.RegisterType((*S2C_MG_SyncReady)(nil), "pbd.S2C_MG_SyncReady")
	proto.RegisterType((*S2C_MG_SyncCountDown)(nil), "pbd.S2C_MG_SyncCountDown")
	proto.RegisterType((*C2S_MG_MasterKickPlayer)(nil), "pbd.C2S_MG_MasterKickPlayer")
	proto.RegisterType((*S2C_MG_MasterKickPlayer)(nil), "pbd.S2C_MG_MasterKickPlayer")
	proto.RegisterType((*C2S_MG_ThrowJBEgg)(nil), "pbd.C2S_MG_ThrowJBEgg")
	proto.RegisterType((*S2C_MG_ThrowJBEgg)(nil), "pbd.S2C_MG_ThrowJBEgg")
	proto.RegisterType((*S2C_MG_CountDown)(nil), "pbd.S2C_MG_Count_down")
}

func init() { proto.RegisterFile("MG_Room.proto", fileDescriptor_ea12afef94b08d48) }

var fileDescriptor_ea12afef94b08d48 = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xc7, 0x7f, 0x6b, 0x27, 0xfd, 0x33, 0x49, 0xf3, 0xc7, 0xfd, 0x95, 0x5a, 0x3d, 0x44, 0xd6,
	0x0a, 0x90, 0xd5, 0x43, 0x0f, 0x39, 0xd0, 0x7b, 0x53, 0x53, 0x28, 0x44, 0xad, 0x9a, 0x0a, 0x09,
	0x0e, 0xac, 0x5c, 0x7b, 0xeb, 0x5a, 0xd4, 0x5e, 0xcb, 0x76, 0x49, 0x73, 0xe0, 0x84, 0xc4, 0x99,
	0x23, 0x17, 0x6e, 0xbc, 0x00, 0x6f, 0xc1, 0x91, 0x47, 0x40, 0xe5, 0x45, 0xd0, 0xae, 0xd7, 0x69,
	0x2c, 0x27, 0xc8, 0x15, 0x70, 0xcb, 0xce, 0xee, 0xcc, 0x7c, 0xe6, 0x9b, 0x99, 0x31, 0xac, 0x0d,
	0x0f, 0xc8, 0x09, 0x63, 0xc1, 0x4e, 0x14, 0xb3, 0x94, 0x69, 0x6a, 0x74, 0xe6, 0x6e, 0xb5, 0x8e,
	0xf9, 0xef, 0x7d, 0x7a, 0x9e, 0x19, 0xb7, 0xd6, 0xac, 0xf0, 0x2a, 0x98, 0x1e, 0xf1, 0x07, 0x04,
	0xad, 0x98, 0xb1, 0x80, 0x24, 0xd4, 0x4e, 0x89, 0x1f, 0x9e, 0x33, 0xad, 0x0d, 0xcb, 0xd9, 0xc1,
	0xd5, 0x91, 0xa1, 0x98, 0x5d, 0xad, 0x0b, 0xab, 0x7e, 0x42, 0x02, 0x3b, 0x49, 0x69, 0xac, 0x2b,
	0x86, 0x62, 0xae, 0x68, 0x1d, 0x58, 0xf1, 0x13, 0x12, 0x53, 0xdb, 0x9d, 0xe8, 0xaa, 0xb0, 0x68,
	0x00, 0x31, 0xbb, 0xa4, 0xc4, 0x0f, 0x5d, 0x7a, 0xad, 0xd7, 0x0c, 0xc5, 0xd4, 0xb4, 0x6d, 0x68,
	0x24, 0x17, 0x6c, 0x4c, 0xa2, 0x4b, 0x7b, 0x42, 0x63, 0xbd, 0x6e, 0x28, 0x66, 0xa3, 0xbf, 0xb1,
	0x13, 0x9d, 0xb9, 0x3b, 0x99, 0x89, 0x88, 0x6b, 0x9e, 0x15, 0x7f, 0x46, 0xd0, 0x0c, 0x3c, 0x22,
	0x58, 0x72, 0x8c, 0xec, 0x90, 0x63, 0xdc, 0x87, 0x55, 0x61, 0x48, 0x27, 0x11, 0x15, 0x18, 0xad,
	0x7e, 0x57, 0xc4, 0xe2, 0x55, 0x1f, 0x1d, 0x0d, 0xc9, 0xe9, 0xcb, 0x63, 0x4b, 0xdb, 0x80, 0xb5,
	0xac, 0x1e, 0x87, 0x86, 0x94, 0x3b, 0xab, 0xc2, 0x79, 0x13, 0xda, 0xc2, 0x1c, 0xd8, 0xd7, 0x39,
	0x4e, 0x4d, 0x5c, 0x3c, 0x94, 0x51, 0x79, 0xc9, 0x7a, 0xdd, 0x50, 0xcd, 0x46, 0x7f, 0x5d, 0x44,
	0x2d, 0xaa, 0x82, 0x77, 0xa1, 0x3d, 0xea, 0x0f, 0x88, 0x54, 0xf8, 0x29, 0x27, 0xcc, 0x81, 0xf8,
	0xbd, 0x60, 0x6c, 0x48, 0xa0, 0xd9, 0x3a, 0xb0, 0x0b, 0xdd, 0x41, 0x7f, 0xc4, 0x1d, 0x07, 0x31,
	0xb5, 0x53, 0xca, 0xdd, 0x8b, 0xb5, 0xa0, 0xca, 0xb5, 0x28, 0x02, 0xb9, 0x28, 0x35, 0xaf, 0x4f,
	0xc3, 0x5f, 0x11, 0x74, 0x25, 0xdf, 0x3f, 0x4c, 0xa3, 0x3d, 0x80, 0x95, 0x98, 0xa6, 0xc4, 0x61,
	0x2e, 0x15, 0xfa, 0xb5, 0xa4, 0x58, 0x16, 0x19, 0x8e, 0x0e, 0xc8, 0x89, 0x75, 0x4a, 0x06, 0x47,
	0xfb, 0x56, 0x51, 0x99, 0xba, 0x81, 0xe6, 0x2b, 0xf3, 0x08, 0xda, 0x52, 0x99, 0x43, 0xe6, 0x87,
	0x02, 0xb8, 0x98, 0x13, 0x89, 0x9c, 0x33, 0x8d, 0x20, 0xc0, 0xf0, 0x39, 0xac, 0x4b, 0xbf, 0xc7,
	0x76, 0x92, 0xfe, 0xd6, 0xf7, 0x4f, 0x7a, 0x06, 0xbf, 0x47, 0xd3, 0xff, 0xfc, 0x4e, 0x80, 0x05,
	0x95, 0xd4, 0x8a, 0x2a, 0xd5, 0x16, 0xa9, 0xb4, 0x0b, 0x1d, 0x59, 0xed, 0x73, 0x6a, 0xbf, 0xa5,
	0xd5, 0x65, 0x7a, 0x0d, 0x1d, 0x49, 0x7f, 0x37, 0xc7, 0x8a, 0xf8, 0xd8, 0x82, 0xa6, 0x04, 0x3b,
	0xe1, 0x7b, 0xa0, 0x5a, 0xec, 0xd2, 0xe2, 0xc0, 0xaf, 0xa0, 0x99, 0x0f, 0x56, 0xf5, 0x30, 0x15,
	0x11, 0x47, 0x53, 0x09, 0x46, 0x93, 0xd0, 0xc9, 0xe2, 0x17, 0x06, 0x1e, 0x2d, 0x1c, 0x78, 0xbe,
	0x31, 0x68, 0x10, 0xa5, 0x13, 0x72, 0xfb, 0x5a, 0x31, 0x54, 0xb3, 0x8b, 0xb7, 0xe1, 0xff, 0x99,
	0xa0, 0x03, 0x76, 0x15, 0xa6, 0xfb, 0x6c, 0x1c, 0x72, 0x70, 0x87, 0x1f, 0x88, 0xcb, 0xc6, 0x61,
	0xb6, 0xb3, 0xf0, 0x0b, 0xd8, 0x94, 0x1a, 0x0d, 0xc5, 0xfa, 0x7c, 0xe6, 0x3b, 0x6f, 0x8e, 0xc5,
	0xfa, 0xa9, 0x56, 0xe7, 0x3d, 0x68, 0xa5, 0x76, 0x4c, 0x4a, 0xe3, 0xfe, 0x0e, 0x36, 0x25, 0xc3,
	0x5f, 0x8d, 0x5b, 0x71, 0xbe, 0xf1, 0x17, 0x34, 0x5d, 0x6a, 0xa7, 0x17, 0x31, 0x1b, 0x1f, 0xee,
	0x59, 0x9e, 0x57, 0x39, 0x73, 0x12, 0x3b, 0xe5, 0xcc, 0xeb, 0xd0, 0xe0, 0xf6, 0xfc, 0xcb, 0x53,
	0x5b, 0x80, 0x59, 0xcf, 0x1f, 0x73, 0x7b, 0xfe, 0x78, 0x29, 0x6f, 0x2d, 0xea, 0x79, 0xd9, 0xa8,
	0x2f, 0x1b, 0x8a, 0xd9, 0xc4, 0x1f, 0x6f, 0x97, 0xe2, 0x0c, 0x66, 0xe9, 0xc3, 0x52, 0x46, 0x52,
	0xe6, 0x21, 0xa9, 0x0b, 0x90, 0x6a, 0xf3, 0x90, 0xea, 0x25, 0xa4, 0x25, 0x81, 0xf4, 0xe4, 0x76,
	0x4d, 0x4f, 0x7b, 0xa5, 0x4c, 0x54, 0x6c, 0xa5, 0x4c, 0xb8, 0x16, 0x2c, 0x39, 0x76, 0x48, 0x3c,
	0x96, 0xcd, 0xcd, 0x5e, 0xe7, 0xdb, 0x4d, 0x0f, 0x7d, 0xbf, 0xe9, 0xa1, 0x1f, 0x37, 0x3d, 0xf4,
	0xe9, 0x67, 0xef, 0xbf, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xd4, 0xb7, 0x2a, 0xff, 0x07,
	0x00, 0x00,
}

func (m *RoomSeatInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomSeatInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SeatId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.SeatId)<<1)^uint32((*m.SeatId>>31))))
	}
	if m.IsMaster == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		if *m.IsMaster {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IsReady == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		if *m.IsReady {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.ShowPlayer == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(m.ShowPlayer.Size()))
		n1, err1 := m.ShowPlayer.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += n1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MgRoomInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MgRoomInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.RoomType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RoomType))
	}
	if m.RoomSceneId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomSceneId)<<1)^uint32((*m.RoomSceneId>>31))))
	}
	if m.RoomMaxPlayer == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomMaxPlayer)<<1)^uint32((*m.RoomMaxPlayer>>31))))
	}
	if len(m.RoomSeat) > 0 {
		for _, msg := range m.RoomSeat {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintMG_Room(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_RoomInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_RoomInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomInfo == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(m.RoomInfo.Size()))
		n2, err2 := m.RoomInfo.MarshalTo(dAtA[i:])
		if err2 != nil {
			return 0, err2
		}
		i += n2
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_CreateRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_CreateRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RoomType))
	}
	if m.RoomSceneId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomSceneId)<<1)^uint32((*m.RoomSceneId>>31))))
	}
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_CreateRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_CreateRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RoomType))
	}
	if m.RoomSceneId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomSceneId)<<1)^uint32((*m.RoomSceneId>>31))))
	}
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RetCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RetCode))
	}
	if m.RoomInfo != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(m.RoomInfo.Size()))
		n3, err3 := m.RoomInfo.MarshalTo(dAtA[i:])
		if err3 != nil {
			return 0, err3
		}
		i += n3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_JoinRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_JoinRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_FastJoinRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_FastJoinRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RoomType))
	}
	if m.RoomSceneId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomSceneId)<<1)^uint32((*m.RoomSceneId>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_JoinRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_JoinRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.RetCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RetCode))
	}
	if m.RoomInfo != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(m.RoomInfo.Size()))
		n4, err4 := m.RoomInfo.MarshalTo(dAtA[i:])
		if err4 != nil {
			return 0, err4
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_LeaveRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_LeaveRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_LeaveRoom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_LeaveRoom) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.RetCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_Ready) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_Ready) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.IsReady == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		if *m.IsReady {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_Ready) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_Ready) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.RetCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_SyncReady) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_SyncReady) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.RoomSeat) > 0 {
		for _, msg := range m.RoomSeat {
			dAtA[i] = 0xa
			i++
			i = encodeVarintMG_Room(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.EmptyRoomSeat) > 0 {
		for _, num := range m.EmptyRoomSeat {
			dAtA[i] = 0x10
			i++
			x5 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x5 >= 1<<7 {
				dAtA[i] = uint8(uint64(x5)&0x7f | 0x80)
				x5 >>= 7
				i++
			}
			dAtA[i] = uint8(x5)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_SyncCountDown) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_SyncCountDown) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CountDown == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.CountDown)<<1)^uint32((*m.CountDown>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_MasterKickPlayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_MasterKickPlayer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.TarRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.TarRoleIndex)<<1)^uint64((*m.TarRoleIndex>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_MasterKickPlayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_MasterKickPlayer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.TarRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.TarRoleIndex)<<1)^uint64((*m.TarRoleIndex>>63))))
	}
	if m.RetCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *C2S_MG_ThrowJBEgg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_MG_ThrowJBEgg) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.SrcRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.SrcRoleIndex)<<1)^uint64((*m.SrcRoleIndex>>63))))
	}
	if m.SrcSeatId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.SrcSeatId)<<1)^uint32((*m.SrcSeatId>>31))))
	}
	if m.TarRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.TarRoleIndex)<<1)^uint64((*m.TarRoleIndex>>63))))
	}
	if m.TarSeatId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x30
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.TarSeatId)<<1)^uint32((*m.TarSeatId>>31))))
	}
	if m.EggType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(len(m.EggType)))
		i += copy(dAtA[i:], m.EggType)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_ThrowJBEgg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_ThrowJBEgg) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.SrcRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.SrcRoleIndex)<<1)^uint64((*m.SrcRoleIndex>>63))))
	}
	if m.SrcSeatId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.SrcSeatId)<<1)^uint32((*m.SrcSeatId>>31))))
	}
	if m.TarRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint64(*m.TarRoleIndex)<<1)^uint64((*m.TarRoleIndex>>63))))
	}
	if m.TarSeatId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.TarSeatId)<<1)^uint32((*m.TarSeatId>>31))))
	}
	if m.EggType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64(len(m.EggType)))
		i += copy(dAtA[i:], m.EggType)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *S2C_MG_CountDown) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_MG_CountDown) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoomId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.RoomId)<<1)^uint32((*m.RoomId>>31))))
	}
	if m.CountDown == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMG_Room(dAtA, i, uint64((uint32(*m.CountDown)<<1)^uint32((*m.CountDown>>31))))
	}
	if m.CanGo == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		if *m.CanGo {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintMG_Room(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RoomSeatInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SeatId != nil {
		n += 1 + sozMG_Room(uint64(*m.SeatId))
	}
	if m.IsMaster != nil {
		n += 2
	}
	if m.IsReady != nil {
		n += 2
	}
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.ShowPlayer != nil {
		l = m.ShowPlayer.Size()
		n += 1 + l + sovMG_Room(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MgRoomInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.RoomType != nil {
		n += 1 + sovMG_Room(uint64(*m.RoomType))
	}
	if m.RoomSceneId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomSceneId))
	}
	if m.RoomMaxPlayer != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomMaxPlayer))
	}
	if len(m.RoomSeat) > 0 {
		for _, e := range m.RoomSeat {
			l = e.Size()
			n += 1 + l + sovMG_Room(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_RoomInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomInfo != nil {
		l = m.RoomInfo.Size()
		n += 1 + l + sovMG_Room(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_CreateRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomType != nil {
		n += 1 + sovMG_Room(uint64(*m.RoomType))
	}
	if m.RoomSceneId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomSceneId))
	}
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_CreateRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomType != nil {
		n += 1 + sovMG_Room(uint64(*m.RoomType))
	}
	if m.RoomSceneId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomSceneId))
	}
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RetCode != nil {
		n += 1 + sovMG_Room(uint64(*m.RetCode))
	}
	if m.RoomInfo != nil {
		l = m.RoomInfo.Size()
		n += 1 + l + sovMG_Room(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_JoinRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_FastJoinRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomType != nil {
		n += 1 + sovMG_Room(uint64(*m.RoomType))
	}
	if m.RoomSceneId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomSceneId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_JoinRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.RetCode != nil {
		n += 1 + sovMG_Room(uint64(*m.RetCode))
	}
	if m.RoomInfo != nil {
		l = m.RoomInfo.Size()
		n += 1 + l + sovMG_Room(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_LeaveRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_LeaveRoom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.RetCode != nil {
		n += 1 + sovMG_Room(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_Ready) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.IsReady != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_Ready) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.RetCode != nil {
		n += 1 + sovMG_Room(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_SyncReady) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RoomSeat) > 0 {
		for _, e := range m.RoomSeat {
			l = e.Size()
			n += 1 + l + sovMG_Room(uint64(l))
		}
	}
	if len(m.EmptyRoomSeat) > 0 {
		for _, e := range m.EmptyRoomSeat {
			n += 1 + sozMG_Room(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_SyncCountDown) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CountDown != nil {
		n += 1 + sozMG_Room(uint64(*m.CountDown))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_MasterKickPlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.TarRoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.TarRoleIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_MasterKickPlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.TarRoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.TarRoleIndex))
	}
	if m.RetCode != nil {
		n += 1 + sovMG_Room(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_MG_ThrowJBEgg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.RoleIndex))
	}
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.SrcRoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.SrcRoleIndex))
	}
	if m.SrcSeatId != nil {
		n += 1 + sozMG_Room(uint64(*m.SrcSeatId))
	}
	if m.TarRoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.TarRoleIndex))
	}
	if m.TarSeatId != nil {
		n += 1 + sozMG_Room(uint64(*m.TarSeatId))
	}
	if m.EggType != nil {
		l = len(m.EggType)
		n += 1 + l + sovMG_Room(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_ThrowJBEgg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.SrcRoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.SrcRoleIndex))
	}
	if m.SrcSeatId != nil {
		n += 1 + sozMG_Room(uint64(*m.SrcSeatId))
	}
	if m.TarRoleIndex != nil {
		n += 1 + sozMG_Room(uint64(*m.TarRoleIndex))
	}
	if m.TarSeatId != nil {
		n += 1 + sozMG_Room(uint64(*m.TarSeatId))
	}
	if m.EggType != nil {
		l = len(m.EggType)
		n += 1 + l + sovMG_Room(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_MG_CountDown) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomId != nil {
		n += 1 + sozMG_Room(uint64(*m.RoomId))
	}
	if m.CountDown != nil {
		n += 1 + sozMG_Room(uint64(*m.CountDown))
	}
	if m.CanGo != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMG_Room(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMG_Room(x uint64) (n int) {
	return sovMG_Room(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RoomSeatInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: room_seat_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: room_seat_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeatId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SeatId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMaster", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsMaster = &b
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsReady", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsReady = &b
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowPlayer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShowPlayer == nil {
				m.ShowPlayer = &PlayerShowInfo{}
			}
			if err := m.ShowPlayer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MgRoomInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mg_room_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mg_room_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomType", wireType)
			}
			var v MG_ROOM_TYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= MG_ROOM_TYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RoomType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSceneId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomSceneId = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomMaxPlayer", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomMaxPlayer = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSeat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomSeat = append(m.RoomSeat, &RoomSeatInfo{})
			if err := m.RoomSeat[len(m.RoomSeat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_RoomInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_RoomInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_RoomInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomInfo == nil {
				m.RoomInfo = &MgRoomInfo{}
			}
			if err := m.RoomInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_CreateRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_CreateRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_CreateRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomType", wireType)
			}
			var v MG_ROOM_TYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= MG_ROOM_TYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RoomType = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSceneId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomSceneId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_CreateRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_CreateRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_CreateRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomType", wireType)
			}
			var v MG_ROOM_TYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= MG_ROOM_TYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RoomType = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSceneId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomSceneId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomInfo == nil {
				m.RoomInfo = &MgRoomInfo{}
			}
			if err := m.RoomInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_JoinRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_JoinRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_JoinRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_FastJoinRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_FastJoinRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_FastJoinRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomType", wireType)
			}
			var v MG_ROOM_TYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= MG_ROOM_TYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RoomType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSceneId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomSceneId = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_JoinRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_JoinRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_JoinRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomInfo == nil {
				m.RoomInfo = &MgRoomInfo{}
			}
			if err := m.RoomInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_LeaveRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_LeaveRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_LeaveRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_LeaveRoom) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_LeaveRoom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_LeaveRoom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_Ready) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_Ready: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_Ready: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsReady", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsReady = &b
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_Ready) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_Ready: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_Ready: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_SyncReady) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_SyncReady: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_SyncReady: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSeat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomSeat = append(m.RoomSeat, &RoomSeatInfo{})
			if err := m.RoomSeat[len(m.RoomSeat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMG_Room
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.EmptyRoomSeat = append(m.EmptyRoomSeat, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMG_Room
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMG_Room
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMG_Room
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.EmptyRoomSeat) == 0 {
					m.EmptyRoomSeat = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMG_Room
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.EmptyRoomSeat = append(m.EmptyRoomSeat, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field EmptyRoomSeat", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_SyncCountDown) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_SyncCountDown: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_SyncCountDown: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountDown", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.CountDown = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_MasterKickPlayer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_MasterKickPlayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_MasterKickPlayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TarRoleIndex = &v2
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_MasterKickPlayer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_MasterKickPlayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_MasterKickPlayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TarRoleIndex = &v2
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_MG_ThrowJBEgg) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_MG_ThrowJBEgg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_MG_ThrowJBEgg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.SrcRoleIndex = &v2
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcSeatId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SrcSeatId = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TarRoleIndex = &v2
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarSeatId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TarSeatId = &v
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EggType", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EggType = append(m.EggType[:0], dAtA[iNdEx:postIndex]...)
			if m.EggType == nil {
				m.EggType = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_ThrowJBEgg) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_ThrowJBEgg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_ThrowJBEgg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.SrcRoleIndex = &v2
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcSeatId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SrcSeatId = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TarRoleIndex = &v2
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarSeatId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TarSeatId = &v
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EggType", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMG_Room
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMG_Room
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EggType = append(m.EggType[:0], dAtA[iNdEx:postIndex]...)
			if m.EggType == nil {
				m.EggType = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000020)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_MG_CountDown) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_MG_Count_down: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_MG_Count_down: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RoomId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountDown", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.CountDown = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanGo", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.CanGo = &b
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipMG_Room(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMG_Room
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMG_Room(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMG_Room
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMG_Room
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMG_Room
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthMG_Room
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMG_Room
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMG_Room(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthMG_Room
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMG_Room = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMG_Room   = fmt.Errorf("proto: integer overflow")
)
