// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Sql_Login.proto

package pbd

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 套装相关
type SuitGoodsInfo struct {
	CanBuySuitShopId     *int32   `protobuf:"zigzag32,1,req,name=can_buy_suit_shop_id" json:"can_buy_suit_shop_id,omitempty"`
	IsBuy                *bool    `protobuf:"varint,2,req,name=is_buy" json:"is_buy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuitGoodsInfo) Reset()         { *m = SuitGoodsInfo{} }
func (m *SuitGoodsInfo) String() string { return proto.CompactTextString(m) }
func (*SuitGoodsInfo) ProtoMessage()    {}
func (*SuitGoodsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{0}
}
func (m *SuitGoodsInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SuitGoodsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SuitGoodsInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SuitGoodsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuitGoodsInfo.Merge(m, src)
}
func (m *SuitGoodsInfo) XXX_Size() int {
	return m.Size()
}
func (m *SuitGoodsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SuitGoodsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SuitGoodsInfo proto.InternalMessageInfo

func (m *SuitGoodsInfo) GetCanBuySuitShopId() int32 {
	if m != nil && m.CanBuySuitShopId != nil {
		return *m.CanBuySuitShopId
	}
	return 0
}

func (m *SuitGoodsInfo) GetIsBuy() bool {
	if m != nil && m.IsBuy != nil {
		return *m.IsBuy
	}
	return false
}

type SuitInfo struct {
	SuitId                   *int32   `protobuf:"zigzag32,1,req,name=suit_id" json:"suit_id,omitempty"`
	SuitUnixtimeTimeOutStamp *int64   `protobuf:"zigzag64,2,req,name=suit_unixtime_time_out_stamp" json:"suit_unixtime_time_out_stamp,omitempty"`
	SuitDurationType         *int32   `protobuf:"zigzag32,3,req,name=suit_duration_type" json:"suit_duration_type,omitempty"`
	GetTimestamp             *int64   `protobuf:"zigzag64,4,req,name=get_timestamp" json:"get_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *SuitInfo) Reset()         { *m = SuitInfo{} }
func (m *SuitInfo) String() string { return proto.CompactTextString(m) }
func (*SuitInfo) ProtoMessage()    {}
func (*SuitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{1}
}
func (m *SuitInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SuitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SuitInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SuitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuitInfo.Merge(m, src)
}
func (m *SuitInfo) XXX_Size() int {
	return m.Size()
}
func (m *SuitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SuitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SuitInfo proto.InternalMessageInfo

func (m *SuitInfo) GetSuitId() int32 {
	if m != nil && m.SuitId != nil {
		return *m.SuitId
	}
	return 0
}

func (m *SuitInfo) GetSuitUnixtimeTimeOutStamp() int64 {
	if m != nil && m.SuitUnixtimeTimeOutStamp != nil {
		return *m.SuitUnixtimeTimeOutStamp
	}
	return 0
}

func (m *SuitInfo) GetSuitDurationType() int32 {
	if m != nil && m.SuitDurationType != nil {
		return *m.SuitDurationType
	}
	return 0
}

func (m *SuitInfo) GetGetTimestamp() int64 {
	if m != nil && m.GetTimestamp != nil {
		return *m.GetTimestamp
	}
	return 0
}

type ListDbRoleSuitInfo struct {
	BuySuit                []*SuitGoodsInfo `protobuf:"bytes,1,rep,name=buy_suit" json:"buy_suit,omitempty"`
	SuitShopLastUpdateTime *int64           `protobuf:"zigzag64,2,req,name=suit_shop_last_update_time" json:"suit_shop_last_update_time,omitempty"`
	CurrentSuit            *SuitInfo        `protobuf:"bytes,3,opt,name=current_suit" json:"current_suit,omitempty"`
	HaveSuits              []*SuitInfo      `protobuf:"bytes,4,rep,name=have_suits" json:"have_suits,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}         `json:"-"`
	XXX_unrecognized       []byte           `json:"-"`
	XXX_sizecache          int32            `json:"-"`
}

func (m *ListDbRoleSuitInfo) Reset()         { *m = ListDbRoleSuitInfo{} }
func (m *ListDbRoleSuitInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleSuitInfo) ProtoMessage()    {}
func (*ListDbRoleSuitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{2}
}
func (m *ListDbRoleSuitInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleSuitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleSuitInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleSuitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleSuitInfo.Merge(m, src)
}
func (m *ListDbRoleSuitInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleSuitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleSuitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleSuitInfo proto.InternalMessageInfo

func (m *ListDbRoleSuitInfo) GetBuySuit() []*SuitGoodsInfo {
	if m != nil {
		return m.BuySuit
	}
	return nil
}

func (m *ListDbRoleSuitInfo) GetSuitShopLastUpdateTime() int64 {
	if m != nil && m.SuitShopLastUpdateTime != nil {
		return *m.SuitShopLastUpdateTime
	}
	return 0
}

func (m *ListDbRoleSuitInfo) GetCurrentSuit() *SuitInfo {
	if m != nil {
		return m.CurrentSuit
	}
	return nil
}

func (m *ListDbRoleSuitInfo) GetHaveSuits() []*SuitInfo {
	if m != nil {
		return m.HaveSuits
	}
	return nil
}

// 表情相关
type FaceGoodsInfo struct {
	CanBuyFaceShopId     *int32   `protobuf:"zigzag32,1,req,name=can_buy_face_shop_id" json:"can_buy_face_shop_id,omitempty"`
	IsBuy                *bool    `protobuf:"varint,2,req,name=is_buy" json:"is_buy,omitempty"`
	FaceShopIndex        *int32   `protobuf:"zigzag32,3,req,name=face_shop_index" json:"face_shop_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaceGoodsInfo) Reset()         { *m = FaceGoodsInfo{} }
func (m *FaceGoodsInfo) String() string { return proto.CompactTextString(m) }
func (*FaceGoodsInfo) ProtoMessage()    {}
func (*FaceGoodsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{3}
}
func (m *FaceGoodsInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FaceGoodsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FaceGoodsInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FaceGoodsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceGoodsInfo.Merge(m, src)
}
func (m *FaceGoodsInfo) XXX_Size() int {
	return m.Size()
}
func (m *FaceGoodsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceGoodsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FaceGoodsInfo proto.InternalMessageInfo

func (m *FaceGoodsInfo) GetCanBuyFaceShopId() int32 {
	if m != nil && m.CanBuyFaceShopId != nil {
		return *m.CanBuyFaceShopId
	}
	return 0
}

func (m *FaceGoodsInfo) GetIsBuy() bool {
	if m != nil && m.IsBuy != nil {
		return *m.IsBuy
	}
	return false
}

func (m *FaceGoodsInfo) GetFaceShopIndex() int32 {
	if m != nil && m.FaceShopIndex != nil {
		return *m.FaceShopIndex
	}
	return 0
}

type FaceInfo struct {
	FaceId                   *int32   `protobuf:"zigzag32,1,req,name=face_id" json:"face_id,omitempty"`
	FaceUnixtimeTimeOutStamp *int64   `protobuf:"zigzag64,2,req,name=face_unixtime_time_out_stamp" json:"face_unixtime_time_out_stamp,omitempty"`
	FaceDurationType         *int32   `protobuf:"zigzag32,3,req,name=face_duration_type" json:"face_duration_type,omitempty"`
	GetTimestamp             *int64   `protobuf:"zigzag64,4,req,name=get_timestamp" json:"get_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *FaceInfo) Reset()         { *m = FaceInfo{} }
func (m *FaceInfo) String() string { return proto.CompactTextString(m) }
func (*FaceInfo) ProtoMessage()    {}
func (*FaceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{4}
}
func (m *FaceInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FaceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FaceInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FaceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceInfo.Merge(m, src)
}
func (m *FaceInfo) XXX_Size() int {
	return m.Size()
}
func (m *FaceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FaceInfo proto.InternalMessageInfo

func (m *FaceInfo) GetFaceId() int32 {
	if m != nil && m.FaceId != nil {
		return *m.FaceId
	}
	return 0
}

func (m *FaceInfo) GetFaceUnixtimeTimeOutStamp() int64 {
	if m != nil && m.FaceUnixtimeTimeOutStamp != nil {
		return *m.FaceUnixtimeTimeOutStamp
	}
	return 0
}

func (m *FaceInfo) GetFaceDurationType() int32 {
	if m != nil && m.FaceDurationType != nil {
		return *m.FaceDurationType
	}
	return 0
}

func (m *FaceInfo) GetGetTimestamp() int64 {
	if m != nil && m.GetTimestamp != nil {
		return *m.GetTimestamp
	}
	return 0
}

// 玩家通用商店商店
type RoleCommonShop struct {
	ShopList             []*CommonShopInfo `protobuf:"bytes,1,rep,name=shop_list" json:"shop_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RoleCommonShop) Reset()         { *m = RoleCommonShop{} }
func (m *RoleCommonShop) String() string { return proto.CompactTextString(m) }
func (*RoleCommonShop) ProtoMessage()    {}
func (*RoleCommonShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{5}
}
func (m *RoleCommonShop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleCommonShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleCommonShop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleCommonShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleCommonShop.Merge(m, src)
}
func (m *RoleCommonShop) XXX_Size() int {
	return m.Size()
}
func (m *RoleCommonShop) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleCommonShop.DiscardUnknown(m)
}

var xxx_messageInfo_RoleCommonShop proto.InternalMessageInfo

func (m *RoleCommonShop) GetShopList() []*CommonShopInfo {
	if m != nil {
		return m.ShopList
	}
	return nil
}

// 签到信息
type ListSignInfo struct {
	SignYear             *int32   `protobuf:"zigzag32,1,req,name=sign_year" json:"sign_year,omitempty"`
	SignMonth            *int32   `protobuf:"zigzag32,2,req,name=sign_month" json:"sign_month,omitempty"`
	MonthTotalDays       *int32   `protobuf:"zigzag32,3,req,name=month_total_days" json:"month_total_days,omitempty"`
	SignBeginDay         *int32   `protobuf:"zigzag32,4,req,name=sign_begin_day" json:"sign_begin_day,omitempty"`
	NextSignDay          *int32   `protobuf:"zigzag32,5,req,name=next_sign_day" json:"next_sign_day,omitempty"`
	SignCount            *int32   `protobuf:"zigzag32,6,req,name=sign_count" json:"sign_count,omitempty"`
	RetroactiveCount     *int32   `protobuf:"zigzag32,7,req,name=retroactive_count" json:"retroactive_count,omitempty"`
	LotteryDays          *int32   `protobuf:"zigzag32,8,req,name=lottery_days" json:"lottery_days,omitempty"`
	MissCount            *int32   `protobuf:"zigzag32,9,req,name=miss_count" json:"miss_count,omitempty"`
	RefreshMonthDay      *int32   `protobuf:"zigzag32,10,req,name=refresh_month_day" json:"refresh_month_day,omitempty"`
	TodaySign            *bool    `protobuf:"varint,11,req,name=today_sign" json:"today_sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSignInfo) Reset()         { *m = ListSignInfo{} }
func (m *ListSignInfo) String() string { return proto.CompactTextString(m) }
func (*ListSignInfo) ProtoMessage()    {}
func (*ListSignInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{6}
}
func (m *ListSignInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListSignInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListSignInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListSignInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSignInfo.Merge(m, src)
}
func (m *ListSignInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListSignInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSignInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListSignInfo proto.InternalMessageInfo

func (m *ListSignInfo) GetSignYear() int32 {
	if m != nil && m.SignYear != nil {
		return *m.SignYear
	}
	return 0
}

func (m *ListSignInfo) GetSignMonth() int32 {
	if m != nil && m.SignMonth != nil {
		return *m.SignMonth
	}
	return 0
}

func (m *ListSignInfo) GetMonthTotalDays() int32 {
	if m != nil && m.MonthTotalDays != nil {
		return *m.MonthTotalDays
	}
	return 0
}

func (m *ListSignInfo) GetSignBeginDay() int32 {
	if m != nil && m.SignBeginDay != nil {
		return *m.SignBeginDay
	}
	return 0
}

func (m *ListSignInfo) GetNextSignDay() int32 {
	if m != nil && m.NextSignDay != nil {
		return *m.NextSignDay
	}
	return 0
}

func (m *ListSignInfo) GetSignCount() int32 {
	if m != nil && m.SignCount != nil {
		return *m.SignCount
	}
	return 0
}

func (m *ListSignInfo) GetRetroactiveCount() int32 {
	if m != nil && m.RetroactiveCount != nil {
		return *m.RetroactiveCount
	}
	return 0
}

func (m *ListSignInfo) GetLotteryDays() int32 {
	if m != nil && m.LotteryDays != nil {
		return *m.LotteryDays
	}
	return 0
}

func (m *ListSignInfo) GetMissCount() int32 {
	if m != nil && m.MissCount != nil {
		return *m.MissCount
	}
	return 0
}

func (m *ListSignInfo) GetRefreshMonthDay() int32 {
	if m != nil && m.RefreshMonthDay != nil {
		return *m.RefreshMonthDay
	}
	return 0
}

func (m *ListSignInfo) GetTodaySign() bool {
	if m != nil && m.TodaySign != nil {
		return *m.TodaySign
	}
	return false
}

type SevenDayDetail struct {
	Day                  *int32   `protobuf:"zigzag32,1,req,name=day" json:"day,omitempty"`
	GetFlag              *int32   `protobuf:"zigzag32,2,req,name=get_flag" json:"get_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SevenDayDetail) Reset()         { *m = SevenDayDetail{} }
func (m *SevenDayDetail) String() string { return proto.CompactTextString(m) }
func (*SevenDayDetail) ProtoMessage()    {}
func (*SevenDayDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{7}
}
func (m *SevenDayDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SevenDayDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SevenDayDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SevenDayDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SevenDayDetail.Merge(m, src)
}
func (m *SevenDayDetail) XXX_Size() int {
	return m.Size()
}
func (m *SevenDayDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SevenDayDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SevenDayDetail proto.InternalMessageInfo

func (m *SevenDayDetail) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *SevenDayDetail) GetGetFlag() int32 {
	if m != nil && m.GetFlag != nil {
		return *m.GetFlag
	}
	return 0
}

// 七天登录奖励
type SevenDayInfo struct {
	TotalLoginDays       *int32            `protobuf:"zigzag32,1,req,name=total_login_days" json:"total_login_days,omitempty"`
	DayInfo              []*SevenDayDetail `protobuf:"bytes,2,rep,name=day_info" json:"day_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SevenDayInfo) Reset()         { *m = SevenDayInfo{} }
func (m *SevenDayInfo) String() string { return proto.CompactTextString(m) }
func (*SevenDayInfo) ProtoMessage()    {}
func (*SevenDayInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{8}
}
func (m *SevenDayInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SevenDayInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SevenDayInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SevenDayInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SevenDayInfo.Merge(m, src)
}
func (m *SevenDayInfo) XXX_Size() int {
	return m.Size()
}
func (m *SevenDayInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SevenDayInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SevenDayInfo proto.InternalMessageInfo

func (m *SevenDayInfo) GetTotalLoginDays() int32 {
	if m != nil && m.TotalLoginDays != nil {
		return *m.TotalLoginDays
	}
	return 0
}

func (m *SevenDayInfo) GetDayInfo() []*SevenDayDetail {
	if m != nil {
		return m.DayInfo
	}
	return nil
}

// 副本相关
// 关卡列表
type RiskInfo struct {
	Id                   *int32   `protobuf:"zigzag32,1,req,name=id" json:"id,omitempty"`
	Passed               *int32   `protobuf:"zigzag32,2,req,name=passed" json:"passed,omitempty"`
	FightCount           *int32   `protobuf:"zigzag32,3,opt,name=fight_count" json:"fight_count,omitempty"`
	ResetCount           *int32   `protobuf:"zigzag32,4,opt,name=reset_count" json:"reset_count,omitempty"`
	ShareFlag            *int32   `protobuf:"zigzag32,5,opt,name=share_flag" json:"share_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskInfo) Reset()         { *m = RiskInfo{} }
func (m *RiskInfo) String() string { return proto.CompactTextString(m) }
func (*RiskInfo) ProtoMessage()    {}
func (*RiskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{9}
}
func (m *RiskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RiskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RiskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RiskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskInfo.Merge(m, src)
}
func (m *RiskInfo) XXX_Size() int {
	return m.Size()
}
func (m *RiskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RiskInfo proto.InternalMessageInfo

func (m *RiskInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RiskInfo) GetPassed() int32 {
	if m != nil && m.Passed != nil {
		return *m.Passed
	}
	return 0
}

func (m *RiskInfo) GetFightCount() int32 {
	if m != nil && m.FightCount != nil {
		return *m.FightCount
	}
	return 0
}

func (m *RiskInfo) GetResetCount() int32 {
	if m != nil && m.ResetCount != nil {
		return *m.ResetCount
	}
	return 0
}

func (m *RiskInfo) GetShareFlag() int32 {
	if m != nil && m.ShareFlag != nil {
		return *m.ShareFlag
	}
	return 0
}

// 宝箱奖励
type RewardBox struct {
	Id                   *int32   `protobuf:"zigzag32,1,req,name=id" json:"id,omitempty"`
	Get                  *int32   `protobuf:"zigzag32,2,req,name=get" json:"get,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RewardBox) Reset()         { *m = RewardBox{} }
func (m *RewardBox) String() string { return proto.CompactTextString(m) }
func (*RewardBox) ProtoMessage()    {}
func (*RewardBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{10}
}
func (m *RewardBox) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RewardBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RewardBox.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RewardBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardBox.Merge(m, src)
}
func (m *RewardBox) XXX_Size() int {
	return m.Size()
}
func (m *RewardBox) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardBox.DiscardUnknown(m)
}

var xxx_messageInfo_RewardBox proto.InternalMessageInfo

func (m *RewardBox) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RewardBox) GetGet() int32 {
	if m != nil && m.Get != nil {
		return *m.Get
	}
	return 0
}

// 章节列表
type ChapterInfo struct {
	Id                   *int32       `protobuf:"zigzag32,1,req,name=id" json:"id,omitempty"`
	Dup                  []*RiskInfo  `protobuf:"bytes,2,rep,name=dup" json:"dup,omitempty"`
	Box                  []*RewardBox `protobuf:"bytes,3,rep,name=box" json:"box,omitempty"`
	GetReward            *int32       `protobuf:"zigzag32,4,req,name=get_reward" json:"get_reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ChapterInfo) Reset()         { *m = ChapterInfo{} }
func (m *ChapterInfo) String() string { return proto.CompactTextString(m) }
func (*ChapterInfo) ProtoMessage()    {}
func (*ChapterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{11}
}
func (m *ChapterInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChapterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChapterInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChapterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterInfo.Merge(m, src)
}
func (m *ChapterInfo) XXX_Size() int {
	return m.Size()
}
func (m *ChapterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterInfo proto.InternalMessageInfo

func (m *ChapterInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChapterInfo) GetDup() []*RiskInfo {
	if m != nil {
		return m.Dup
	}
	return nil
}

func (m *ChapterInfo) GetBox() []*RewardBox {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *ChapterInfo) GetGetReward() int32 {
	if m != nil && m.GetReward != nil {
		return *m.GetReward
	}
	return 0
}

// 玩家表情偏好信息
type RoleFacePreferInfo struct {
	AutoShowFlag         *bool    `protobuf:"varint,1,req,name=auto_show_flag" json:"auto_show_flag,omitempty"`
	FaceList             []int32  `protobuf:"zigzag32,2,rep,name=face_list" json:"face_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleFacePreferInfo) Reset()         { *m = RoleFacePreferInfo{} }
func (m *RoleFacePreferInfo) String() string { return proto.CompactTextString(m) }
func (*RoleFacePreferInfo) ProtoMessage()    {}
func (*RoleFacePreferInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{12}
}
func (m *RoleFacePreferInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleFacePreferInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleFacePreferInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleFacePreferInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleFacePreferInfo.Merge(m, src)
}
func (m *RoleFacePreferInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoleFacePreferInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleFacePreferInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoleFacePreferInfo proto.InternalMessageInfo

func (m *RoleFacePreferInfo) GetAutoShowFlag() bool {
	if m != nil && m.AutoShowFlag != nil {
		return *m.AutoShowFlag
	}
	return false
}

func (m *RoleFacePreferInfo) GetFaceList() []int32 {
	if m != nil {
		return m.FaceList
	}
	return nil
}

type ListFaceShopInfo struct {
	OriginalBuyFace              []*FaceGoodsInfo `protobuf:"bytes,1,rep,name=original_buy_face" json:"original_buy_face,omitempty"`
	DiscountBuyFace              []*FaceGoodsInfo `protobuf:"bytes,2,rep,name=discount_buy_face" json:"discount_buy_face,omitempty"`
	FaceShopLastUpdateTime       *int64           `protobuf:"zigzag64,3,req,name=face_shop_last_update_time" json:"face_shop_last_update_time,omitempty"`
	FaceShopLastManualUpdateTime *int64           `protobuf:"zigzag64,4,req,name=face_shop_last_manual_update_time" json:"face_shop_last_manual_update_time,omitempty"`
	FaceShopManualUpdateCount    *int32           `protobuf:"zigzag32,5,req,name=face_shop_manual_update_count" json:"face_shop_manual_update_count,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}         `json:"-"`
	XXX_unrecognized             []byte           `json:"-"`
	XXX_sizecache                int32            `json:"-"`
}

func (m *ListFaceShopInfo) Reset()         { *m = ListFaceShopInfo{} }
func (m *ListFaceShopInfo) String() string { return proto.CompactTextString(m) }
func (*ListFaceShopInfo) ProtoMessage()    {}
func (*ListFaceShopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{13}
}
func (m *ListFaceShopInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListFaceShopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListFaceShopInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListFaceShopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFaceShopInfo.Merge(m, src)
}
func (m *ListFaceShopInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListFaceShopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFaceShopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListFaceShopInfo proto.InternalMessageInfo

func (m *ListFaceShopInfo) GetOriginalBuyFace() []*FaceGoodsInfo {
	if m != nil {
		return m.OriginalBuyFace
	}
	return nil
}

func (m *ListFaceShopInfo) GetDiscountBuyFace() []*FaceGoodsInfo {
	if m != nil {
		return m.DiscountBuyFace
	}
	return nil
}

func (m *ListFaceShopInfo) GetFaceShopLastUpdateTime() int64 {
	if m != nil && m.FaceShopLastUpdateTime != nil {
		return *m.FaceShopLastUpdateTime
	}
	return 0
}

func (m *ListFaceShopInfo) GetFaceShopLastManualUpdateTime() int64 {
	if m != nil && m.FaceShopLastManualUpdateTime != nil {
		return *m.FaceShopLastManualUpdateTime
	}
	return 0
}

func (m *ListFaceShopInfo) GetFaceShopManualUpdateCount() int32 {
	if m != nil && m.FaceShopManualUpdateCount != nil {
		return *m.FaceShopManualUpdateCount
	}
	return 0
}

type ListDbRoleFaceInfo struct {
	OriginalBuyFace              []*FaceGoodsInfo    `protobuf:"bytes,1,rep,name=original_buy_face" json:"original_buy_face,omitempty"`
	DiscountBuyFace              []*FaceGoodsInfo    `protobuf:"bytes,2,rep,name=discount_buy_face" json:"discount_buy_face,omitempty"`
	FaceShopLastUpdateTime       *int64              `protobuf:"zigzag64,3,req,name=face_shop_last_update_time" json:"face_shop_last_update_time,omitempty"`
	FaceShopLastManualUpdateTime *int64              `protobuf:"zigzag64,4,req,name=face_shop_last_manual_update_time" json:"face_shop_last_manual_update_time,omitempty"`
	FaceShopManualUpdateCount    *int32              `protobuf:"zigzag32,5,req,name=face_shop_manual_update_count" json:"face_shop_manual_update_count,omitempty"`
	HaveFaces                    []*FaceInfo         `protobuf:"bytes,6,rep,name=have_faces" json:"have_faces,omitempty"`
	PreferInfo                   *RoleFacePreferInfo `protobuf:"bytes,7,opt,name=prefer_info" json:"prefer_info,omitempty"`
	CustomList                   []*RoleCustomFace   `protobuf:"bytes,8,rep,name=custom_list" json:"custom_list,omitempty"`
	CurrentFace                  *RoleFace           `protobuf:"bytes,9,req,name=current_face" json:"current_face,omitempty"`
	ForeverFree                  *bool               `protobuf:"varint,10,opt,name=forever_free" json:"forever_free,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}            `json:"-"`
	XXX_unrecognized             []byte              `json:"-"`
	XXX_sizecache                int32               `json:"-"`
}

func (m *ListDbRoleFaceInfo) Reset()         { *m = ListDbRoleFaceInfo{} }
func (m *ListDbRoleFaceInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleFaceInfo) ProtoMessage()    {}
func (*ListDbRoleFaceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{14}
}
func (m *ListDbRoleFaceInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleFaceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleFaceInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleFaceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleFaceInfo.Merge(m, src)
}
func (m *ListDbRoleFaceInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleFaceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleFaceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleFaceInfo proto.InternalMessageInfo

func (m *ListDbRoleFaceInfo) GetOriginalBuyFace() []*FaceGoodsInfo {
	if m != nil {
		return m.OriginalBuyFace
	}
	return nil
}

func (m *ListDbRoleFaceInfo) GetDiscountBuyFace() []*FaceGoodsInfo {
	if m != nil {
		return m.DiscountBuyFace
	}
	return nil
}

func (m *ListDbRoleFaceInfo) GetFaceShopLastUpdateTime() int64 {
	if m != nil && m.FaceShopLastUpdateTime != nil {
		return *m.FaceShopLastUpdateTime
	}
	return 0
}

func (m *ListDbRoleFaceInfo) GetFaceShopLastManualUpdateTime() int64 {
	if m != nil && m.FaceShopLastManualUpdateTime != nil {
		return *m.FaceShopLastManualUpdateTime
	}
	return 0
}

func (m *ListDbRoleFaceInfo) GetFaceShopManualUpdateCount() int32 {
	if m != nil && m.FaceShopManualUpdateCount != nil {
		return *m.FaceShopManualUpdateCount
	}
	return 0
}

func (m *ListDbRoleFaceInfo) GetHaveFaces() []*FaceInfo {
	if m != nil {
		return m.HaveFaces
	}
	return nil
}

func (m *ListDbRoleFaceInfo) GetPreferInfo() *RoleFacePreferInfo {
	if m != nil {
		return m.PreferInfo
	}
	return nil
}

func (m *ListDbRoleFaceInfo) GetCustomList() []*RoleCustomFace {
	if m != nil {
		return m.CustomList
	}
	return nil
}

func (m *ListDbRoleFaceInfo) GetCurrentFace() *RoleFace {
	if m != nil {
		return m.CurrentFace
	}
	return nil
}

func (m *ListDbRoleFaceInfo) GetForeverFree() bool {
	if m != nil && m.ForeverFree != nil {
		return *m.ForeverFree
	}
	return false
}

// 技能相关
type DbSkillInfo struct {
	Id                   *int32   `protobuf:"zigzag32,1,req,name=id" json:"id,omitempty"`
	Level                *int32   `protobuf:"zigzag32,2,req,name=level" json:"level,omitempty"`
	Skilled              *int32   `protobuf:"zigzag32,3,req,name=skilled" json:"skilled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbSkillInfo) Reset()         { *m = DbSkillInfo{} }
func (m *DbSkillInfo) String() string { return proto.CompactTextString(m) }
func (*DbSkillInfo) ProtoMessage()    {}
func (*DbSkillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{15}
}
func (m *DbSkillInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbSkillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbSkillInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbSkillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbSkillInfo.Merge(m, src)
}
func (m *DbSkillInfo) XXX_Size() int {
	return m.Size()
}
func (m *DbSkillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DbSkillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DbSkillInfo proto.InternalMessageInfo

func (m *DbSkillInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DbSkillInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DbSkillInfo) GetSkilled() int32 {
	if m != nil && m.Skilled != nil {
		return *m.Skilled
	}
	return 0
}

// 竞技场信息
type DbArenaInfo struct {
	BuyCount             *int32            `protobuf:"zigzag32,1,req,name=buy_count" json:"buy_count,omitempty"`
	TotalCount           *int32            `protobuf:"zigzag32,2,req,name=total_count" json:"total_count,omitempty"`
	LeftCount            *int32            `protobuf:"zigzag32,3,req,name=left_count" json:"left_count,omitempty"`
	CdTimeStamp          *int64            `protobuf:"zigzag64,4,req,name=cd_time_stamp" json:"cd_time_stamp,omitempty"`
	CdTime               *int64            `protobuf:"zigzag64,5,req,name=cd_time" json:"cd_time,omitempty"`
	Score                *int64            `protobuf:"zigzag64,6,req,name=score" json:"score,omitempty"`
	HistoryTopRank       *int32            `protobuf:"zigzag32,7,req,name=history_top_rank" json:"history_top_rank,omitempty"`
	BattleInfo           *BattlePlayerInfo `protobuf:"bytes,8,opt,name=battle_info" json:"battle_info,omitempty"`
	FightRank            *int32            `protobuf:"zigzag32,9,opt,name=fight_rank" json:"fight_rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DbArenaInfo) Reset()         { *m = DbArenaInfo{} }
func (m *DbArenaInfo) String() string { return proto.CompactTextString(m) }
func (*DbArenaInfo) ProtoMessage()    {}
func (*DbArenaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{16}
}
func (m *DbArenaInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbArenaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbArenaInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbArenaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbArenaInfo.Merge(m, src)
}
func (m *DbArenaInfo) XXX_Size() int {
	return m.Size()
}
func (m *DbArenaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DbArenaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DbArenaInfo proto.InternalMessageInfo

func (m *DbArenaInfo) GetBuyCount() int32 {
	if m != nil && m.BuyCount != nil {
		return *m.BuyCount
	}
	return 0
}

func (m *DbArenaInfo) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

func (m *DbArenaInfo) GetLeftCount() int32 {
	if m != nil && m.LeftCount != nil {
		return *m.LeftCount
	}
	return 0
}

func (m *DbArenaInfo) GetCdTimeStamp() int64 {
	if m != nil && m.CdTimeStamp != nil {
		return *m.CdTimeStamp
	}
	return 0
}

func (m *DbArenaInfo) GetCdTime() int64 {
	if m != nil && m.CdTime != nil {
		return *m.CdTime
	}
	return 0
}

func (m *DbArenaInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *DbArenaInfo) GetHistoryTopRank() int32 {
	if m != nil && m.HistoryTopRank != nil {
		return *m.HistoryTopRank
	}
	return 0
}

func (m *DbArenaInfo) GetBattleInfo() *BattlePlayerInfo {
	if m != nil {
		return m.BattleInfo
	}
	return nil
}

func (m *DbArenaInfo) GetFightRank() int32 {
	if m != nil && m.FightRank != nil {
		return *m.FightRank
	}
	return 0
}

// 石中剑信息
type DbSwordInfo struct {
	TotalCount           *int32   `protobuf:"zigzag32,1,req,name=total_count" json:"total_count,omitempty"`
	FailedCount          *int32   `protobuf:"zigzag32,2,req,name=failed_count" json:"failed_count,omitempty"`
	LeftCount            *int32   `protobuf:"zigzag32,3,req,name=left_count" json:"left_count,omitempty"`
	BuyCount             *int32   `protobuf:"zigzag32,4,opt,name=buy_count" json:"buy_count,omitempty"`
	CdTime               *int64   `protobuf:"zigzag64,5,opt,name=cd_time" json:"cd_time,omitempty"`
	JoinCount            *int32   `protobuf:"zigzag32,6,opt,name=join_count" json:"join_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbSwordInfo) Reset()         { *m = DbSwordInfo{} }
func (m *DbSwordInfo) String() string { return proto.CompactTextString(m) }
func (*DbSwordInfo) ProtoMessage()    {}
func (*DbSwordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{17}
}
func (m *DbSwordInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbSwordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbSwordInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbSwordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbSwordInfo.Merge(m, src)
}
func (m *DbSwordInfo) XXX_Size() int {
	return m.Size()
}
func (m *DbSwordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DbSwordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DbSwordInfo proto.InternalMessageInfo

func (m *DbSwordInfo) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

func (m *DbSwordInfo) GetFailedCount() int32 {
	if m != nil && m.FailedCount != nil {
		return *m.FailedCount
	}
	return 0
}

func (m *DbSwordInfo) GetLeftCount() int32 {
	if m != nil && m.LeftCount != nil {
		return *m.LeftCount
	}
	return 0
}

func (m *DbSwordInfo) GetBuyCount() int32 {
	if m != nil && m.BuyCount != nil {
		return *m.BuyCount
	}
	return 0
}

func (m *DbSwordInfo) GetCdTime() int64 {
	if m != nil && m.CdTime != nil {
		return *m.CdTime
	}
	return 0
}

func (m *DbSwordInfo) GetJoinCount() int32 {
	if m != nil && m.JoinCount != nil {
		return *m.JoinCount
	}
	return 0
}

type ListDbRoleTalentSkillInfo struct {
	HaveSkills           []*DbSkillInfo `protobuf:"bytes,1,rep,name=have_skills" json:"have_skills,omitempty"`
	CurrentSkills        []int32        `protobuf:"zigzag32,2,rep,name=current_skills" json:"current_skills,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListDbRoleTalentSkillInfo) Reset()         { *m = ListDbRoleTalentSkillInfo{} }
func (m *ListDbRoleTalentSkillInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleTalentSkillInfo) ProtoMessage()    {}
func (*ListDbRoleTalentSkillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{18}
}
func (m *ListDbRoleTalentSkillInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleTalentSkillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleTalentSkillInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleTalentSkillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleTalentSkillInfo.Merge(m, src)
}
func (m *ListDbRoleTalentSkillInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleTalentSkillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleTalentSkillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleTalentSkillInfo proto.InternalMessageInfo

func (m *ListDbRoleTalentSkillInfo) GetHaveSkills() []*DbSkillInfo {
	if m != nil {
		return m.HaveSkills
	}
	return nil
}

func (m *ListDbRoleTalentSkillInfo) GetCurrentSkills() []int32 {
	if m != nil {
		return m.CurrentSkills
	}
	return nil
}

type ListDbRoleBookSkillInfo struct {
	HaveSkills           []*DbSkillInfo `protobuf:"bytes,1,rep,name=have_skills" json:"have_skills,omitempty"`
	CurrentSkills        []int32        `protobuf:"zigzag32,2,rep,name=current_skills" json:"current_skills,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListDbRoleBookSkillInfo) Reset()         { *m = ListDbRoleBookSkillInfo{} }
func (m *ListDbRoleBookSkillInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleBookSkillInfo) ProtoMessage()    {}
func (*ListDbRoleBookSkillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{19}
}
func (m *ListDbRoleBookSkillInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleBookSkillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleBookSkillInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleBookSkillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleBookSkillInfo.Merge(m, src)
}
func (m *ListDbRoleBookSkillInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleBookSkillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleBookSkillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleBookSkillInfo proto.InternalMessageInfo

func (m *ListDbRoleBookSkillInfo) GetHaveSkills() []*DbSkillInfo {
	if m != nil {
		return m.HaveSkills
	}
	return nil
}

func (m *ListDbRoleBookSkillInfo) GetCurrentSkills() []int32 {
	if m != nil {
		return m.CurrentSkills
	}
	return nil
}

type ListDbRoleSuitSkillInfo struct {
	HaveSkills           []*DbSkillInfo `protobuf:"bytes,1,rep,name=have_skills" json:"have_skills,omitempty"`
	CurrentSkills        []int32        `protobuf:"zigzag32,2,rep,name=current_skills" json:"current_skills,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListDbRoleSuitSkillInfo) Reset()         { *m = ListDbRoleSuitSkillInfo{} }
func (m *ListDbRoleSuitSkillInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleSuitSkillInfo) ProtoMessage()    {}
func (*ListDbRoleSuitSkillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{20}
}
func (m *ListDbRoleSuitSkillInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleSuitSkillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleSuitSkillInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleSuitSkillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleSuitSkillInfo.Merge(m, src)
}
func (m *ListDbRoleSuitSkillInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleSuitSkillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleSuitSkillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleSuitSkillInfo proto.InternalMessageInfo

func (m *ListDbRoleSuitSkillInfo) GetHaveSkills() []*DbSkillInfo {
	if m != nil {
		return m.HaveSkills
	}
	return nil
}

func (m *ListDbRoleSuitSkillInfo) GetCurrentSkills() []int32 {
	if m != nil {
		return m.CurrentSkills
	}
	return nil
}

// 好友相关
type ListDbRoleFriendInfo struct {
	Friends              []*DbFriendInfo `protobuf:"bytes,1,rep,name=friends" json:"friends,omitempty"`
	FightCount           *int32          `protobuf:"zigzag32,2,opt,name=fight_count" json:"fight_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListDbRoleFriendInfo) Reset()         { *m = ListDbRoleFriendInfo{} }
func (m *ListDbRoleFriendInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleFriendInfo) ProtoMessage()    {}
func (*ListDbRoleFriendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{21}
}
func (m *ListDbRoleFriendInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleFriendInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleFriendInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleFriendInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleFriendInfo.Merge(m, src)
}
func (m *ListDbRoleFriendInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleFriendInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleFriendInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleFriendInfo proto.InternalMessageInfo

func (m *ListDbRoleFriendInfo) GetFriends() []*DbFriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *ListDbRoleFriendInfo) GetFightCount() int32 {
	if m != nil && m.FightCount != nil {
		return *m.FightCount
	}
	return 0
}

type ListDbRoleRiskInfo struct {
	Chaps                []*ChapterInfo `protobuf:"bytes,1,rep,name=chaps" json:"chaps,omitempty"`
	ChapsDanger          []*ChapterInfo `protobuf:"bytes,2,rep,name=chaps_danger" json:"chaps_danger,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListDbRoleRiskInfo) Reset()         { *m = ListDbRoleRiskInfo{} }
func (m *ListDbRoleRiskInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleRiskInfo) ProtoMessage()    {}
func (*ListDbRoleRiskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{22}
}
func (m *ListDbRoleRiskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleRiskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleRiskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleRiskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleRiskInfo.Merge(m, src)
}
func (m *ListDbRoleRiskInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleRiskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleRiskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleRiskInfo proto.InternalMessageInfo

func (m *ListDbRoleRiskInfo) GetChaps() []*ChapterInfo {
	if m != nil {
		return m.Chaps
	}
	return nil
}

func (m *ListDbRoleRiskInfo) GetChapsDanger() []*ChapterInfo {
	if m != nil {
		return m.ChapsDanger
	}
	return nil
}

// 任务相关
type DbTask struct {
	CompletedTaskList    []int32     `protobuf:"zigzag32,1,rep,name=completed_task_list" json:"completed_task_list,omitempty"`
	CanAcceptTaskList    []*TaskInfo `protobuf:"bytes,2,rep,name=can_accept_task_list" json:"can_accept_task_list,omitempty"`
	AcceptedTaskList     []*TaskInfo `protobuf:"bytes,3,rep,name=accepted_task_list" json:"accepted_task_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DbTask) Reset()         { *m = DbTask{} }
func (m *DbTask) String() string { return proto.CompactTextString(m) }
func (*DbTask) ProtoMessage()    {}
func (*DbTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{23}
}
func (m *DbTask) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbTask.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbTask.Merge(m, src)
}
func (m *DbTask) XXX_Size() int {
	return m.Size()
}
func (m *DbTask) XXX_DiscardUnknown() {
	xxx_messageInfo_DbTask.DiscardUnknown(m)
}

var xxx_messageInfo_DbTask proto.InternalMessageInfo

func (m *DbTask) GetCompletedTaskList() []int32 {
	if m != nil {
		return m.CompletedTaskList
	}
	return nil
}

func (m *DbTask) GetCanAcceptTaskList() []*TaskInfo {
	if m != nil {
		return m.CanAcceptTaskList
	}
	return nil
}

func (m *DbTask) GetAcceptedTaskList() []*TaskInfo {
	if m != nil {
		return m.AcceptedTaskList
	}
	return nil
}

// 成就
type ListDbRoleSuccessInfo struct {
	// 各个成就类型对应的计数,成就创建角色时就需要初始化.新的成就类型只能在已有的类型后面加1.成就类型对应的就是该字段的下标
	DetailList []*SuccessDetail `protobuf:"bytes,1,rep,name=detail_list" json:"detail_list,omitempty"`
	// 已达成成就id list
	ReachIdList []int32 `protobuf:"zigzag32,2,rep,name=reach_id_list" json:"reach_id_list,omitempty"`
	// 已领取奖励成就id
	GotIdList            []int32  `protobuf:"zigzag32,3,rep,name=got_id_list" json:"got_id_list,omitempty"`
	Point                *int64   `protobuf:"zigzag64,4,opt,name=point" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDbRoleSuccessInfo) Reset()         { *m = ListDbRoleSuccessInfo{} }
func (m *ListDbRoleSuccessInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleSuccessInfo) ProtoMessage()    {}
func (*ListDbRoleSuccessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{24}
}
func (m *ListDbRoleSuccessInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleSuccessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleSuccessInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleSuccessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleSuccessInfo.Merge(m, src)
}
func (m *ListDbRoleSuccessInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleSuccessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleSuccessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleSuccessInfo proto.InternalMessageInfo

func (m *ListDbRoleSuccessInfo) GetDetailList() []*SuccessDetail {
	if m != nil {
		return m.DetailList
	}
	return nil
}

func (m *ListDbRoleSuccessInfo) GetReachIdList() []int32 {
	if m != nil {
		return m.ReachIdList
	}
	return nil
}

func (m *ListDbRoleSuccessInfo) GetGotIdList() []int32 {
	if m != nil {
		return m.GotIdList
	}
	return nil
}

func (m *ListDbRoleSuccessInfo) GetPoint() int64 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

type ListDbRoleGuideInfo struct {
	FindGuidIndex        *int32   `protobuf:"zigzag32,1,opt,name=find_guid_index" json:"find_guid_index,omitempty"`
	ForceGuideIndex      *int32   `protobuf:"zigzag32,2,opt,name=force_guide_index" json:"force_guide_index,omitempty"`
	TipReadIdList        []int32  `protobuf:"zigzag32,3,rep,name=tip_read_id_list" json:"tip_read_id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDbRoleGuideInfo) Reset()         { *m = ListDbRoleGuideInfo{} }
func (m *ListDbRoleGuideInfo) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleGuideInfo) ProtoMessage()    {}
func (*ListDbRoleGuideInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{25}
}
func (m *ListDbRoleGuideInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleGuideInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleGuideInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleGuideInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleGuideInfo.Merge(m, src)
}
func (m *ListDbRoleGuideInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleGuideInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleGuideInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleGuideInfo proto.InternalMessageInfo

func (m *ListDbRoleGuideInfo) GetFindGuidIndex() int32 {
	if m != nil && m.FindGuidIndex != nil {
		return *m.FindGuidIndex
	}
	return 0
}

func (m *ListDbRoleGuideInfo) GetForceGuideIndex() int32 {
	if m != nil && m.ForceGuideIndex != nil {
		return *m.ForceGuideIndex
	}
	return 0
}

func (m *ListDbRoleGuideInfo) GetTipReadIdList() []int32 {
	if m != nil {
		return m.TipReadIdList
	}
	return nil
}

type DbRoleSystemConfig struct {
	LanguageId           *int32   `protobuf:"zigzag32,1,req,name=language_id" json:"language_id,omitempty"`
	MusicEnabled         *bool    `protobuf:"varint,2,req,name=music_enabled" json:"music_enabled,omitempty"`
	SoundEnabled         *bool    `protobuf:"varint,3,req,name=sound_enabled" json:"sound_enabled,omitempty"`
	MusicVolume          *float32 `protobuf:"fixed32,4,req,name=music_volume" json:"music_volume,omitempty"`
	SoundVolume          *float32 `protobuf:"fixed32,5,req,name=sound_volume" json:"sound_volume,omitempty"`
	HelmetVisible        *bool    `protobuf:"varint,6,req,name=helmet_visible" json:"helmet_visible,omitempty"`
	OtherPlayerVisible   *bool    `protobuf:"varint,7,req,name=other_player_visible" json:"other_player_visible,omitempty"`
	RandAssistFriend     *bool    `protobuf:"varint,8,req,name=rand_assist_friend" json:"rand_assist_friend,omitempty"`
	CarNameVisible       *bool    `protobuf:"varint,9,req,name=car_name_visible" json:"car_name_visible,omitempty"`
	RockEnabled          *bool    `protobuf:"varint,10,req,name=rock_enabled" json:"rock_enabled,omitempty"`
	BattleSpeedEnabled   *bool    `protobuf:"varint,11,opt,name=battle_speed_enabled" json:"battle_speed_enabled,omitempty"`
	BgmId                *int32   `protobuf:"zigzag32,12,opt,name=bgm_id" json:"bgm_id,omitempty"`
	SuitHeadVisible      *bool    `protobuf:"varint,13,opt,name=suit_head_visible" json:"suit_head_visible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbRoleSystemConfig) Reset()         { *m = DbRoleSystemConfig{} }
func (m *DbRoleSystemConfig) String() string { return proto.CompactTextString(m) }
func (*DbRoleSystemConfig) ProtoMessage()    {}
func (*DbRoleSystemConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{26}
}
func (m *DbRoleSystemConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbRoleSystemConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbRoleSystemConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbRoleSystemConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbRoleSystemConfig.Merge(m, src)
}
func (m *DbRoleSystemConfig) XXX_Size() int {
	return m.Size()
}
func (m *DbRoleSystemConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DbRoleSystemConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DbRoleSystemConfig proto.InternalMessageInfo

func (m *DbRoleSystemConfig) GetLanguageId() int32 {
	if m != nil && m.LanguageId != nil {
		return *m.LanguageId
	}
	return 0
}

func (m *DbRoleSystemConfig) GetMusicEnabled() bool {
	if m != nil && m.MusicEnabled != nil {
		return *m.MusicEnabled
	}
	return false
}

func (m *DbRoleSystemConfig) GetSoundEnabled() bool {
	if m != nil && m.SoundEnabled != nil {
		return *m.SoundEnabled
	}
	return false
}

func (m *DbRoleSystemConfig) GetMusicVolume() float32 {
	if m != nil && m.MusicVolume != nil {
		return *m.MusicVolume
	}
	return 0
}

func (m *DbRoleSystemConfig) GetSoundVolume() float32 {
	if m != nil && m.SoundVolume != nil {
		return *m.SoundVolume
	}
	return 0
}

func (m *DbRoleSystemConfig) GetHelmetVisible() bool {
	if m != nil && m.HelmetVisible != nil {
		return *m.HelmetVisible
	}
	return false
}

func (m *DbRoleSystemConfig) GetOtherPlayerVisible() bool {
	if m != nil && m.OtherPlayerVisible != nil {
		return *m.OtherPlayerVisible
	}
	return false
}

func (m *DbRoleSystemConfig) GetRandAssistFriend() bool {
	if m != nil && m.RandAssistFriend != nil {
		return *m.RandAssistFriend
	}
	return false
}

func (m *DbRoleSystemConfig) GetCarNameVisible() bool {
	if m != nil && m.CarNameVisible != nil {
		return *m.CarNameVisible
	}
	return false
}

func (m *DbRoleSystemConfig) GetRockEnabled() bool {
	if m != nil && m.RockEnabled != nil {
		return *m.RockEnabled
	}
	return false
}

func (m *DbRoleSystemConfig) GetBattleSpeedEnabled() bool {
	if m != nil && m.BattleSpeedEnabled != nil {
		return *m.BattleSpeedEnabled
	}
	return false
}

func (m *DbRoleSystemConfig) GetBgmId() int32 {
	if m != nil && m.BgmId != nil {
		return *m.BgmId
	}
	return 0
}

func (m *DbRoleSystemConfig) GetSuitHeadVisible() bool {
	if m != nil && m.SuitHeadVisible != nil {
		return *m.SuitHeadVisible
	}
	return false
}

type ListDbRoleTimeStamp struct {
	// 表情商店最后刷新时间
	FaceShopLastUpdateTime *int64   `protobuf:"zigzag64,2,opt,name=face_shop_last_update_time" json:"face_shop_last_update_time,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ListDbRoleTimeStamp) Reset()         { *m = ListDbRoleTimeStamp{} }
func (m *ListDbRoleTimeStamp) String() string { return proto.CompactTextString(m) }
func (*ListDbRoleTimeStamp) ProtoMessage()    {}
func (*ListDbRoleTimeStamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{27}
}
func (m *ListDbRoleTimeStamp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDbRoleTimeStamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDbRoleTimeStamp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDbRoleTimeStamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDbRoleTimeStamp.Merge(m, src)
}
func (m *ListDbRoleTimeStamp) XXX_Size() int {
	return m.Size()
}
func (m *ListDbRoleTimeStamp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDbRoleTimeStamp.DiscardUnknown(m)
}

var xxx_messageInfo_ListDbRoleTimeStamp proto.InternalMessageInfo

func (m *ListDbRoleTimeStamp) GetFaceShopLastUpdateTime() int64 {
	if m != nil && m.FaceShopLastUpdateTime != nil {
		return *m.FaceShopLastUpdateTime
	}
	return 0
}

type DbLoginRoleTime struct {
	LastDayFirstLogin    *int32   `protobuf:"varint,1,opt,name=last_day_first_login" json:"last_day_first_login,omitempty"`
	LastOfflineTime      *int64   `protobuf:"varint,2,opt,name=last_offline_time" json:"last_offline_time,omitempty"`
	CurrentLoginTime     *int64   `protobuf:"varint,3,opt,name=current_login_time" json:"current_login_time,omitempty"`
	TotalOnlineTime      *int64   `protobuf:"varint,4,opt,name=total_online_time" json:"total_online_time,omitempty"`
	TotalLoginDays       *int32   `protobuf:"varint,5,opt,name=total_login_days" json:"total_login_days,omitempty"`
	TotalLoginCount      *int32   `protobuf:"varint,6,opt,name=total_login_count" json:"total_login_count,omitempty"`
	ContinuityDays       *int32   `protobuf:"varint,7,opt,name=continuity_days" json:"continuity_days,omitempty"`
	MaxContinuityDays    *int32   `protobuf:"varint,8,opt,name=max_continuity_days" json:"max_continuity_days,omitempty"`
	CreateTime           *int64   `protobuf:"varint,9,opt,name=create_time" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbLoginRoleTime) Reset()         { *m = DbLoginRoleTime{} }
func (m *DbLoginRoleTime) String() string { return proto.CompactTextString(m) }
func (*DbLoginRoleTime) ProtoMessage()    {}
func (*DbLoginRoleTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{28}
}
func (m *DbLoginRoleTime) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbLoginRoleTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbLoginRoleTime.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbLoginRoleTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbLoginRoleTime.Merge(m, src)
}
func (m *DbLoginRoleTime) XXX_Size() int {
	return m.Size()
}
func (m *DbLoginRoleTime) XXX_DiscardUnknown() {
	xxx_messageInfo_DbLoginRoleTime.DiscardUnknown(m)
}

var xxx_messageInfo_DbLoginRoleTime proto.InternalMessageInfo

func (m *DbLoginRoleTime) GetLastDayFirstLogin() int32 {
	if m != nil && m.LastDayFirstLogin != nil {
		return *m.LastDayFirstLogin
	}
	return 0
}

func (m *DbLoginRoleTime) GetLastOfflineTime() int64 {
	if m != nil && m.LastOfflineTime != nil {
		return *m.LastOfflineTime
	}
	return 0
}

func (m *DbLoginRoleTime) GetCurrentLoginTime() int64 {
	if m != nil && m.CurrentLoginTime != nil {
		return *m.CurrentLoginTime
	}
	return 0
}

func (m *DbLoginRoleTime) GetTotalOnlineTime() int64 {
	if m != nil && m.TotalOnlineTime != nil {
		return *m.TotalOnlineTime
	}
	return 0
}

func (m *DbLoginRoleTime) GetTotalLoginDays() int32 {
	if m != nil && m.TotalLoginDays != nil {
		return *m.TotalLoginDays
	}
	return 0
}

func (m *DbLoginRoleTime) GetTotalLoginCount() int32 {
	if m != nil && m.TotalLoginCount != nil {
		return *m.TotalLoginCount
	}
	return 0
}

func (m *DbLoginRoleTime) GetContinuityDays() int32 {
	if m != nil && m.ContinuityDays != nil {
		return *m.ContinuityDays
	}
	return 0
}

func (m *DbLoginRoleTime) GetMaxContinuityDays() int32 {
	if m != nil && m.MaxContinuityDays != nil {
		return *m.MaxContinuityDays
	}
	return 0
}

func (m *DbLoginRoleTime) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

type DbStaminaInfo struct {
	BuyStaminaCount          *int32   `protobuf:"zigzag32,1,req,name=buy_stamina_count" json:"buy_stamina_count,omitempty"`
	StaminaUpperLimit        *int32   `protobuf:"zigzag32,2,req,name=stamina_upper_limit" json:"stamina_upper_limit,omitempty"`
	StiminaLeftTime          *int32   `protobuf:"varint,3,opt,name=stimina_left_time" json:"stimina_left_time,omitempty"`
	LastStaminaRecvStamp     *int64   `protobuf:"varint,4,opt,name=last_stamina_recv_stamp" json:"last_stamina_recv_stamp,omitempty"`
	LastStaminaTickTime      *int64   `protobuf:"varint,5,opt,name=last_stamina_tick_time" json:"last_stamina_tick_time,omitempty"`
	LastBathStaminaTickTime  *int64   `protobuf:"varint,6,opt,name=last_bath_stamina_tick_time" json:"last_bath_stamina_tick_time,omitempty"`
	BathStaminaRecoveryValue *int32   `protobuf:"varint,7,opt,name=bath_stamina_recovery_value" json:"bath_stamina_recovery_value,omitempty"`
	BathOnceTimeRecovery     []bool   `protobuf:"varint,8,rep,name=bath_once_time_recovery" json:"bath_once_time_recovery,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *DbStaminaInfo) Reset()         { *m = DbStaminaInfo{} }
func (m *DbStaminaInfo) String() string { return proto.CompactTextString(m) }
func (*DbStaminaInfo) ProtoMessage()    {}
func (*DbStaminaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{29}
}
func (m *DbStaminaInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbStaminaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbStaminaInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbStaminaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbStaminaInfo.Merge(m, src)
}
func (m *DbStaminaInfo) XXX_Size() int {
	return m.Size()
}
func (m *DbStaminaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DbStaminaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DbStaminaInfo proto.InternalMessageInfo

func (m *DbStaminaInfo) GetBuyStaminaCount() int32 {
	if m != nil && m.BuyStaminaCount != nil {
		return *m.BuyStaminaCount
	}
	return 0
}

func (m *DbStaminaInfo) GetStaminaUpperLimit() int32 {
	if m != nil && m.StaminaUpperLimit != nil {
		return *m.StaminaUpperLimit
	}
	return 0
}

func (m *DbStaminaInfo) GetStiminaLeftTime() int32 {
	if m != nil && m.StiminaLeftTime != nil {
		return *m.StiminaLeftTime
	}
	return 0
}

func (m *DbStaminaInfo) GetLastStaminaRecvStamp() int64 {
	if m != nil && m.LastStaminaRecvStamp != nil {
		return *m.LastStaminaRecvStamp
	}
	return 0
}

func (m *DbStaminaInfo) GetLastStaminaTickTime() int64 {
	if m != nil && m.LastStaminaTickTime != nil {
		return *m.LastStaminaTickTime
	}
	return 0
}

func (m *DbStaminaInfo) GetLastBathStaminaTickTime() int64 {
	if m != nil && m.LastBathStaminaTickTime != nil {
		return *m.LastBathStaminaTickTime
	}
	return 0
}

func (m *DbStaminaInfo) GetBathStaminaRecoveryValue() int32 {
	if m != nil && m.BathStaminaRecoveryValue != nil {
		return *m.BathStaminaRecoveryValue
	}
	return 0
}

func (m *DbStaminaInfo) GetBathOnceTimeRecovery() []bool {
	if m != nil {
		return m.BathOnceTimeRecovery
	}
	return nil
}

// 日常任务
type ListDailyTaskInfo struct {
	DailyTaskInfo        []*DbDailyTaskInfo `protobuf:"bytes,1,rep,name=daily_task_info" json:"daily_task_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListDailyTaskInfo) Reset()         { *m = ListDailyTaskInfo{} }
func (m *ListDailyTaskInfo) String() string { return proto.CompactTextString(m) }
func (*ListDailyTaskInfo) ProtoMessage()    {}
func (*ListDailyTaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{30}
}
func (m *ListDailyTaskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDailyTaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDailyTaskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDailyTaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDailyTaskInfo.Merge(m, src)
}
func (m *ListDailyTaskInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDailyTaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDailyTaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDailyTaskInfo proto.InternalMessageInfo

func (m *ListDailyTaskInfo) GetDailyTaskInfo() []*DbDailyTaskInfo {
	if m != nil {
		return m.DailyTaskInfo
	}
	return nil
}

// 角色扩展属性1
type RoleinfoExtendAttr_1 struct {
	TestData             *int64   `protobuf:"zigzag64,1,opt,name=test_data" json:"test_data,omitempty"`
	EggId                *int32   `protobuf:"zigzag32,2,opt,name=egg_id" json:"egg_id,omitempty"`
	HistoryRedeemCode    [][]byte `protobuf:"bytes,3,rep,name=history_redeem_code" json:"history_redeem_code,omitempty"`
	WeixinShareFlag      *bool    `protobuf:"varint,4,opt,name=weixin_share_flag" json:"weixin_share_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleinfoExtendAttr_1) Reset()         { *m = RoleinfoExtendAttr_1{} }
func (m *RoleinfoExtendAttr_1) String() string { return proto.CompactTextString(m) }
func (*RoleinfoExtendAttr_1) ProtoMessage()    {}
func (*RoleinfoExtendAttr_1) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{31}
}
func (m *RoleinfoExtendAttr_1) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleinfoExtendAttr_1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleinfoExtendAttr_1.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleinfoExtendAttr_1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleinfoExtendAttr_1.Merge(m, src)
}
func (m *RoleinfoExtendAttr_1) XXX_Size() int {
	return m.Size()
}
func (m *RoleinfoExtendAttr_1) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleinfoExtendAttr_1.DiscardUnknown(m)
}

var xxx_messageInfo_RoleinfoExtendAttr_1 proto.InternalMessageInfo

func (m *RoleinfoExtendAttr_1) GetTestData() int64 {
	if m != nil && m.TestData != nil {
		return *m.TestData
	}
	return 0
}

func (m *RoleinfoExtendAttr_1) GetEggId() int32 {
	if m != nil && m.EggId != nil {
		return *m.EggId
	}
	return 0
}

func (m *RoleinfoExtendAttr_1) GetHistoryRedeemCode() [][]byte {
	if m != nil {
		return m.HistoryRedeemCode
	}
	return nil
}

func (m *RoleinfoExtendAttr_1) GetWeixinShareFlag() bool {
	if m != nil && m.WeixinShareFlag != nil {
		return *m.WeixinShareFlag
	}
	return false
}

// 澡堂道具
type BathhouseTool struct {
	ToolType             *int32   `protobuf:"zigzag32,1,req,name=tool_type" json:"tool_type,omitempty"`
	ToolId               *int32   `protobuf:"zigzag32,2,req,name=tool_id" json:"tool_id,omitempty"`
	UseCount             *int32   `protobuf:"zigzag32,3,req,name=use_count" json:"use_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BathhouseTool) Reset()         { *m = BathhouseTool{} }
func (m *BathhouseTool) String() string { return proto.CompactTextString(m) }
func (*BathhouseTool) ProtoMessage()    {}
func (*BathhouseTool) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{32}
}
func (m *BathhouseTool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BathhouseTool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BathhouseTool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BathhouseTool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BathhouseTool.Merge(m, src)
}
func (m *BathhouseTool) XXX_Size() int {
	return m.Size()
}
func (m *BathhouseTool) XXX_DiscardUnknown() {
	xxx_messageInfo_BathhouseTool.DiscardUnknown(m)
}

var xxx_messageInfo_BathhouseTool proto.InternalMessageInfo

func (m *BathhouseTool) GetToolType() int32 {
	if m != nil && m.ToolType != nil {
		return *m.ToolType
	}
	return 0
}

func (m *BathhouseTool) GetToolId() int32 {
	if m != nil && m.ToolId != nil {
		return *m.ToolId
	}
	return 0
}

func (m *BathhouseTool) GetUseCount() int32 {
	if m != nil && m.UseCount != nil {
		return *m.UseCount
	}
	return 0
}

// 二次信息
type GuadraticInfo struct {
	LeftEnterCount       *int32   `protobuf:"zigzag32,1,req,name=left_enter_count" json:"left_enter_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuadraticInfo) Reset()         { *m = GuadraticInfo{} }
func (m *GuadraticInfo) String() string { return proto.CompactTextString(m) }
func (*GuadraticInfo) ProtoMessage()    {}
func (*GuadraticInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{33}
}
func (m *GuadraticInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuadraticInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuadraticInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuadraticInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuadraticInfo.Merge(m, src)
}
func (m *GuadraticInfo) XXX_Size() int {
	return m.Size()
}
func (m *GuadraticInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GuadraticInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GuadraticInfo proto.InternalMessageInfo

func (m *GuadraticInfo) GetLeftEnterCount() int32 {
	if m != nil && m.LeftEnterCount != nil {
		return *m.LeftEnterCount
	}
	return 0
}

// 角色扩展属性2
type RoleinfoExtendAttr_2 struct {
	FriendFightInfo      *VisitingCardInfo   `protobuf:"bytes,1,opt,name=friend_fight_info" json:"friend_fight_info,omitempty"`
	ProgressList         []*TaskProgressInfo `protobuf:"bytes,2,rep,name=progress_list" json:"progress_list,omitempty"`
	TaskIdList           []int32             `protobuf:"zigzag32,3,rep,name=task_id_list" json:"task_id_list,omitempty"`
	OnceTaskList         []int32             `protobuf:"zigzag32,4,rep,name=once_task_list" json:"once_task_list,omitempty"`
	FunctionPtr          []int64             `protobuf:"zigzag64,5,rep,name=function_ptr" json:"function_ptr,omitempty"`
	BrokenList           []int32             `protobuf:"zigzag32,6,rep,name=broken_list" json:"broken_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RoleinfoExtendAttr_2) Reset()         { *m = RoleinfoExtendAttr_2{} }
func (m *RoleinfoExtendAttr_2) String() string { return proto.CompactTextString(m) }
func (*RoleinfoExtendAttr_2) ProtoMessage()    {}
func (*RoleinfoExtendAttr_2) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{34}
}
func (m *RoleinfoExtendAttr_2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleinfoExtendAttr_2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleinfoExtendAttr_2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleinfoExtendAttr_2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleinfoExtendAttr_2.Merge(m, src)
}
func (m *RoleinfoExtendAttr_2) XXX_Size() int {
	return m.Size()
}
func (m *RoleinfoExtendAttr_2) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleinfoExtendAttr_2.DiscardUnknown(m)
}

var xxx_messageInfo_RoleinfoExtendAttr_2 proto.InternalMessageInfo

func (m *RoleinfoExtendAttr_2) GetFriendFightInfo() *VisitingCardInfo {
	if m != nil {
		return m.FriendFightInfo
	}
	return nil
}

func (m *RoleinfoExtendAttr_2) GetProgressList() []*TaskProgressInfo {
	if m != nil {
		return m.ProgressList
	}
	return nil
}

func (m *RoleinfoExtendAttr_2) GetTaskIdList() []int32 {
	if m != nil {
		return m.TaskIdList
	}
	return nil
}

func (m *RoleinfoExtendAttr_2) GetOnceTaskList() []int32 {
	if m != nil {
		return m.OnceTaskList
	}
	return nil
}

func (m *RoleinfoExtendAttr_2) GetFunctionPtr() []int64 {
	if m != nil {
		return m.FunctionPtr
	}
	return nil
}

func (m *RoleinfoExtendAttr_2) GetBrokenList() []int32 {
	if m != nil {
		return m.BrokenList
	}
	return nil
}

// 角色扩展属性3
type RoleinfoExtendAttr_3 struct {
	TestData             *int64   `protobuf:"zigzag64,1,opt,name=test_data" json:"test_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleinfoExtendAttr_3) Reset()         { *m = RoleinfoExtendAttr_3{} }
func (m *RoleinfoExtendAttr_3) String() string { return proto.CompactTextString(m) }
func (*RoleinfoExtendAttr_3) ProtoMessage()    {}
func (*RoleinfoExtendAttr_3) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{35}
}
func (m *RoleinfoExtendAttr_3) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleinfoExtendAttr_3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleinfoExtendAttr_3.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleinfoExtendAttr_3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleinfoExtendAttr_3.Merge(m, src)
}
func (m *RoleinfoExtendAttr_3) XXX_Size() int {
	return m.Size()
}
func (m *RoleinfoExtendAttr_3) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleinfoExtendAttr_3.DiscardUnknown(m)
}

var xxx_messageInfo_RoleinfoExtendAttr_3 proto.InternalMessageInfo

func (m *RoleinfoExtendAttr_3) GetTestData() int64 {
	if m != nil && m.TestData != nil {
		return *m.TestData
	}
	return 0
}

// 角色扩展属性4
type RoleinfoExtendAttr_4 struct {
	TestData             *int64   `protobuf:"zigzag64,1,opt,name=test_data" json:"test_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleinfoExtendAttr_4) Reset()         { *m = RoleinfoExtendAttr_4{} }
func (m *RoleinfoExtendAttr_4) String() string { return proto.CompactTextString(m) }
func (*RoleinfoExtendAttr_4) ProtoMessage()    {}
func (*RoleinfoExtendAttr_4) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{36}
}
func (m *RoleinfoExtendAttr_4) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleinfoExtendAttr_4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleinfoExtendAttr_4.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleinfoExtendAttr_4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleinfoExtendAttr_4.Merge(m, src)
}
func (m *RoleinfoExtendAttr_4) XXX_Size() int {
	return m.Size()
}
func (m *RoleinfoExtendAttr_4) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleinfoExtendAttr_4.DiscardUnknown(m)
}

var xxx_messageInfo_RoleinfoExtendAttr_4 proto.InternalMessageInfo

func (m *RoleinfoExtendAttr_4) GetTestData() int64 {
	if m != nil && m.TestData != nil {
		return *m.TestData
	}
	return 0
}

// 角色扩展属性5
type RoleinfoExtendAttr_5 struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleinfoExtendAttr_5) Reset()         { *m = RoleinfoExtendAttr_5{} }
func (m *RoleinfoExtendAttr_5) String() string { return proto.CompactTextString(m) }
func (*RoleinfoExtendAttr_5) ProtoMessage()    {}
func (*RoleinfoExtendAttr_5) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{37}
}
func (m *RoleinfoExtendAttr_5) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleinfoExtendAttr_5) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleinfoExtendAttr_5.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleinfoExtendAttr_5) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleinfoExtendAttr_5.Merge(m, src)
}
func (m *RoleinfoExtendAttr_5) XXX_Size() int {
	return m.Size()
}
func (m *RoleinfoExtendAttr_5) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleinfoExtendAttr_5.DiscardUnknown(m)
}

var xxx_messageInfo_RoleinfoExtendAttr_5 proto.InternalMessageInfo

// 卡牌
type RoleCardInfo struct {
	CurrentCardPveList   []int32  `protobuf:"zigzag32,1,rep,name=current_card_pve_list" json:"current_card_pve_list,omitempty"`
	CurrentCardPvpList   []int32  `protobuf:"zigzag32,2,rep,name=current_card_pvp_list" json:"current_card_pvp_list,omitempty"`
	HaveCardList         []int32  `protobuf:"zigzag32,3,rep,name=have_card_list" json:"have_card_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleCardInfo) Reset()         { *m = RoleCardInfo{} }
func (m *RoleCardInfo) String() string { return proto.CompactTextString(m) }
func (*RoleCardInfo) ProtoMessage()    {}
func (*RoleCardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{38}
}
func (m *RoleCardInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleCardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleCardInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleCardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleCardInfo.Merge(m, src)
}
func (m *RoleCardInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoleCardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleCardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoleCardInfo proto.InternalMessageInfo

func (m *RoleCardInfo) GetCurrentCardPveList() []int32 {
	if m != nil {
		return m.CurrentCardPveList
	}
	return nil
}

func (m *RoleCardInfo) GetCurrentCardPvpList() []int32 {
	if m != nil {
		return m.CurrentCardPvpList
	}
	return nil
}

func (m *RoleCardInfo) GetHaveCardList() []int32 {
	if m != nil {
		return m.HaveCardList
	}
	return nil
}

// 点金手信息存储
type PointGoldInfo struct {
	ExchangedCount       *int32   `protobuf:"varint,1,req,name=exchanged_count" json:"exchanged_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PointGoldInfo) Reset()         { *m = PointGoldInfo{} }
func (m *PointGoldInfo) String() string { return proto.CompactTextString(m) }
func (*PointGoldInfo) ProtoMessage()    {}
func (*PointGoldInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{39}
}
func (m *PointGoldInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PointGoldInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PointGoldInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PointGoldInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointGoldInfo.Merge(m, src)
}
func (m *PointGoldInfo) XXX_Size() int {
	return m.Size()
}
func (m *PointGoldInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PointGoldInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PointGoldInfo proto.InternalMessageInfo

func (m *PointGoldInfo) GetExchangedCount() int32 {
	if m != nil && m.ExchangedCount != nil {
		return *m.ExchangedCount
	}
	return 0
}

type FriendManagerInfo struct {
	Friends              []*SqlFriendMngInfo `protobuf:"bytes,1,rep,name=friends" json:"friends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FriendManagerInfo) Reset()         { *m = FriendManagerInfo{} }
func (m *FriendManagerInfo) String() string { return proto.CompactTextString(m) }
func (*FriendManagerInfo) ProtoMessage()    {}
func (*FriendManagerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{40}
}
func (m *FriendManagerInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendManagerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendManagerInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendManagerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendManagerInfo.Merge(m, src)
}
func (m *FriendManagerInfo) XXX_Size() int {
	return m.Size()
}
func (m *FriendManagerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendManagerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendManagerInfo proto.InternalMessageInfo

func (m *FriendManagerInfo) GetFriends() []*SqlFriendMngInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

type ArenaKillInfo struct {
	KillPlayer           []*DbArenaKillInfo `protobuf:"bytes,1,rep,name=kill_player" json:"kill_player,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ArenaKillInfo) Reset()         { *m = ArenaKillInfo{} }
func (m *ArenaKillInfo) String() string { return proto.CompactTextString(m) }
func (*ArenaKillInfo) ProtoMessage()    {}
func (*ArenaKillInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{41}
}
func (m *ArenaKillInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArenaKillInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArenaKillInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArenaKillInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArenaKillInfo.Merge(m, src)
}
func (m *ArenaKillInfo) XXX_Size() int {
	return m.Size()
}
func (m *ArenaKillInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ArenaKillInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ArenaKillInfo proto.InternalMessageInfo

func (m *ArenaKillInfo) GetKillPlayer() []*DbArenaKillInfo {
	if m != nil {
		return m.KillPlayer
	}
	return nil
}

type FriendAssistInfo struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	LeftAssistTime       *int32   `protobuf:"zigzag32,2,req,name=left_assist_time" json:"left_assist_time,omitempty"`
	AssistTimeStamp      *int64   `protobuf:"zigzag64,3,req,name=assist_time_stamp" json:"assist_time_stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendAssistInfo) Reset()         { *m = FriendAssistInfo{} }
func (m *FriendAssistInfo) String() string { return proto.CompactTextString(m) }
func (*FriendAssistInfo) ProtoMessage()    {}
func (*FriendAssistInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{42}
}
func (m *FriendAssistInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendAssistInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendAssistInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendAssistInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendAssistInfo.Merge(m, src)
}
func (m *FriendAssistInfo) XXX_Size() int {
	return m.Size()
}
func (m *FriendAssistInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendAssistInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendAssistInfo proto.InternalMessageInfo

func (m *FriendAssistInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *FriendAssistInfo) GetLeftAssistTime() int32 {
	if m != nil && m.LeftAssistTime != nil {
		return *m.LeftAssistTime
	}
	return 0
}

func (m *FriendAssistInfo) GetAssistTimeStamp() int64 {
	if m != nil && m.AssistTimeStamp != nil {
		return *m.AssistTimeStamp
	}
	return 0
}

// 好友助战信息列表
type ListFriendAssistInfo struct {
	AssistInfo           []*FriendAssistInfo `protobuf:"bytes,1,rep,name=assist_info" json:"assist_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListFriendAssistInfo) Reset()         { *m = ListFriendAssistInfo{} }
func (m *ListFriendAssistInfo) String() string { return proto.CompactTextString(m) }
func (*ListFriendAssistInfo) ProtoMessage()    {}
func (*ListFriendAssistInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{43}
}
func (m *ListFriendAssistInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListFriendAssistInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListFriendAssistInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListFriendAssistInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFriendAssistInfo.Merge(m, src)
}
func (m *ListFriendAssistInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListFriendAssistInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFriendAssistInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListFriendAssistInfo proto.InternalMessageInfo

func (m *ListFriendAssistInfo) GetAssistInfo() []*FriendAssistInfo {
	if m != nil {
		return m.AssistInfo
	}
	return nil
}

type PersonEasterEggInfo struct {
	EggId                *int32   `protobuf:"zigzag32,1,req,name=egg_id" json:"egg_id,omitempty"`
	CdTime               *int32   `protobuf:"zigzag32,2,req,name=cd_time" json:"cd_time,omitempty"`
	Count                *int32   `protobuf:"zigzag32,3,req,name=count" json:"count,omitempty"`
	TriggerCount         *int32   `protobuf:"zigzag32,4,req,name=trigger_count" json:"trigger_count,omitempty"`
	DayGetCount          *int32   `protobuf:"zigzag32,5,opt,name=day_get_count" json:"day_get_count,omitempty"`
	FirstTouch           *bool    `protobuf:"varint,6,opt,name=first_touch" json:"first_touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonEasterEggInfo) Reset()         { *m = PersonEasterEggInfo{} }
func (m *PersonEasterEggInfo) String() string { return proto.CompactTextString(m) }
func (*PersonEasterEggInfo) ProtoMessage()    {}
func (*PersonEasterEggInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{44}
}
func (m *PersonEasterEggInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonEasterEggInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonEasterEggInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonEasterEggInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonEasterEggInfo.Merge(m, src)
}
func (m *PersonEasterEggInfo) XXX_Size() int {
	return m.Size()
}
func (m *PersonEasterEggInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonEasterEggInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PersonEasterEggInfo proto.InternalMessageInfo

func (m *PersonEasterEggInfo) GetEggId() int32 {
	if m != nil && m.EggId != nil {
		return *m.EggId
	}
	return 0
}

func (m *PersonEasterEggInfo) GetCdTime() int32 {
	if m != nil && m.CdTime != nil {
		return *m.CdTime
	}
	return 0
}

func (m *PersonEasterEggInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *PersonEasterEggInfo) GetTriggerCount() int32 {
	if m != nil && m.TriggerCount != nil {
		return *m.TriggerCount
	}
	return 0
}

func (m *PersonEasterEggInfo) GetDayGetCount() int32 {
	if m != nil && m.DayGetCount != nil {
		return *m.DayGetCount
	}
	return 0
}

func (m *PersonEasterEggInfo) GetFirstTouch() bool {
	if m != nil && m.FirstTouch != nil {
		return *m.FirstTouch
	}
	return false
}

type ListPersonEasterEgg struct {
	EggTimeStamp         *int64                 `protobuf:"zigzag64,1,req,name=egg_time_stamp" json:"egg_time_stamp,omitempty"`
	EggInfo              []*PersonEasterEggInfo `protobuf:"bytes,2,rep,name=egg_info" json:"egg_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListPersonEasterEgg) Reset()         { *m = ListPersonEasterEgg{} }
func (m *ListPersonEasterEgg) String() string { return proto.CompactTextString(m) }
func (*ListPersonEasterEgg) ProtoMessage()    {}
func (*ListPersonEasterEgg) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{45}
}
func (m *ListPersonEasterEgg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListPersonEasterEgg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListPersonEasterEgg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListPersonEasterEgg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPersonEasterEgg.Merge(m, src)
}
func (m *ListPersonEasterEgg) XXX_Size() int {
	return m.Size()
}
func (m *ListPersonEasterEgg) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPersonEasterEgg.DiscardUnknown(m)
}

var xxx_messageInfo_ListPersonEasterEgg proto.InternalMessageInfo

func (m *ListPersonEasterEgg) GetEggTimeStamp() int64 {
	if m != nil && m.EggTimeStamp != nil {
		return *m.EggTimeStamp
	}
	return 0
}

func (m *ListPersonEasterEgg) GetEggInfo() []*PersonEasterEggInfo {
	if m != nil {
		return m.EggInfo
	}
	return nil
}

type RechargeMoneyInfo struct {
	TotalMoney           *int64           `protobuf:"zigzag64,1,req,name=total_money" json:"total_money,omitempty"`
	CurrMoneyExp         *int64           `protobuf:"zigzag64,2,req,name=curr_money_exp" json:"curr_money_exp,omitempty"`
	DailyRewardFlag      *bool            `protobuf:"varint,3,req,name=daily_reward_flag" json:"daily_reward_flag,omitempty"`
	SaleId               []int32          `protobuf:"zigzag32,4,rep,name=sale_id" json:"sale_id,omitempty"`
	VipLevelFlag         []int32          `protobuf:"zigzag32,5,rep,name=vip_level_flag" json:"vip_level_flag,omitempty"`
	TotalGetDiamond      *int64           `protobuf:"zigzag64,6,opt,name=total_get_diamond" json:"total_get_diamond,omitempty"`
	FirstRecharge        *RoleRechargeGet `protobuf:"bytes,7,opt,name=first_recharge" json:"first_recharge,omitempty"`
	OtherRecharge        *RoleRechargeGet `protobuf:"bytes,8,opt,name=other_recharge" json:"other_recharge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RechargeMoneyInfo) Reset()         { *m = RechargeMoneyInfo{} }
func (m *RechargeMoneyInfo) String() string { return proto.CompactTextString(m) }
func (*RechargeMoneyInfo) ProtoMessage()    {}
func (*RechargeMoneyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{46}
}
func (m *RechargeMoneyInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RechargeMoneyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RechargeMoneyInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RechargeMoneyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RechargeMoneyInfo.Merge(m, src)
}
func (m *RechargeMoneyInfo) XXX_Size() int {
	return m.Size()
}
func (m *RechargeMoneyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RechargeMoneyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RechargeMoneyInfo proto.InternalMessageInfo

func (m *RechargeMoneyInfo) GetTotalMoney() int64 {
	if m != nil && m.TotalMoney != nil {
		return *m.TotalMoney
	}
	return 0
}

func (m *RechargeMoneyInfo) GetCurrMoneyExp() int64 {
	if m != nil && m.CurrMoneyExp != nil {
		return *m.CurrMoneyExp
	}
	return 0
}

func (m *RechargeMoneyInfo) GetDailyRewardFlag() bool {
	if m != nil && m.DailyRewardFlag != nil {
		return *m.DailyRewardFlag
	}
	return false
}

func (m *RechargeMoneyInfo) GetSaleId() []int32 {
	if m != nil {
		return m.SaleId
	}
	return nil
}

func (m *RechargeMoneyInfo) GetVipLevelFlag() []int32 {
	if m != nil {
		return m.VipLevelFlag
	}
	return nil
}

func (m *RechargeMoneyInfo) GetTotalGetDiamond() int64 {
	if m != nil && m.TotalGetDiamond != nil {
		return *m.TotalGetDiamond
	}
	return 0
}

func (m *RechargeMoneyInfo) GetFirstRecharge() *RoleRechargeGet {
	if m != nil {
		return m.FirstRecharge
	}
	return nil
}

func (m *RechargeMoneyInfo) GetOtherRecharge() *RoleRechargeGet {
	if m != nil {
		return m.OtherRecharge
	}
	return nil
}

type RoleShowFlag struct {
	HelmetVisible        *bool    `protobuf:"varint,1,req,name=helmet_visible" json:"helmet_visible,omitempty"`
	BgmId                *int32   `protobuf:"zigzag32,2,opt,name=bgm_id" json:"bgm_id,omitempty"`
	SuitHeadVisible      *bool    `protobuf:"varint,3,opt,name=suit_head_visible" json:"suit_head_visible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleShowFlag) Reset()         { *m = RoleShowFlag{} }
func (m *RoleShowFlag) String() string { return proto.CompactTextString(m) }
func (*RoleShowFlag) ProtoMessage()    {}
func (*RoleShowFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{47}
}
func (m *RoleShowFlag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleShowFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleShowFlag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleShowFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleShowFlag.Merge(m, src)
}
func (m *RoleShowFlag) XXX_Size() int {
	return m.Size()
}
func (m *RoleShowFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleShowFlag.DiscardUnknown(m)
}

var xxx_messageInfo_RoleShowFlag proto.InternalMessageInfo

func (m *RoleShowFlag) GetHelmetVisible() bool {
	if m != nil && m.HelmetVisible != nil {
		return *m.HelmetVisible
	}
	return false
}

func (m *RoleShowFlag) GetBgmId() int32 {
	if m != nil && m.BgmId != nil {
		return *m.BgmId
	}
	return 0
}

func (m *RoleShowFlag) GetSuitHeadVisible() bool {
	if m != nil && m.SuitHeadVisible != nil {
		return *m.SuitHeadVisible
	}
	return false
}

type TempInfoInMemory struct {
	IsOnEnterGame        *bool          `protobuf:"varint,1,opt,name=is_on_enter_game" json:"is_on_enter_game,omitempty"`
	OldPosX              *int32         `protobuf:"zigzag32,2,opt,name=old_pos_x" json:"old_pos_x,omitempty"`
	OldPosY              *int32         `protobuf:"zigzag32,3,opt,name=old_pos_y" json:"old_pos_y,omitempty"`
	OldSceneId           *int32         `protobuf:"zigzag32,4,opt,name=old_scene_id" json:"old_scene_id,omitempty"`
	MgRoomId             *int32         `protobuf:"zigzag32,5,opt,name=mg_room_id" json:"mg_room_id,omitempty"`
	BigBig               []*SpInfo      `protobuf:"bytes,6,rep,name=big_big" json:"big_big,omitempty"`
	ShowFlag             *RoleShowFlag  `protobuf:"bytes,7,opt,name=show_flag" json:"show_flag,omitempty"`
	Risk                 *FightRiskInfo `protobuf:"bytes,8,opt,name=risk" json:"risk,omitempty"`
	IsUtf8               *int32         `protobuf:"zigzag32,50,opt,name=is_utf8" json:"is_utf8,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TempInfoInMemory) Reset()         { *m = TempInfoInMemory{} }
func (m *TempInfoInMemory) String() string { return proto.CompactTextString(m) }
func (*TempInfoInMemory) ProtoMessage()    {}
func (*TempInfoInMemory) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{48}
}
func (m *TempInfoInMemory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TempInfoInMemory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TempInfoInMemory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TempInfoInMemory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TempInfoInMemory.Merge(m, src)
}
func (m *TempInfoInMemory) XXX_Size() int {
	return m.Size()
}
func (m *TempInfoInMemory) XXX_DiscardUnknown() {
	xxx_messageInfo_TempInfoInMemory.DiscardUnknown(m)
}

var xxx_messageInfo_TempInfoInMemory proto.InternalMessageInfo

func (m *TempInfoInMemory) GetIsOnEnterGame() bool {
	if m != nil && m.IsOnEnterGame != nil {
		return *m.IsOnEnterGame
	}
	return false
}

func (m *TempInfoInMemory) GetOldPosX() int32 {
	if m != nil && m.OldPosX != nil {
		return *m.OldPosX
	}
	return 0
}

func (m *TempInfoInMemory) GetOldPosY() int32 {
	if m != nil && m.OldPosY != nil {
		return *m.OldPosY
	}
	return 0
}

func (m *TempInfoInMemory) GetOldSceneId() int32 {
	if m != nil && m.OldSceneId != nil {
		return *m.OldSceneId
	}
	return 0
}

func (m *TempInfoInMemory) GetMgRoomId() int32 {
	if m != nil && m.MgRoomId != nil {
		return *m.MgRoomId
	}
	return 0
}

func (m *TempInfoInMemory) GetBigBig() []*SpInfo {
	if m != nil {
		return m.BigBig
	}
	return nil
}

func (m *TempInfoInMemory) GetShowFlag() *RoleShowFlag {
	if m != nil {
		return m.ShowFlag
	}
	return nil
}

func (m *TempInfoInMemory) GetRisk() *FightRiskInfo {
	if m != nil {
		return m.Risk
	}
	return nil
}

func (m *TempInfoInMemory) GetIsUtf8() int32 {
	if m != nil && m.IsUtf8 != nil {
		return *m.IsUtf8
	}
	return 0
}

// 玩家宠物信息
type DbRolePetInfo struct {
	PetList              []*PetInfo  `protobuf:"bytes,1,rep,name=pet_list" json:"pet_list,omitempty"`
	OncePetIdList        []int32     `protobuf:"zigzag32,2,rep,name=once_pet_id_list" json:"once_pet_id_list,omitempty"`
	RefreshInfo          *PetRefresh `protobuf:"bytes,3,opt,name=refresh_info" json:"refresh_info,omitempty"`
	FightPetId           *int32      `protobuf:"zigzag32,4,req,name=fight_pet_id" json:"fight_pet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DbRolePetInfo) Reset()         { *m = DbRolePetInfo{} }
func (m *DbRolePetInfo) String() string { return proto.CompactTextString(m) }
func (*DbRolePetInfo) ProtoMessage()    {}
func (*DbRolePetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{49}
}
func (m *DbRolePetInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbRolePetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbRolePetInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbRolePetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbRolePetInfo.Merge(m, src)
}
func (m *DbRolePetInfo) XXX_Size() int {
	return m.Size()
}
func (m *DbRolePetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DbRolePetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DbRolePetInfo proto.InternalMessageInfo

func (m *DbRolePetInfo) GetPetList() []*PetInfo {
	if m != nil {
		return m.PetList
	}
	return nil
}

func (m *DbRolePetInfo) GetOncePetIdList() []int32 {
	if m != nil {
		return m.OncePetIdList
	}
	return nil
}

func (m *DbRolePetInfo) GetRefreshInfo() *PetRefresh {
	if m != nil {
		return m.RefreshInfo
	}
	return nil
}

func (m *DbRolePetInfo) GetFightPetId() int32 {
	if m != nil && m.FightPetId != nil {
		return *m.FightPetId
	}
	return 0
}

type RoleServerMail struct {
	MailId               *int32   `protobuf:"zigzag32,1,opt,name=mail_id" json:"mail_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleServerMail) Reset()         { *m = RoleServerMail{} }
func (m *RoleServerMail) String() string { return proto.CompactTextString(m) }
func (*RoleServerMail) ProtoMessage()    {}
func (*RoleServerMail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{50}
}
func (m *RoleServerMail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleServerMail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleServerMail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleServerMail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleServerMail.Merge(m, src)
}
func (m *RoleServerMail) XXX_Size() int {
	return m.Size()
}
func (m *RoleServerMail) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleServerMail.DiscardUnknown(m)
}

var xxx_messageInfo_RoleServerMail proto.InternalMessageInfo

func (m *RoleServerMail) GetMailId() int32 {
	if m != nil && m.MailId != nil {
		return *m.MailId
	}
	return 0
}

// 扭蛋机按键
type ButtonCd struct {
	Cd                   []int64  `protobuf:"zigzag64,1,rep,name=cd" json:"cd,omitempty"`
	CdTimestamp          []int64  `protobuf:"zigzag64,2,rep,name=cd_timestamp" json:"cd_timestamp,omitempty"`
	FirstTouch           []bool   `protobuf:"varint,3,rep,name=first_touch" json:"first_touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ButtonCd) Reset()         { *m = ButtonCd{} }
func (m *ButtonCd) String() string { return proto.CompactTextString(m) }
func (*ButtonCd) ProtoMessage()    {}
func (*ButtonCd) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{51}
}
func (m *ButtonCd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ButtonCd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ButtonCd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ButtonCd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonCd.Merge(m, src)
}
func (m *ButtonCd) XXX_Size() int {
	return m.Size()
}
func (m *ButtonCd) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonCd.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonCd proto.InternalMessageInfo

func (m *ButtonCd) GetCd() []int64 {
	if m != nil {
		return m.Cd
	}
	return nil
}

func (m *ButtonCd) GetCdTimestamp() []int64 {
	if m != nil {
		return m.CdTimestamp
	}
	return nil
}

func (m *ButtonCd) GetFirstTouch() []bool {
	if m != nil {
		return m.FirstTouch
	}
	return nil
}

// 网络分享信息
type WwwShareInfo struct {
	RiskIdList           []int32  `protobuf:"zigzag32,1,rep,name=risk_id_list" json:"risk_id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WwwShareInfo) Reset()         { *m = WwwShareInfo{} }
func (m *WwwShareInfo) String() string { return proto.CompactTextString(m) }
func (*WwwShareInfo) ProtoMessage()    {}
func (*WwwShareInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{52}
}
func (m *WwwShareInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WwwShareInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WwwShareInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WwwShareInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WwwShareInfo.Merge(m, src)
}
func (m *WwwShareInfo) XXX_Size() int {
	return m.Size()
}
func (m *WwwShareInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WwwShareInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WwwShareInfo proto.InternalMessageInfo

func (m *WwwShareInfo) GetRiskIdList() []int32 {
	if m != nil {
		return m.RiskIdList
	}
	return nil
}

// 服务器管理信息, 如禁言
type ServerGmInfo struct {
	CanSpeak             *int32   `protobuf:"zigzag32,1,opt,name=can_speak" json:"can_speak,omitempty"`
	NextSpeakTime        *int64   `protobuf:"zigzag64,2,opt,name=next_speak_time" json:"next_speak_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerGmInfo) Reset()         { *m = ServerGmInfo{} }
func (m *ServerGmInfo) String() string { return proto.CompactTextString(m) }
func (*ServerGmInfo) ProtoMessage()    {}
func (*ServerGmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{53}
}
func (m *ServerGmInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServerGmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServerGmInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServerGmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerGmInfo.Merge(m, src)
}
func (m *ServerGmInfo) XXX_Size() int {
	return m.Size()
}
func (m *ServerGmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerGmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerGmInfo proto.InternalMessageInfo

func (m *ServerGmInfo) GetCanSpeak() int32 {
	if m != nil && m.CanSpeak != nil {
		return *m.CanSpeak
	}
	return 0
}

func (m *ServerGmInfo) GetNextSpeakTime() int64 {
	if m != nil && m.NextSpeakTime != nil {
		return *m.NextSpeakTime
	}
	return 0
}

type ServerUpdateInfo struct {
	FightInitBug         *bool    `protobuf:"varint,1,opt,name=fight_init_bug" json:"fight_init_bug,omitempty"`
	FixEquipExistBug     *bool    `protobuf:"varint,2,opt,name=fix_equip_exist_bug" json:"fix_equip_exist_bug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerUpdateInfo) Reset()         { *m = ServerUpdateInfo{} }
func (m *ServerUpdateInfo) String() string { return proto.CompactTextString(m) }
func (*ServerUpdateInfo) ProtoMessage()    {}
func (*ServerUpdateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{54}
}
func (m *ServerUpdateInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServerUpdateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServerUpdateInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServerUpdateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerUpdateInfo.Merge(m, src)
}
func (m *ServerUpdateInfo) XXX_Size() int {
	return m.Size()
}
func (m *ServerUpdateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerUpdateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerUpdateInfo proto.InternalMessageInfo

func (m *ServerUpdateInfo) GetFightInitBug() bool {
	if m != nil && m.FightInitBug != nil {
		return *m.FightInitBug
	}
	return false
}

func (m *ServerUpdateInfo) GetFixEquipExistBug() bool {
	if m != nil && m.FixEquipExistBug != nil {
		return *m.FixEquipExistBug
	}
	return false
}

// 角色活动信息
type RoleActivityInfo struct {
	ActivityList         []*ActivityInfo `protobuf:"bytes,2,rep,name=activity_list" json:"activity_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RoleActivityInfo) Reset()         { *m = RoleActivityInfo{} }
func (m *RoleActivityInfo) String() string { return proto.CompactTextString(m) }
func (*RoleActivityInfo) ProtoMessage()    {}
func (*RoleActivityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{55}
}
func (m *RoleActivityInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleActivityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleActivityInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleActivityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleActivityInfo.Merge(m, src)
}
func (m *RoleActivityInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoleActivityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleActivityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoleActivityInfo proto.InternalMessageInfo

func (m *RoleActivityInfo) GetActivityList() []*ActivityInfo {
	if m != nil {
		return m.ActivityList
	}
	return nil
}

// 获取角色信息
type SqlResultRoleinfo struct {
	RoleIndex         *int64                     `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	Account           []byte                     `protobuf:"bytes,2,req,name=account" json:"account,omitempty"`
	Gender            *int32                     `protobuf:"zigzag32,3,req,name=gender" json:"gender,omitempty"`
	NickName          []byte                     `protobuf:"bytes,4,req,name=nick_name" json:"nick_name,omitempty"`
	Level             *int32                     `protobuf:"zigzag32,5,req,name=level" json:"level,omitempty"`
	SceneId           *int32                     `protobuf:"zigzag32,6,req,name=scene_id" json:"scene_id,omitempty"`
	PosX              *int32                     `protobuf:"zigzag32,7,req,name=pos_x" json:"pos_x,omitempty"`
	PosY              *int32                     `protobuf:"zigzag32,8,req,name=pos_y" json:"pos_y,omitempty"`
	GameCoin          *int64                     `protobuf:"zigzag64,9,req,name=game_coin" json:"game_coin,omitempty"`
	Endurance         *int64                     `protobuf:"zigzag64,10,req,name=endurance" json:"endurance,omitempty"`
	DiamondCoin       *int64                     `protobuf:"zigzag64,11,req,name=diamond_coin" json:"diamond_coin,omitempty"`
	Exp               *int64                     `protobuf:"zigzag64,12,req,name=exp" json:"exp,omitempty"`
	SkillPoint        *int64                     `protobuf:"zigzag64,13,req,name=skill_point" json:"skill_point,omitempty"`
	VipLevel          *int32                     `protobuf:"zigzag32,14,opt,name=vip_level" json:"vip_level,omitempty"`
	PlayerId          []byte                     `protobuf:"bytes,15,opt,name=player_id" json:"player_id,omitempty"`
	MoveSpeed         *int32                     `protobuf:"zigzag32,16,opt,name=move_speed" json:"move_speed,omitempty"`
	ToLeft            *bool                      `protobuf:"varint,17,opt,name=to_left" json:"to_left,omitempty"`
	GmInfo            *ServerGmInfo              `protobuf:"bytes,50,opt,name=gm_info" json:"gm_info,omitempty"`
	EquipFixBag       *ListDbFixEquips           `protobuf:"bytes,51,opt,name=equip_fix_bag" json:"equip_fix_bag,omitempty"`
	BagItemInfo       *ListDbBagItems            `protobuf:"bytes,52,opt,name=bag_item_info" json:"bag_item_info,omitempty"`
	BagEquipInfo      *ListDbBagEquips           `protobuf:"bytes,53,opt,name=bag_equip_info" json:"bag_equip_info,omitempty"`
	EquipInfo         *ListDbRoleEquips          `protobuf:"bytes,54,opt,name=equip_info" json:"equip_info,omitempty"`
	SuitInfo          *ListDbRoleSuitInfo        `protobuf:"bytes,55,opt,name=suit_info" json:"suit_info,omitempty"`
	FaceInfo          *ListDbRoleFaceInfo        `protobuf:"bytes,56,opt,name=face_info" json:"face_info,omitempty"`
	TalentSkills      *ListDbRoleTalentSkillInfo `protobuf:"bytes,57,opt,name=talent_skills" json:"talent_skills,omitempty"`
	BookSkills        *ListDbRoleBookSkillInfo   `protobuf:"bytes,58,opt,name=book_skills" json:"book_skills,omitempty"`
	SuitSkills        *ListDbRoleSuitSkillInfo   `protobuf:"bytes,59,opt,name=suit_skills" json:"suit_skills,omitempty"`
	FriendInfo        *ListDbRoleFriendInfo      `protobuf:"bytes,60,opt,name=friend_info" json:"friend_info,omitempty"`
	PetInfo           *DbRolePetInfo             `protobuf:"bytes,61,opt,name=pet_info" json:"pet_info,omitempty"`
	RiskInfo          *ListDbRoleRiskInfo        `protobuf:"bytes,62,opt,name=risk_info" json:"risk_info,omitempty"`
	TaskInfo          *DbTask                    `protobuf:"bytes,63,opt,name=task_info" json:"task_info,omitempty"`
	SuccessInfo       *ListDbRoleSuccessInfo     `protobuf:"bytes,64,opt,name=success_info" json:"success_info,omitempty"`
	GuideInfo         *ListDbRoleGuideInfo       `protobuf:"bytes,65,opt,name=guide_info" json:"guide_info,omitempty"`
	SystemConfig      *DbRoleSystemConfig        `protobuf:"bytes,66,opt,name=system_config" json:"system_config,omitempty"`
	RoleTimeStampList *ListDbRoleTimeStamp       `protobuf:"bytes,67,opt,name=role_time_stamp_list" json:"role_time_stamp_list,omitempty"`
	DbCardInfo        *VisitingCardInfo          `protobuf:"bytes,68,opt,name=db_card_info" json:"db_card_info,omitempty"`
	CardInfo          *RoleCardInfo              `protobuf:"bytes,69,opt,name=card_info" json:"card_info,omitempty"`
	ArenaKill         *ArenaKillInfo             `protobuf:"bytes,70,opt,name=arena_kill" json:"arena_kill,omitempty"`
	ArenaInfo         *DbArenaInfo               `protobuf:"bytes,71,opt,name=arena_info" json:"arena_info,omitempty"`
	SwordInfo         *DbSwordInfo               `protobuf:"bytes,72,opt,name=sword_info" json:"sword_info,omitempty"`
	DailyTaskInfo     *ListDailyTaskInfo         `protobuf:"bytes,73,opt,name=daily_task_info" json:"daily_task_info,omitempty"`
	ActivityInfo      *DbDailyActivityInfo       `protobuf:"bytes,74,opt,name=activity_info" json:"activity_info,omitempty"`
	LoginTimeInfo     *DbLoginRoleTime           `protobuf:"bytes,75,opt,name=login_time_info" json:"login_time_info,omitempty"`
	MinigameInfo      *MinigamePlayInfo          `protobuf:"bytes,76,opt,name=minigame_info" json:"minigame_info,omitempty"`
	StaminaInfo       *DbStaminaInfo             `protobuf:"bytes,77,opt,name=stamina_info" json:"stamina_info,omitempty"`
	ManagerFriend     *FriendManagerInfo         `protobuf:"bytes,78,opt,name=manager_friend" json:"manager_friend,omitempty"`
	SignInfo          *ListSignInfo              `protobuf:"bytes,79,opt,name=sign_info" json:"sign_info,omitempty"`
	SevenDay          *SevenDayInfo              `protobuf:"bytes,80,opt,name=seven_day" json:"seven_day,omitempty"`
	PointGold         *PointGoldInfo             `protobuf:"bytes,81,opt,name=point_gold" json:"point_gold,omitempty"`
	FriendAssist      *ListFriendAssistInfo      `protobuf:"bytes,82,opt,name=friend_assist" json:"friend_assist,omitempty"`
	PersonEasterEgg   *ListPersonEasterEgg       `protobuf:"bytes,83,opt,name=person_easter_egg" json:"person_easter_egg,omitempty"`
	RechargeMoney     *RechargeMoneyInfo         `protobuf:"bytes,84,opt,name=recharge_money" json:"recharge_money,omitempty"`
	OldDriverInfo     *OldDriver                 `protobuf:"bytes,85,opt,name=old_driver_info" json:"old_driver_info,omitempty"`
	CountInfo         *RoleCountInfo             `protobuf:"bytes,86,opt,name=count_info" json:"count_info,omitempty"`
	HomeInfo          *DbHomeInfo                `protobuf:"bytes,87,opt,name=home_info" json:"home_info,omitempty"`
	DanmakuInfo       *DbDanmakuInfo             `protobuf:"bytes,88,opt,name=danmaku_info" json:"danmaku_info,omitempty"`
	InteractInfo      *RoleInteractInfo          `protobuf:"bytes,89,opt,name=interact_info" json:"interact_info,omitempty"`
	MailInfo          *RoleServerMail            `protobuf:"bytes,90,opt,name=mail_info" json:"mail_info,omitempty"`
	ButtonInfo        []*ButtonCd                `protobuf:"bytes,91,rep,name=button_info" json:"button_info,omitempty"`
	Guadratic         *GuadraticInfo             `protobuf:"bytes,92,opt,name=guadratic" json:"guadratic,omitempty"`
	ShareInfo         *WwwShareInfo              `protobuf:"bytes,93,opt,name=share_info" json:"share_info,omitempty"`
	Activity          *RoleActivityInfo          `protobuf:"bytes,94,opt,name=activity" json:"activity,omitempty"`
	CombinationSkill  *CombinationSkillInfo      `protobuf:"bytes,95,opt,name=combination_skill" json:"combination_skill,omitempty"`
	OpenInfo          *RoleOpenPackage           `protobuf:"bytes,96,opt,name=open_info" json:"open_info,omitempty"`
	CommonShop        *RoleCommonShop            `protobuf:"bytes,97,opt,name=common_shop" json:"common_shop,omitempty"`
	VersionUpdate     *ServerUpdateInfo          `protobuf:"bytes,98,opt,name=version_update" json:"version_update,omitempty"`
	MemoryInfo        *TempInfoInMemory          `protobuf:"bytes,200,opt,name=memory_info" json:"memory_info,omitempty"`
	// 角色扩展属性
	ExtendAttr1          *RoleinfoExtendAttr_1 `protobuf:"bytes,201,opt,name=extend_attr1" json:"extend_attr1,omitempty"`
	ExtendAttr2          *RoleinfoExtendAttr_2 `protobuf:"bytes,202,opt,name=extend_attr2" json:"extend_attr2,omitempty"`
	ExtendAttr3          *RoleinfoExtendAttr_3 `protobuf:"bytes,203,opt,name=extend_attr3" json:"extend_attr3,omitempty"`
	ExtendAttr4          *RoleinfoExtendAttr_4 `protobuf:"bytes,204,opt,name=extend_attr4" json:"extend_attr4,omitempty"`
	ExtendAttr5          *RoleinfoExtendAttr_5 `protobuf:"bytes,205,opt,name=extend_attr5" json:"extend_attr5,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SqlResultRoleinfo) Reset()         { *m = SqlResultRoleinfo{} }
func (m *SqlResultRoleinfo) String() string { return proto.CompactTextString(m) }
func (*SqlResultRoleinfo) ProtoMessage()    {}
func (*SqlResultRoleinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{56}
}
func (m *SqlResultRoleinfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SqlResultRoleinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SqlResultRoleinfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SqlResultRoleinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqlResultRoleinfo.Merge(m, src)
}
func (m *SqlResultRoleinfo) XXX_Size() int {
	return m.Size()
}
func (m *SqlResultRoleinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SqlResultRoleinfo.DiscardUnknown(m)
}

var xxx_messageInfo_SqlResultRoleinfo proto.InternalMessageInfo

func (m *SqlResultRoleinfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *SqlResultRoleinfo) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *SqlResultRoleinfo) GetGender() int32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

func (m *SqlResultRoleinfo) GetNickName() []byte {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *SqlResultRoleinfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *SqlResultRoleinfo) GetSceneId() int32 {
	if m != nil && m.SceneId != nil {
		return *m.SceneId
	}
	return 0
}

func (m *SqlResultRoleinfo) GetPosX() int32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *SqlResultRoleinfo) GetPosY() int32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *SqlResultRoleinfo) GetGameCoin() int64 {
	if m != nil && m.GameCoin != nil {
		return *m.GameCoin
	}
	return 0
}

func (m *SqlResultRoleinfo) GetEndurance() int64 {
	if m != nil && m.Endurance != nil {
		return *m.Endurance
	}
	return 0
}

func (m *SqlResultRoleinfo) GetDiamondCoin() int64 {
	if m != nil && m.DiamondCoin != nil {
		return *m.DiamondCoin
	}
	return 0
}

func (m *SqlResultRoleinfo) GetExp() int64 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *SqlResultRoleinfo) GetSkillPoint() int64 {
	if m != nil && m.SkillPoint != nil {
		return *m.SkillPoint
	}
	return 0
}

func (m *SqlResultRoleinfo) GetVipLevel() int32 {
	if m != nil && m.VipLevel != nil {
		return *m.VipLevel
	}
	return 0
}

func (m *SqlResultRoleinfo) GetPlayerId() []byte {
	if m != nil {
		return m.PlayerId
	}
	return nil
}

func (m *SqlResultRoleinfo) GetMoveSpeed() int32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *SqlResultRoleinfo) GetToLeft() bool {
	if m != nil && m.ToLeft != nil {
		return *m.ToLeft
	}
	return false
}

func (m *SqlResultRoleinfo) GetGmInfo() *ServerGmInfo {
	if m != nil {
		return m.GmInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetEquipFixBag() *ListDbFixEquips {
	if m != nil {
		return m.EquipFixBag
	}
	return nil
}

func (m *SqlResultRoleinfo) GetBagItemInfo() *ListDbBagItems {
	if m != nil {
		return m.BagItemInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetBagEquipInfo() *ListDbBagEquips {
	if m != nil {
		return m.BagEquipInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetEquipInfo() *ListDbRoleEquips {
	if m != nil {
		return m.EquipInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSuitInfo() *ListDbRoleSuitInfo {
	if m != nil {
		return m.SuitInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetFaceInfo() *ListDbRoleFaceInfo {
	if m != nil {
		return m.FaceInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetTalentSkills() *ListDbRoleTalentSkillInfo {
	if m != nil {
		return m.TalentSkills
	}
	return nil
}

func (m *SqlResultRoleinfo) GetBookSkills() *ListDbRoleBookSkillInfo {
	if m != nil {
		return m.BookSkills
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSuitSkills() *ListDbRoleSuitSkillInfo {
	if m != nil {
		return m.SuitSkills
	}
	return nil
}

func (m *SqlResultRoleinfo) GetFriendInfo() *ListDbRoleFriendInfo {
	if m != nil {
		return m.FriendInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetPetInfo() *DbRolePetInfo {
	if m != nil {
		return m.PetInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetRiskInfo() *ListDbRoleRiskInfo {
	if m != nil {
		return m.RiskInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetTaskInfo() *DbTask {
	if m != nil {
		return m.TaskInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSuccessInfo() *ListDbRoleSuccessInfo {
	if m != nil {
		return m.SuccessInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetGuideInfo() *ListDbRoleGuideInfo {
	if m != nil {
		return m.GuideInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSystemConfig() *DbRoleSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SqlResultRoleinfo) GetRoleTimeStampList() *ListDbRoleTimeStamp {
	if m != nil {
		return m.RoleTimeStampList
	}
	return nil
}

func (m *SqlResultRoleinfo) GetDbCardInfo() *VisitingCardInfo {
	if m != nil {
		return m.DbCardInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetCardInfo() *RoleCardInfo {
	if m != nil {
		return m.CardInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetArenaKill() *ArenaKillInfo {
	if m != nil {
		return m.ArenaKill
	}
	return nil
}

func (m *SqlResultRoleinfo) GetArenaInfo() *DbArenaInfo {
	if m != nil {
		return m.ArenaInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSwordInfo() *DbSwordInfo {
	if m != nil {
		return m.SwordInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetDailyTaskInfo() *ListDailyTaskInfo {
	if m != nil {
		return m.DailyTaskInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetActivityInfo() *DbDailyActivityInfo {
	if m != nil {
		return m.ActivityInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetLoginTimeInfo() *DbLoginRoleTime {
	if m != nil {
		return m.LoginTimeInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetMinigameInfo() *MinigamePlayInfo {
	if m != nil {
		return m.MinigameInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetStaminaInfo() *DbStaminaInfo {
	if m != nil {
		return m.StaminaInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetManagerFriend() *FriendManagerInfo {
	if m != nil {
		return m.ManagerFriend
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSignInfo() *ListSignInfo {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetSevenDay() *SevenDayInfo {
	if m != nil {
		return m.SevenDay
	}
	return nil
}

func (m *SqlResultRoleinfo) GetPointGold() *PointGoldInfo {
	if m != nil {
		return m.PointGold
	}
	return nil
}

func (m *SqlResultRoleinfo) GetFriendAssist() *ListFriendAssistInfo {
	if m != nil {
		return m.FriendAssist
	}
	return nil
}

func (m *SqlResultRoleinfo) GetPersonEasterEgg() *ListPersonEasterEgg {
	if m != nil {
		return m.PersonEasterEgg
	}
	return nil
}

func (m *SqlResultRoleinfo) GetRechargeMoney() *RechargeMoneyInfo {
	if m != nil {
		return m.RechargeMoney
	}
	return nil
}

func (m *SqlResultRoleinfo) GetOldDriverInfo() *OldDriver {
	if m != nil {
		return m.OldDriverInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetCountInfo() *RoleCountInfo {
	if m != nil {
		return m.CountInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetHomeInfo() *DbHomeInfo {
	if m != nil {
		return m.HomeInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetDanmakuInfo() *DbDanmakuInfo {
	if m != nil {
		return m.DanmakuInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetInteractInfo() *RoleInteractInfo {
	if m != nil {
		return m.InteractInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetMailInfo() *RoleServerMail {
	if m != nil {
		return m.MailInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetButtonInfo() []*ButtonCd {
	if m != nil {
		return m.ButtonInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetGuadratic() *GuadraticInfo {
	if m != nil {
		return m.Guadratic
	}
	return nil
}

func (m *SqlResultRoleinfo) GetShareInfo() *WwwShareInfo {
	if m != nil {
		return m.ShareInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetActivity() *RoleActivityInfo {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *SqlResultRoleinfo) GetCombinationSkill() *CombinationSkillInfo {
	if m != nil {
		return m.CombinationSkill
	}
	return nil
}

func (m *SqlResultRoleinfo) GetOpenInfo() *RoleOpenPackage {
	if m != nil {
		return m.OpenInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetCommonShop() *RoleCommonShop {
	if m != nil {
		return m.CommonShop
	}
	return nil
}

func (m *SqlResultRoleinfo) GetVersionUpdate() *ServerUpdateInfo {
	if m != nil {
		return m.VersionUpdate
	}
	return nil
}

func (m *SqlResultRoleinfo) GetMemoryInfo() *TempInfoInMemory {
	if m != nil {
		return m.MemoryInfo
	}
	return nil
}

func (m *SqlResultRoleinfo) GetExtendAttr1() *RoleinfoExtendAttr_1 {
	if m != nil {
		return m.ExtendAttr1
	}
	return nil
}

func (m *SqlResultRoleinfo) GetExtendAttr2() *RoleinfoExtendAttr_2 {
	if m != nil {
		return m.ExtendAttr2
	}
	return nil
}

func (m *SqlResultRoleinfo) GetExtendAttr3() *RoleinfoExtendAttr_3 {
	if m != nil {
		return m.ExtendAttr3
	}
	return nil
}

func (m *SqlResultRoleinfo) GetExtendAttr4() *RoleinfoExtendAttr_4 {
	if m != nil {
		return m.ExtendAttr4
	}
	return nil
}

func (m *SqlResultRoleinfo) GetExtendAttr5() *RoleinfoExtendAttr_5 {
	if m != nil {
		return m.ExtendAttr5
	}
	return nil
}

// 澡堂玩家信息
type BathhousePlayer struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,req,name=role_index" json:"role_index,omitempty"`
	StatusId             *int32   `protobuf:"zigzag32,2,req,name=status_id" json:"status_id,omitempty"`
	StatusBeginTime      *int64   `protobuf:"zigzag64,3,req,name=status_begin_time" json:"status_begin_time,omitempty"`
	Fullness             *int32   `protobuf:"zigzag32,4,req,name=fullness" json:"fullness,omitempty"`
	Stamina              *int32   `protobuf:"zigzag32,5,req,name=stamina" json:"stamina,omitempty"`
	Exp                  *int32   `protobuf:"zigzag32,6,req,name=exp" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BathhousePlayer) Reset()         { *m = BathhousePlayer{} }
func (m *BathhousePlayer) String() string { return proto.CompactTextString(m) }
func (*BathhousePlayer) ProtoMessage()    {}
func (*BathhousePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{57}
}
func (m *BathhousePlayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BathhousePlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BathhousePlayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BathhousePlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BathhousePlayer.Merge(m, src)
}
func (m *BathhousePlayer) XXX_Size() int {
	return m.Size()
}
func (m *BathhousePlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_BathhousePlayer.DiscardUnknown(m)
}

var xxx_messageInfo_BathhousePlayer proto.InternalMessageInfo

func (m *BathhousePlayer) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *BathhousePlayer) GetStatusId() int32 {
	if m != nil && m.StatusId != nil {
		return *m.StatusId
	}
	return 0
}

func (m *BathhousePlayer) GetStatusBeginTime() int64 {
	if m != nil && m.StatusBeginTime != nil {
		return *m.StatusBeginTime
	}
	return 0
}

func (m *BathhousePlayer) GetFullness() int32 {
	if m != nil && m.Fullness != nil {
		return *m.Fullness
	}
	return 0
}

func (m *BathhousePlayer) GetStamina() int32 {
	if m != nil && m.Stamina != nil {
		return *m.Stamina
	}
	return 0
}

func (m *BathhousePlayer) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

// 好友请求信息
type SqlFriendMngInfo struct {
	RoleIndex            *int64        `protobuf:"varint,1,req,name=role_index" json:"role_index,omitempty"`
	ReqRoleIndex         *int64        `protobuf:"varint,2,req,name=req_role_index" json:"req_role_index,omitempty"`
	ReqFriendInfo        *DbFriendInfo `protobuf:"bytes,3,opt,name=req_friend_info" json:"req_friend_info,omitempty"`
	ReqType              *int32        `protobuf:"varint,4,req,name=req_type" json:"req_type,omitempty"`
	ReqTime              *int64        `protobuf:"varint,5,opt,name=req_time" json:"req_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SqlFriendMngInfo) Reset()         { *m = SqlFriendMngInfo{} }
func (m *SqlFriendMngInfo) String() string { return proto.CompactTextString(m) }
func (*SqlFriendMngInfo) ProtoMessage()    {}
func (*SqlFriendMngInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{58}
}
func (m *SqlFriendMngInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SqlFriendMngInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SqlFriendMngInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SqlFriendMngInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqlFriendMngInfo.Merge(m, src)
}
func (m *SqlFriendMngInfo) XXX_Size() int {
	return m.Size()
}
func (m *SqlFriendMngInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SqlFriendMngInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SqlFriendMngInfo proto.InternalMessageInfo

func (m *SqlFriendMngInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *SqlFriendMngInfo) GetReqRoleIndex() int64 {
	if m != nil && m.ReqRoleIndex != nil {
		return *m.ReqRoleIndex
	}
	return 0
}

func (m *SqlFriendMngInfo) GetReqFriendInfo() *DbFriendInfo {
	if m != nil {
		return m.ReqFriendInfo
	}
	return nil
}

func (m *SqlFriendMngInfo) GetReqType() int32 {
	if m != nil && m.ReqType != nil {
		return *m.ReqType
	}
	return 0
}

func (m *SqlFriendMngInfo) GetReqTime() int64 {
	if m != nil && m.ReqTime != nil {
		return *m.ReqTime
	}
	return 0
}

// 存盘角色
type SqlResultSaveRole struct {
	RetCode              *int32   `protobuf:"varint,2,req,name=ret_code" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqlResultSaveRole) Reset()         { *m = SqlResultSaveRole{} }
func (m *SqlResultSaveRole) String() string { return proto.CompactTextString(m) }
func (*SqlResultSaveRole) ProtoMessage()    {}
func (*SqlResultSaveRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{59}
}
func (m *SqlResultSaveRole) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SqlResultSaveRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SqlResultSaveRole.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SqlResultSaveRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqlResultSaveRole.Merge(m, src)
}
func (m *SqlResultSaveRole) XXX_Size() int {
	return m.Size()
}
func (m *SqlResultSaveRole) XXX_DiscardUnknown() {
	xxx_messageInfo_SqlResultSaveRole.DiscardUnknown(m)
}

var xxx_messageInfo_SqlResultSaveRole proto.InternalMessageInfo

func (m *SqlResultSaveRole) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 活跃值变化信息
type DailyActivityChangeInfo struct {
	TotalActivity        *int32   `protobuf:"zigzag32,1,req,name=total_activity" json:"total_activity,omitempty"`
	ActivityDiff         *int32   `protobuf:"zigzag32,2,req,name=activity_diff" json:"activity_diff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DailyActivityChangeInfo) Reset()         { *m = DailyActivityChangeInfo{} }
func (m *DailyActivityChangeInfo) String() string { return proto.CompactTextString(m) }
func (*DailyActivityChangeInfo) ProtoMessage()    {}
func (*DailyActivityChangeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{60}
}
func (m *DailyActivityChangeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DailyActivityChangeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DailyActivityChangeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DailyActivityChangeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DailyActivityChangeInfo.Merge(m, src)
}
func (m *DailyActivityChangeInfo) XXX_Size() int {
	return m.Size()
}
func (m *DailyActivityChangeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DailyActivityChangeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DailyActivityChangeInfo proto.InternalMessageInfo

func (m *DailyActivityChangeInfo) GetTotalActivity() int32 {
	if m != nil && m.TotalActivity != nil {
		return *m.TotalActivity
	}
	return 0
}

func (m *DailyActivityChangeInfo) GetActivityDiff() int32 {
	if m != nil && m.ActivityDiff != nil {
		return *m.ActivityDiff
	}
	return 0
}

// SQL返回节点信息
type SqlRetClusterNodeInfo struct {
	NodeIndex            *int64   `protobuf:"zigzag64,1,req,name=node_index" json:"node_index,omitempty"`
	Intaddr              *int64   `protobuf:"zigzag64,2,req,name=intaddr" json:"intaddr,omitempty"`
	UnitNextIndex        *int64   `protobuf:"zigzag64,3,req,name=unit_next_index" json:"unit_next_index,omitempty"`
	CpuPressure          *int64   `protobuf:"zigzag64,4,req,name=cpu_pressure" json:"cpu_pressure,omitempty"`
	IsOnline             *bool    `protobuf:"varint,5,req,name=is_online" json:"is_online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqlRetClusterNodeInfo) Reset()         { *m = SqlRetClusterNodeInfo{} }
func (m *SqlRetClusterNodeInfo) String() string { return proto.CompactTextString(m) }
func (*SqlRetClusterNodeInfo) ProtoMessage()    {}
func (*SqlRetClusterNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{61}
}
func (m *SqlRetClusterNodeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SqlRetClusterNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SqlRetClusterNodeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SqlRetClusterNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqlRetClusterNodeInfo.Merge(m, src)
}
func (m *SqlRetClusterNodeInfo) XXX_Size() int {
	return m.Size()
}
func (m *SqlRetClusterNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SqlRetClusterNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SqlRetClusterNodeInfo proto.InternalMessageInfo

func (m *SqlRetClusterNodeInfo) GetNodeIndex() int64 {
	if m != nil && m.NodeIndex != nil {
		return *m.NodeIndex
	}
	return 0
}

func (m *SqlRetClusterNodeInfo) GetIntaddr() int64 {
	if m != nil && m.Intaddr != nil {
		return *m.Intaddr
	}
	return 0
}

func (m *SqlRetClusterNodeInfo) GetUnitNextIndex() int64 {
	if m != nil && m.UnitNextIndex != nil {
		return *m.UnitNextIndex
	}
	return 0
}

func (m *SqlRetClusterNodeInfo) GetCpuPressure() int64 {
	if m != nil && m.CpuPressure != nil {
		return *m.CpuPressure
	}
	return 0
}

func (m *SqlRetClusterNodeInfo) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

// 交互表情系统
type RoleInteractInfo struct {
	Energy               *int32   `protobuf:"zigzag32,1,req,name=energy" json:"energy,omitempty"`
	GetEnergyId          *int32   `protobuf:"zigzag32,2,req,name=get_energy_id" json:"get_energy_id,omitempty"`
	GetRewardId          *int32   `protobuf:"zigzag32,3,req,name=get_reward_id" json:"get_reward_id,omitempty"`
	ActIdList            []int32  `protobuf:"zigzag32,4,rep,name=act_id_list" json:"act_id_list,omitempty"`
	ActiveActList        []int32  `protobuf:"zigzag32,5,rep,name=active_act_list" json:"active_act_list,omitempty"`
	AutoActList          []int32  `protobuf:"zigzag32,6,rep,name=auto_act_list" json:"auto_act_list,omitempty"`
	CanUnlockActList     []int32  `protobuf:"zigzag32,7,rep,name=can_unlock_act_list" json:"can_unlock_act_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleInteractInfo) Reset()         { *m = RoleInteractInfo{} }
func (m *RoleInteractInfo) String() string { return proto.CompactTextString(m) }
func (*RoleInteractInfo) ProtoMessage()    {}
func (*RoleInteractInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d264e595b910d41d, []int{62}
}
func (m *RoleInteractInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleInteractInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleInteractInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleInteractInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleInteractInfo.Merge(m, src)
}
func (m *RoleInteractInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoleInteractInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleInteractInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoleInteractInfo proto.InternalMessageInfo

func (m *RoleInteractInfo) GetEnergy() int32 {
	if m != nil && m.Energy != nil {
		return *m.Energy
	}
	return 0
}

func (m *RoleInteractInfo) GetGetEnergyId() int32 {
	if m != nil && m.GetEnergyId != nil {
		return *m.GetEnergyId
	}
	return 0
}

func (m *RoleInteractInfo) GetGetRewardId() int32 {
	if m != nil && m.GetRewardId != nil {
		return *m.GetRewardId
	}
	return 0
}

func (m *RoleInteractInfo) GetActIdList() []int32 {
	if m != nil {
		return m.ActIdList
	}
	return nil
}

func (m *RoleInteractInfo) GetActiveActList() []int32 {
	if m != nil {
		return m.ActiveActList
	}
	return nil
}

func (m *RoleInteractInfo) GetAutoActList() []int32 {
	if m != nil {
		return m.AutoActList
	}
	return nil
}

func (m *RoleInteractInfo) GetCanUnlockActList() []int32 {
	if m != nil {
		return m.CanUnlockActList
	}
	return nil
}

func init() {
	proto.RegisterType((*SuitGoodsInfo)(nil), "pbd.suit_goods_info")
	proto.RegisterType((*SuitInfo)(nil), "pbd.suit_info")
	proto.RegisterType((*ListDbRoleSuitInfo)(nil), "pbd.list_db_role_suit_info")
	proto.RegisterType((*FaceGoodsInfo)(nil), "pbd.face_goods_info")
	proto.RegisterType((*FaceInfo)(nil), "pbd.face_info")
	proto.RegisterType((*RoleCommonShop)(nil), "pbd.role_common_shop")
	proto.RegisterType((*ListSignInfo)(nil), "pbd.list_sign_info")
	proto.RegisterType((*SevenDayDetail)(nil), "pbd.seven_day_detail")
	proto.RegisterType((*SevenDayInfo)(nil), "pbd.seven_day_info")
	proto.RegisterType((*RiskInfo)(nil), "pbd.risk_info")
	proto.RegisterType((*RewardBox)(nil), "pbd.reward_box")
	proto.RegisterType((*ChapterInfo)(nil), "pbd.chapter_info")
	proto.RegisterType((*RoleFacePreferInfo)(nil), "pbd.role_face_prefer_info")
	proto.RegisterType((*ListFaceShopInfo)(nil), "pbd.list_face_shop_info")
	proto.RegisterType((*ListDbRoleFaceInfo)(nil), "pbd.list_db_role_face_info")
	proto.RegisterType((*DbSkillInfo)(nil), "pbd.db_skill_info")
	proto.RegisterType((*DbArenaInfo)(nil), "pbd.db_arena_info")
	proto.RegisterType((*DbSwordInfo)(nil), "pbd.db_sword_info")
	proto.RegisterType((*ListDbRoleTalentSkillInfo)(nil), "pbd.list_db_role_talent_skill_info")
	proto.RegisterType((*ListDbRoleBookSkillInfo)(nil), "pbd.list_db_role_book_skill_info")
	proto.RegisterType((*ListDbRoleSuitSkillInfo)(nil), "pbd.list_db_role_suit_skill_info")
	proto.RegisterType((*ListDbRoleFriendInfo)(nil), "pbd.list_db_role_friend_info")
	proto.RegisterType((*ListDbRoleRiskInfo)(nil), "pbd.list_db_role_risk_info")
	proto.RegisterType((*DbTask)(nil), "pbd.db_task")
	proto.RegisterType((*ListDbRoleSuccessInfo)(nil), "pbd.list_db_role_success_info")
	proto.RegisterType((*ListDbRoleGuideInfo)(nil), "pbd.list_db_role_guide_info")
	proto.RegisterType((*DbRoleSystemConfig)(nil), "pbd.db_role_system_config")
	proto.RegisterType((*ListDbRoleTimeStamp)(nil), "pbd.list_db_role_time_stamp")
	proto.RegisterType((*DbLoginRoleTime)(nil), "pbd.db_login_role_time")
	proto.RegisterType((*DbStaminaInfo)(nil), "pbd.db_stamina_info")
	proto.RegisterType((*ListDailyTaskInfo)(nil), "pbd.list_daily_task_info")
	proto.RegisterType((*RoleinfoExtendAttr_1)(nil), "pbd.roleinfo_extend_attr_1")
	proto.RegisterType((*BathhouseTool)(nil), "pbd.bathhouse_tool")
	proto.RegisterType((*GuadraticInfo)(nil), "pbd.guadratic_info")
	proto.RegisterType((*RoleinfoExtendAttr_2)(nil), "pbd.roleinfo_extend_attr_2")
	proto.RegisterType((*RoleinfoExtendAttr_3)(nil), "pbd.roleinfo_extend_attr_3")
	proto.RegisterType((*RoleinfoExtendAttr_4)(nil), "pbd.roleinfo_extend_attr_4")
	proto.RegisterType((*RoleinfoExtendAttr_5)(nil), "pbd.roleinfo_extend_attr_5")
	proto.RegisterType((*RoleCardInfo)(nil), "pbd.role_card_info")
	proto.RegisterType((*PointGoldInfo)(nil), "pbd.point_gold_info")
	proto.RegisterType((*FriendManagerInfo)(nil), "pbd.friend_manager_info")
	proto.RegisterType((*ArenaKillInfo)(nil), "pbd.arena_kill_info")
	proto.RegisterType((*FriendAssistInfo)(nil), "pbd.friend_assist_info")
	proto.RegisterType((*ListFriendAssistInfo)(nil), "pbd.list_friend_assist_info")
	proto.RegisterType((*PersonEasterEggInfo)(nil), "pbd.person_easter_egg_info")
	proto.RegisterType((*ListPersonEasterEgg)(nil), "pbd.list_person_easter_egg")
	proto.RegisterType((*RechargeMoneyInfo)(nil), "pbd.recharge_money_info")
	proto.RegisterType((*RoleShowFlag)(nil), "pbd.role_show_flag")
	proto.RegisterType((*TempInfoInMemory)(nil), "pbd.temp_info_in_memory")
	proto.RegisterType((*DbRolePetInfo)(nil), "pbd.db_role_pet_info")
	proto.RegisterType((*RoleServerMail)(nil), "pbd.role_server_mail")
	proto.RegisterType((*ButtonCd)(nil), "pbd.button_cd")
	proto.RegisterType((*WwwShareInfo)(nil), "pbd.www_share_info")
	proto.RegisterType((*ServerGmInfo)(nil), "pbd.server_gm_info")
	proto.RegisterType((*ServerUpdateInfo)(nil), "pbd.server_update_info")
	proto.RegisterType((*RoleActivityInfo)(nil), "pbd.role_activity_info")
	proto.RegisterType((*SqlResultRoleinfo)(nil), "pbd.sql_result_roleinfo")
	proto.RegisterType((*BathhousePlayer)(nil), "pbd.bathhouse_player")
	proto.RegisterType((*SqlFriendMngInfo)(nil), "pbd.sql_friend_mng_info")
	proto.RegisterType((*SqlResultSaveRole)(nil), "pbd.sql_result_save_role")
	proto.RegisterType((*DailyActivityChangeInfo)(nil), "pbd.daily_activity_change_info")
	proto.RegisterType((*SqlRetClusterNodeInfo)(nil), "pbd.sql_ret_cluster_node_info")
	proto.RegisterType((*RoleInteractInfo)(nil), "pbd.role_interact_info")
}

func init() { proto.RegisterFile("Sql_Login.proto", fileDescriptor_d264e595b910d41d) }

var fileDescriptor_d264e595b910d41d = []byte{
	// 3764 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xcd, 0x93, 0x1c, 0x47,
	0x56, 0xa7, 0xbb, 0x35, 0x9a, 0xee, 0xd7, 0x5f, 0xd3, 0xd5, 0xa3, 0x99, 0x92, 0x46, 0x96, 0xb5,
	0x65, 0xad, 0x34, 0x36, 0xf2, 0x58, 0x1e, 0xc9, 0x62, 0xf1, 0x7a, 0xf1, 0x62, 0x0c, 0xf6, 0xb2,
	0x06, 0x0c, 0xde, 0x85, 0xe5, 0x63, 0x29, 0xb2, 0xab, 0xb2, 0xab, 0x93, 0xa9, 0xae, 0x2c, 0x57,
	0x66, 0xb5, 0x66, 0x6e, 0x40, 0x6c, 0x10, 0x44, 0xec, 0x85, 0x08, 0x2e, 0xfc, 0x13, 0x70, 0xe2,
	0x8f, 0x58, 0xbe, 0x22, 0xe0, 0xc0, 0x95, 0x00, 0x73, 0xe6, 0x2f, 0xe0, 0x42, 0xe4, 0xcb, 0xcc,
	0xaa, 0xac, 0xea, 0x1e, 0x29, 0x88, 0x80, 0x0b, 0x17, 0x69, 0xea, 0xbd, 0x97, 0x5f, 0x2f, 0xdf,
	0xe7, 0x2f, 0x1b, 0xa6, 0x5f, 0x7c, 0x99, 0x86, 0x9f, 0xf1, 0x84, 0x65, 0x67, 0x79, 0xc1, 0x25,
	0xf7, 0x7a, 0xf9, 0x22, 0xbe, 0x33, 0xf9, 0x5c, 0xfd, 0xfd, 0x31, 0x5d, 0x6a, 0xe2, 0x1d, 0xf8,
	0x1e, 0x11, 0x17, 0xe6, 0xef, 0xf1, 0xe7, 0xa4, 0xb8, 0xf8, 0x8c, 0x4b, 0xf3, 0x39, 0xfc, 0x94,
	0x97, 0x82, 0x5a, 0xde, 0xc7, 0x24, 0x5b, 0x93, 0x8b, 0x52, 0x7f, 0x06, 0x1f, 0xc2, 0x54, 0x94,
	0x4c, 0x86, 0x09, 0xe7, 0xb1, 0x08, 0x59, 0xb6, 0xe4, 0xde, 0x5d, 0x38, 0x8c, 0x48, 0x16, 0x2e,
	0xca, 0xab, 0x10, 0x59, 0x62, 0xc5, 0xf3, 0x90, 0xc5, 0x7e, 0xe7, 0x7e, 0xf7, 0x74, 0xe6, 0x4d,
	0xe0, 0x26, 0x13, 0x8a, 0xe9, 0x77, 0xef, 0x77, 0x4f, 0xfb, 0x41, 0x09, 0x03, 0x94, 0xc2, 0xa1,
	0x53, 0xd8, 0xd7, 0x1f, 0x56, 0xfa, 0x01, 0xdc, 0x45, 0x42, 0x99, 0xb1, 0x4b, 0xc9, 0xd6, 0x34,
	0xc4, 0x7f, 0x78, 0x29, 0x43, 0x21, 0xc9, 0x3a, 0xc7, 0x39, 0x3c, 0xef, 0x0e, 0x78, 0x28, 0x15,
	0x97, 0x05, 0x91, 0x8c, 0x67, 0xa1, 0xbc, 0xca, 0xa9, 0xdf, 0xc3, 0x19, 0x6e, 0xc1, 0x38, 0xa1,
	0x12, 0xc7, 0xe9, 0x21, 0x37, 0xd4, 0x90, 0xe0, 0xaf, 0x3b, 0x70, 0x94, 0x32, 0x21, 0xc3, 0x78,
	0x11, 0x16, 0x3c, 0xa5, 0x61, 0xbd, 0x89, 0x87, 0xd0, 0xb7, 0x7b, 0xf7, 0x3b, 0xf7, 0x7b, 0xa7,
	0xc3, 0xf3, 0xc3, 0xb3, 0x7c, 0x11, 0x9f, 0xb5, 0xcf, 0x19, 0xc0, 0x9d, 0xfa, 0x7c, 0x29, 0x11,
	0x32, 0x2c, 0xf3, 0x98, 0x48, 0xbd, 0x47, 0xb3, 0xb3, 0x07, 0x30, 0x8a, 0xca, 0xa2, 0xa0, 0x99,
	0xd4, 0xf3, 0xf5, 0xee, 0x77, 0x4e, 0x87, 0xe7, 0x93, 0x7a, 0x3e, 0x33, 0x13, 0xac, 0xc8, 0x46,
	0xef, 0x41, 0xf8, 0x37, 0x70, 0xcd, 0x96, 0x4c, 0xf0, 0x03, 0x98, 0x2e, 0x49, 0x44, 0xaf, 0x51,
	0x34, 0xb2, 0x5e, 0xaa, 0x68, 0xef, 0xd8, 0x4c, 0xa0, 0xa5, 0xb2, 0x98, 0x5e, 0x6a, 0x0d, 0xa9,
	0x1b, 0x40, 0x86, 0xbd, 0x01, 0xfd, 0xe1, 0xdc, 0x00, 0x12, 0x5e, 0x79, 0x03, 0x28, 0xf5, 0x3f,
	0xb8, 0x81, 0x0f, 0xe0, 0x00, 0x15, 0x1f, 0xf1, 0xf5, 0x9a, 0x67, 0xb8, 0x2d, 0xef, 0x14, 0x06,
	0x5a, 0x9b, 0x4c, 0x58, 0xdd, 0xdf, 0x42, 0x3d, 0x38, 0x42, 0x5a, 0x1d, 0x7f, 0xd6, 0x85, 0x09,
	0xde, 0x9f, 0x60, 0x49, 0xa6, 0xb7, 0x3e, 0x83, 0x01, 0x7e, 0x5c, 0x51, 0x52, 0x98, 0xcd, 0x7b,
	0x00, 0x48, 0x5a, 0xf3, 0x4c, 0xae, 0x70, 0xab, 0x33, 0xcf, 0x87, 0x03, 0xfc, 0x0c, 0x25, 0x97,
	0x24, 0x0d, 0x63, 0x72, 0x25, 0xcc, 0x46, 0x8f, 0x60, 0x82, 0xd2, 0x0b, 0x9a, 0xb0, 0x4c, 0x31,
	0x70, 0xa7, 0x78, 0x80, 0x8c, 0x5e, 0x9a, 0xa5, 0x14, 0x79, 0xaf, 0x31, 0x79, 0xc4, 0xcb, 0x4c,
	0xfa, 0x37, 0x91, 0x76, 0x1b, 0x66, 0x05, 0x95, 0x05, 0x27, 0x91, 0x64, 0x1b, 0x6a, 0x58, 0xfb,
	0xc8, 0x3a, 0x84, 0x51, 0xca, 0xa5, 0xa4, 0xc5, 0x95, 0x5e, 0xb3, 0x6f, 0x27, 0x59, 0x33, 0x21,
	0x8c, 0xe4, 0xa0, 0x9e, 0x64, 0x59, 0x50, 0xb1, 0xd2, 0x1b, 0xc7, 0x35, 0xc1, 0x8a, 0x4b, 0x1e,
	0x93, 0x2b, 0xdc, 0x8b, 0x3f, 0x44, 0x0f, 0x7a, 0x17, 0x0e, 0x04, 0xdd, 0x50, 0xdc, 0x5a, 0x18,
	0x53, 0x49, 0x58, 0xea, 0x0d, 0xa1, 0xa7, 0x06, 0x69, 0x2d, 0x1c, 0x40, 0x5f, 0x5d, 0xc0, 0x32,
	0x25, 0x89, 0xd6, 0x41, 0xf0, 0x05, 0x4c, 0xea, 0x21, 0xa8, 0x3c, 0x1f, 0x0e, 0xb4, 0x3e, 0x52,
	0x6e, 0x0e, 0x2f, 0xcc, 0xe8, 0x47, 0xd0, 0xb7, 0x52, 0x7e, 0xd7, 0xb9, 0x92, 0xf6, 0x9a, 0x01,
	0x85, 0x41, 0xc1, 0xc4, 0x85, 0x9e, 0x0f, 0xa0, 0xeb, 0x5a, 0x62, 0x4e, 0x84, 0xa0, 0xb1, 0xb9,
	0x81, 0x39, 0x0c, 0x97, 0x2c, 0x59, 0x49, 0x73, 0x68, 0xe5, 0x13, 0x48, 0x2c, 0xa8, 0xa0, 0x96,
	0x78, 0x03, 0x89, 0x4a, 0xc5, 0x2b, 0x52, 0x50, 0xbd, 0xf7, 0x3d, 0x45, 0x0b, 0xbe, 0x0e, 0x50,
	0xd0, 0x17, 0xa4, 0x88, 0xc3, 0x05, 0xbf, 0x6c, 0xac, 0x33, 0x84, 0x5e, 0x42, 0xa5, 0x39, 0x22,
	0x83, 0x51, 0xb4, 0x22, 0xb9, 0xa4, 0xc5, 0xf6, 0x86, 0x4e, 0xa0, 0x17, 0x97, 0xb9, 0x39, 0x8d,
	0x76, 0xb4, 0x7a, 0xe7, 0x77, 0xa1, 0xb7, 0xe0, 0xca, 0x37, 0x14, 0x73, 0xaa, 0x99, 0xf5, 0x7a,
	0x1e, 0x80, 0xd2, 0xa5, 0xa6, 0x68, 0xfb, 0x08, 0x3e, 0x82, 0x5b, 0x68, 0xc9, 0xe8, 0x01, 0x79,
	0x41, 0x97, 0x76, 0xcd, 0x23, 0x98, 0x90, 0x52, 0x72, 0x65, 0xb6, 0x2f, 0xf4, 0x11, 0x3a, 0xe8,
	0x8a, 0x33, 0xe3, 0x71, 0x68, 0xe6, 0x6a, 0x17, 0xb3, 0xe0, 0x3f, 0x3b, 0x30, 0x47, 0x7b, 0x76,
	0x7d, 0x74, 0xc9, 0xbd, 0x77, 0x60, 0xc6, 0x0b, 0x96, 0xb0, 0x8c, 0xa4, 0x95, 0xa3, 0x37, 0xa2,
	0x52, 0x3b, 0x28, 0xbc, 0x03, 0xb3, 0x98, 0x09, 0x54, 0x62, 0x3d, 0xa0, 0xfb, 0x92, 0x01, 0x01,
	0xdc, 0xa9, 0xd7, 0xdc, 0x0a, 0x63, 0x3d, 0x74, 0xef, 0x37, 0xe1, 0x6b, 0x2d, 0x99, 0x35, 0xc9,
	0x4a, 0x92, 0x36, 0x44, 0xd1, 0xad, 0xbd, 0xaf, 0xc3, 0x6b, 0xb5, 0x68, 0x53, 0x4a, 0xdf, 0x2c,
	0x3a, 0x4f, 0xf0, 0x57, 0xbd, 0x56, 0xfc, 0xad, 0x43, 0xd0, 0xff, 0xd3, 0x23, 0x57, 0x51, 0x5e,
	0xc9, 0x0a, 0xff, 0xa6, 0x63, 0x7c, 0xee, 0xd9, 0x87, 0x8e, 0x01, 0xf9, 0xfb, 0x98, 0x2e, 0xee,
	0x68, 0x23, 0xdc, 0x69, 0x62, 0x6f, 0xc1, 0x30, 0x2a, 0x85, 0xe4, 0x6b, 0x6d, 0x4c, 0x7d, 0xc7,
	0x41, 0x75, 0x74, 0xd5, 0x4c, 0x35, 0xce, 0x4d, 0x46, 0xa8, 0x22, 0x15, 0x6d, 0x2a, 0xfb, 0xb7,
	0xb3, 0xab, 0x38, 0xb5, 0xe4, 0x05, 0xdd, 0xd0, 0x22, 0x5c, 0x16, 0x94, 0xfa, 0x70, 0xbf, 0x73,
	0xda, 0x0f, 0xbe, 0x09, 0xe3, 0x78, 0x11, 0x8a, 0x0b, 0x96, 0xa6, 0xdb, 0xfe, 0x34, 0x86, 0xbd,
	0x94, 0x6e, 0x68, 0x6a, 0xfc, 0x5b, 0x65, 0x71, 0x25, 0x48, 0x63, 0x93, 0x61, 0xfe, 0xb5, 0x83,
	0xa3, 0x49, 0x41, 0x33, 0x52, 0xc5, 0x6a, 0x75, 0x53, 0x5a, 0x3d, 0x1d, 0x1b, 0x15, 0x74, 0x04,
	0xd2, 0xc4, 0xae, 0x8d, 0x77, 0x29, 0x5d, 0xd6, 0x91, 0xc2, 0x84, 0xe3, 0x28, 0xd6, 0x69, 0xc8,
	0xc9, 0x27, 0x6a, 0x55, 0x43, 0x46, 0x7d, 0x7b, 0x6a, 0x57, 0x22, 0xe2, 0x05, 0xc5, 0xd0, 0xec,
	0xa9, 0x08, 0xb7, 0x62, 0x42, 0xf2, 0xe2, 0x2a, 0x94, 0x3c, 0x0f, 0x0b, 0x92, 0x5d, 0x98, 0xc8,
	0xfc, 0x18, 0x86, 0x0b, 0x22, 0x65, 0xaa, 0xef, 0xc0, 0xef, 0xa3, 0xd2, 0x8f, 0x51, 0x2d, 0x86,
	0x9e, 0xa7, 0xe4, 0xca, 0x6a, 0xdc, 0x03, 0xd0, 0xd1, 0x0b, 0x67, 0x18, 0x60, 0x4c, 0xfa, 0x53,
	0x7d, 0x40, 0xf1, 0x82, 0x17, 0xb1, 0x96, 0x6a, 0x9d, 0xa6, 0x63, 0x53, 0xc0, 0x92, 0xb0, 0x94,
	0xc6, 0xaf, 0x3c, 0x63, 0x43, 0x3f, 0x3a, 0x16, 0x36, 0xce, 0xd7, 0x39, 0xf5, 0xd4, 0xb8, 0x3f,
	0xe4, 0xac, 0xce, 0x3f, 0x6a, 0x23, 0x04, 0xee, 0x35, 0xbc, 0x4a, 0x92, 0x14, 0x6b, 0x8f, 0xfa,
	0xde, 0x1e, 0xc1, 0x50, 0xd7, 0x1a, 0x8a, 0x24, 0x8c, 0x5f, 0x79, 0x78, 0xd8, 0xe6, 0x05, 0x1f,
	0xc1, 0xa4, 0x2a, 0x5d, 0xb4, 0xac, 0x8e, 0x54, 0x21, 0xdc, 0x6d, 0x2c, 0xb1, 0xe0, 0xfc, 0xe2,
	0xff, 0x74, 0x01, 0x5d, 0x64, 0xfd, 0x2f, 0x2e, 0xf0, 0x7d, 0xf0, 0x9b, 0xa1, 0xa7, 0x60, 0x34,
	0x33, 0xf7, 0xf6, 0x00, 0xf6, 0xf5, 0xa7, 0x9d, 0x78, 0x6e, 0x27, 0x76, 0xa5, 0x5a, 0x19, 0xac,
	0x8b, 0xba, 0x8f, 0x5a, 0x11, 0xad, 0x4e, 0x29, 0xf7, 0x61, 0x4f, 0xe5, 0x22, 0x3b, 0xe5, 0x4c,
	0x97, 0x34, 0x6e, 0x76, 0x7a, 0xa4, 0xb3, 0x95, 0x08, 0x63, 0x92, 0x25, 0xb4, 0x30, 0xd1, 0x6b,
	0x5b, 0x30, 0xf8, 0xa3, 0x0e, 0xec, 0xc7, 0x8b, 0x50, 0x12, 0x71, 0xe1, 0x9d, 0xc0, 0x3c, 0xe2,
	0xeb, 0x3c, 0xa5, 0x92, 0xc6, 0x48, 0xa9, 0xeb, 0x26, 0x65, 0xd4, 0x58, 0x1c, 0x92, 0x28, 0xa2,
	0xb9, 0x74, 0xb8, 0x6e, 0xd2, 0x43, 0xaa, 0x09, 0x23, 0x9e, 0x96, 0x6c, 0xcc, 0xd4, 0xdb, 0x25,
	0xab, 0xb6, 0x70, 0xbb, 0x75, 0x41, 0x51, 0x44, 0x85, 0x89, 0xad, 0xa7, 0x30, 0xd4, 0xf5, 0x80,
	0x5b, 0xc4, 0xcd, 0x4d, 0x31, 0xab, 0xe5, 0x4c, 0x8d, 0x72, 0x0b, 0xc6, 0x05, 0x25, 0xd1, 0x2a,
	0x64, 0xb1, 0x93, 0x09, 0x95, 0x6e, 0x13, 0x2e, 0x2b, 0x62, 0x0f, 0x89, 0x63, 0xd8, 0xcb, 0x39,
	0x33, 0xbe, 0xe0, 0x05, 0x09, 0x1c, 0x37, 0x76, 0x90, 0x94, 0x2c, 0x36, 0x11, 0x54, 0x95, 0xb9,
	0x2c, 0x8b, 0x91, 0x64, 0xca, 0xdc, 0x0e, 0xfa, 0xcf, 0x6d, 0x98, 0x2d, 0x79, 0x11, 0xd5, 0xc2,
	0x8a, 0x85, 0x37, 0x87, 0xc5, 0x0f, 0xcb, 0xc3, 0x82, 0x92, 0xb8, 0xb9, 0x6e, 0xf0, 0xcf, 0x5d,
	0xb8, 0x55, 0x1d, 0xf3, 0x4a, 0x48, 0xba, 0x0e, 0x23, 0x9e, 0x2d, 0x59, 0xa2, 0xb6, 0x99, 0x92,
	0x2c, 0x29, 0x49, 0xe2, 0x14, 0xcb, 0xb7, 0x60, 0xbc, 0x2e, 0x05, 0x8b, 0x42, 0x9a, 0x91, 0x45,
	0x6a, 0x0a, 0x9e, 0xbe, 0x22, 0x0b, 0x5e, 0x66, 0x71, 0x45, 0xee, 0x21, 0xf9, 0x10, 0x46, 0x5a,
	0x7a, 0xc3, 0xd3, 0xd2, 0x64, 0x93, 0xae, 0xa2, 0x6a, 0x61, 0x43, 0xdd, 0x43, 0xea, 0x11, 0x4c,
	0x56, 0x34, 0x5d, 0x53, 0x19, 0x6e, 0x98, 0x60, 0x8b, 0x54, 0x47, 0xb5, 0xbe, 0xea, 0x01, 0xb8,
	0x5c, 0xd1, 0xc2, 0x86, 0x28, 0xcb, 0xdd, 0x47, 0xee, 0x1d, 0xf0, 0x0a, 0x92, 0xc5, 0x21, 0x11,
	0x02, 0x6b, 0x0b, 0x34, 0x61, 0xac, 0x3c, 0xfb, 0xea, 0xd0, 0x11, 0x29, 0xc2, 0x8c, 0xac, 0x69,
	0x35, 0x6a, 0x60, 0xf7, 0x55, 0xf0, 0xe8, 0xa2, 0xda, 0x2d, 0xd8, 0x95, 0x4c, 0x34, 0x14, 0x39,
	0xa5, 0xf5, 0x59, 0x86, 0x2a, 0x3f, 0xa8, 0x1a, 0x6f, 0x91, 0xac, 0x95, 0x26, 0x46, 0x56, 0xdb,
	0xe8, 0xb7, 0x2b, 0xa5, 0x53, 0x3b, 0xfd, 0x18, 0x53, 0xc9, 0xb7, 0x5a, 0x97, 0x57, 0x47, 0xf2,
	0x57, 0x24, 0xe6, 0x2e, 0xde, 0xfd, 0x8f, 0xba, 0xe0, 0xc5, 0x0b, 0x53, 0xa7, 0x56, 0x13, 0xa8,
	0xed, 0xe1, 0x00, 0x55, 0x90, 0x2e, 0x59, 0x21, 0xa4, 0x96, 0xc0, 0xcb, 0xdf, 0x53, 0xdb, 0x41,
	0x2e, 0x5f, 0x2e, 0x53, 0x96, 0x39, 0xf3, 0xf5, 0x94, 0x8e, 0x6c, 0x94, 0xd0, 0x73, 0x9a, 0x22,
	0x40, 0xf1, 0x6e, 0xc3, 0x4c, 0x47, 0x71, 0x9e, 0xd5, 0xc3, 0x6e, 0x20, 0x6b, 0x57, 0xc1, 0xbc,
	0x67, 0xd7, 0x72, 0x39, 0x75, 0x78, 0xde, 0x53, 0xc6, 0x19, 0xf1, 0x4c, 0xb2, 0xac, 0x64, 0xd2,
	0xb4, 0x01, 0xfb, 0xc8, 0x38, 0x81, 0xf9, 0x9a, 0x5c, 0x86, 0x6d, 0x66, 0x1f, 0x99, 0x73, 0x18,
	0x46, 0x05, 0xad, 0xd4, 0xa0, 0x52, 0x4e, 0x2f, 0xf8, 0xf3, 0x2e, 0x4c, 0x55, 0xb8, 0x93, 0x64,
	0xcd, 0x6c, 0x56, 0xbd, 0x0d, 0x33, 0xec, 0x5c, 0x0d, 0xcd, 0x4d, 0x3d, 0x27, 0x30, 0xb7, 0xe4,
	0x32, 0xcf, 0x69, 0x11, 0xa6, 0x6c, 0xcd, 0x6c, 0x06, 0x52, 0x97, 0x25, 0x19, 0x32, 0x31, 0x13,
	0x55, 0x1a, 0xd8, 0xf3, 0x5e, 0x87, 0x63, 0x54, 0x9c, 0x1d, 0x5c, 0xd0, 0x68, 0x53, 0xa5, 0x5d,
	0xa5, 0x87, 0x7b, 0x70, 0xd4, 0x10, 0x90, 0x2c, 0xba, 0xa8, 0xb3, 0x54, 0xcf, 0x7b, 0x03, 0x4e,
	0x90, 0xbf, 0x20, 0x72, 0xb5, 0x43, 0xe8, 0xa6, 0x15, 0x6a, 0xf0, 0x0b, 0x1a, 0xf1, 0x8d, 0xea,
	0x94, 0x36, 0x24, 0x2d, 0xa9, 0xd1, 0xd1, 0xeb, 0x70, 0x8c, 0x42, 0x3c, 0x8b, 0x8c, 0xd1, 0x58,
	0x31, 0x2c, 0x7b, 0xfa, 0xc1, 0xa7, 0x70, 0xa8, 0x0d, 0x8b, 0xb0, 0xf4, 0x2a, 0xac, 0x83, 0xdb,
	0x13, 0x98, 0xb6, 0x48, 0x26, 0x2c, 0x1d, 0xdb, 0xd8, 0xde, 0x62, 0x07, 0x02, 0x8e, 0x94, 0x65,
	0xa9, 0xbf, 0x43, 0x7a, 0x29, 0x55, 0xdc, 0x27, 0x52, 0x16, 0xe1, 0xbb, 0x2a, 0x31, 0x4b, 0x8a,
	0x6b, 0x48, 0x82, 0xb6, 0xe5, 0x29, 0xd3, 0xa7, 0x49, 0xa2, 0x4c, 0x5f, 0x47, 0x93, 0x13, 0x98,
	0xdb, 0x42, 0xa3, 0xa0, 0x31, 0xc5, 0x90, 0x11, 0x53, 0x0c, 0x28, 0x23, 0xa5, 0xea, 0x17, 0x94,
	0x5d, 0x32, 0xd5, 0xcb, 0x56, 0x8d, 0xcd, 0x0d, 0xf4, 0x8b, 0x4f, 0x60, 0xa2, 0xce, 0xb7, 0xe2,
	0xa5, 0xa0, 0xa1, 0xe4, 0x3c, 0xc5, 0xc5, 0x38, 0x4f, 0x75, 0x33, 0xdd, 0xb1, 0xb5, 0x15, 0x92,
	0x98, 0x6d, 0xa6, 0x66, 0x30, 0x50, 0xf2, 0x4e, 0xf1, 0x10, 0xbc, 0x05, 0x93, 0xa4, 0x24, 0xb1,
	0xea, 0xc4, 0xa3, 0xaa, 0xbb, 0xc3, 0x8b, 0xa5, 0x99, 0x4a, 0x24, 0x8e, 0x5d, 0x04, 0xff, 0xd2,
	0xb9, 0xe6, 0xa8, 0xe7, 0xde, 0x39, 0xcc, 0x4c, 0xce, 0xd3, 0xb9, 0xce, 0x28, 0xae, 0x2e, 0x8e,
	0x94, 0x5b, 0x4b, 0x96, 0x25, 0x61, 0x44, 0x6c, 0xd9, 0x73, 0x06, 0xe3, 0xbc, 0xe0, 0x49, 0xa1,
	0xc2, 0xbc, 0x93, 0x6e, 0x8e, 0xeb, 0x14, 0x52, 0xb1, 0x51, 0xfe, 0x10, 0x46, 0x5a, 0xeb, 0x8d,
	0x68, 0x7f, 0x04, 0x13, 0x7d, 0xc9, 0x55, 0x26, 0xba, 0x81, 0x74, 0x55, 0x3f, 0x95, 0x59, 0x84,
	0x00, 0x43, 0x2e, 0x0b, 0x7f, 0xef, 0x7e, 0xef, 0xd4, 0x53, 0xee, 0xb1, 0x28, 0xf8, 0x05, 0xcd,
	0xb4, 0xe8, 0x4d, 0x0c, 0xdc, 0x3f, 0x7d, 0xcd, 0xb1, 0x9e, 0xee, 0xb8, 0xc1, 0x6b, 0x85, 0x9f,
	0xed, 0x12, 0xf6, 0xaf, 0x11, 0x7e, 0x2f, 0x58, 0xc2, 0x44, 0xd7, 0xdc, 0x95, 0x3a, 0x5e, 0x83,
	0x5b, 0x36, 0xb6, 0x20, 0x31, 0xdf, 0x50, 0x37, 0x47, 0x6f, 0xb3, 0x73, 0x37, 0x13, 0xaa, 0x98,
	0xaf, 0x0a, 0x1d, 0xe4, 0x39, 0x49, 0xe9, 0x2d, 0x98, 0x62, 0x32, 0x0c, 0x13, 0x9e, 0xc6, 0x55,
	0xd6, 0xa3, 0x97, 0xd1, 0x4a, 0x15, 0x0f, 0xb1, 0x73, 0xbf, 0x7b, 0xc1, 0xb7, 0x61, 0x6e, 0x2e,
	0x71, 0x4d, 0x32, 0x92, 0xd8, 0x7a, 0xe3, 0xcd, 0x76, 0x99, 0xe3, 0xeb, 0x0c, 0xfd, 0x65, 0x6a,
	0xeb, 0x9c, 0x75, 0x96, 0x68, 0x5f, 0xf8, 0x10, 0xa6, 0xba, 0x70, 0xaf, 0x0b, 0xab, 0xc7, 0x30,
	0xc4, 0x0f, 0x9d, 0x73, 0xda, 0xce, 0xd4, 0x92, 0x0e, 0x7e, 0x08, 0x9e, 0x99, 0xd3, 0xa4, 0x21,
	0x5b, 0x46, 0xa3, 0xb2, 0x6c, 0x8a, 0x36, 0x25, 0x3a, 0x9a, 0xa9, 0x91, 0xab, 0x70, 0x34, 0x8c,
	0x50, 0x0e, 0xd1, 0x04, 0x20, 0x6c, 0xd4, 0x82, 0x4f, 0x4c, 0x3a, 0xd9, 0xb1, 0xc6, 0x63, 0x18,
	0x3a, 0x9f, 0x8d, 0x7d, 0x6e, 0x4b, 0x07, 0x3f, 0xee, 0xc0, 0x51, 0x4e, 0x0b, 0xc1, 0xb3, 0x90,
	0x12, 0xa1, 0x1c, 0x05, 0xdd, 0x5a, 0x4d, 0x54, 0xbb, 0x78, 0xe5, 0x85, 0xb6, 0x16, 0xef, 0xda,
	0x0e, 0xa8, 0xd5, 0xa2, 0xc8, 0x82, 0x25, 0x49, 0xe5, 0x6c, 0x15, 0x90, 0xa4, 0xd2, 0x53, 0x52,
	0xa1, 0x1c, 0x7b, 0x16, 0xfa, 0xd0, 0x19, 0x4b, 0xf2, 0x32, 0x5a, 0x61, 0x48, 0xec, 0x07, 0xa1,
	0xa9, 0x26, 0xb7, 0x76, 0xa4, 0xcc, 0x42, 0x6d, 0xc6, 0x51, 0x84, 0xd6, 0xde, 0xdb, 0xd0, 0xb7,
	0x1b, 0x36, 0x6e, 0x77, 0x82, 0x47, 0xdd, 0x7d, 0xa6, 0xe0, 0x8f, 0xbb, 0x30, 0x2f, 0x68, 0xb4,
	0x22, 0x45, 0x42, 0xc3, 0x35, 0xcf, 0xe8, 0x55, 0xab, 0x73, 0x41, 0x9a, 0x99, 0xdb, 0x94, 0xd2,
	0x46, 0x8e, 0x5e, 0x5a, 0xdc, 0xef, 0x36, 0xcc, 0x74, 0xec, 0x34, 0x10, 0x09, 0x86, 0x33, 0x5d,
	0xdd, 0xa8, 0x2e, 0x90, 0xa4, 0x58, 0x1c, 0xdd, 0xb0, 0xe6, 0xbc, 0x61, 0x79, 0x88, 0x9d, 0xa2,
	0x05, 0x74, 0x7a, 0xfa, 0x6e, 0xf5, 0x82, 0x4a, 0x2f, 0x31, 0x23, 0x6b, 0x9e, 0xc5, 0xa8, 0x04,
	0xcf, 0x3b, 0x83, 0x89, 0xd6, 0x8c, 0xdd, 0xa8, 0xe9, 0x88, 0x8f, 0xea, 0x9e, 0xb5, 0x3a, 0x42,
	0x42, 0xa5, 0x92, 0xd7, 0xd5, 0x50, 0x25, 0xdf, 0x7f, 0x99, 0x7c, 0xf0, 0x85, 0xf1, 0xd8, 0x0a,
	0xa0, 0xd9, 0x51, 0x67, 0x69, 0xc8, 0xa6, 0xae, 0x6f, 0xba, 0xd7, 0xd7, 0x37, 0x3d, 0xbc, 0xb9,
	0xff, 0xea, 0xc0, 0x5c, 0xd2, 0xb5, 0x06, 0x70, 0x42, 0x96, 0x85, 0x6b, 0xba, 0xe6, 0xc5, 0x95,
	0xb2, 0x6e, 0x26, 0x42, 0x75, 0x13, 0x18, 0x85, 0x13, 0xb2, 0xa6, 0x18, 0x52, 0x10, 0x0f, 0x52,
	0x9e, 0x9c, 0x73, 0x11, 0xda, 0x92, 0xd4, 0x21, 0x5d, 0x19, 0x84, 0xec, 0x10, 0x46, 0x8a, 0x24,
	0x22, 0x9a, 0x19, 0xad, 0x1a, 0x88, 0x6c, 0x9d, 0x84, 0x05, 0xe7, 0xb8, 0x39, 0x6d, 0x50, 0xaf,
	0xc1, 0xfe, 0x82, 0x25, 0xe1, 0x82, 0x25, 0x06, 0x66, 0x18, 0x69, 0xef, 0xce, 0x2d, 0xc0, 0x3d,
	0xa8, 0x11, 0x29, 0xad, 0xd0, 0x79, 0xad, 0xa0, 0x5a, 0x17, 0x01, 0xdc, 0x50, 0x3d, 0x8c, 0xd1,
	0xa1, 0x81, 0x52, 0x74, 0xeb, 0x5b, 0xb5, 0x36, 0x53, 0xd8, 0x67, 0x22, 0x2c, 0xe5, 0xf2, 0x1b,
	0xfe, 0x39, 0x76, 0x41, 0x3f, 0xee, 0xc0, 0x81, 0xad, 0xec, 0x72, 0x6a, 0x1c, 0xf1, 0x75, 0xe8,
	0xab, 0xbf, 0x9d, 0x8e, 0x60, 0x6c, 0x4c, 0x53, 0x56, 0x09, 0x0a, 0x23, 0x3e, 0x12, 0x1a, 0xed,
	0xc0, 0x43, 0x18, 0x59, 0x30, 0x14, 0x2d, 0x5b, 0x23, 0xe8, 0x07, 0xd5, 0x70, 0xc3, 0xc4, 0xdc,
	0x80, 0x7b, 0xd3, 0x53, 0x18, 0x68, 0xee, 0x0d, 0x03, 0x32, 0x0b, 0x5a, 0x6c, 0x68, 0x11, 0xae,
	0x55, 0xdf, 0x31, 0x85, 0x7d, 0xf5, 0xbf, 0xf6, 0xe6, 0x0e, 0xe2, 0x77, 0x83, 0x45, 0x29, 0x25,
	0xcf, 0xc2, 0x28, 0xf6, 0x00, 0xba, 0x51, 0x8c, 0x9b, 0xf4, 0xd4, 0x9c, 0xc6, 0xcd, 0x2d, 0xd6,
	0x6d, 0xf2, 0x8d, 0xeb, 0xae, 0x3d, 0xac, 0x3d, 0x1e, 0xc2, 0xe4, 0xc5, 0x8b, 0x17, 0x26, 0xa9,
	0xdb, 0xd4, 0xa6, 0xd5, 0x14, 0x3b, 0x21, 0x3f, 0xf8, 0x00, 0x26, 0x66, 0x2f, 0xca, 0x9a, 0x0c,
	0x14, 0xa2, 0x1a, 0x35, 0x91, 0x53, 0x72, 0x61, 0x5a, 0x95, 0x63, 0x98, 0x6a, 0xc0, 0x59, 0xd1,
	0xdc, 0xda, 0xf7, 0x3b, 0xe0, 0x99, 0xd1, 0xa6, 0x2e, 0xb6, 0x7d, 0xae, 0xcd, 0xd0, 0x4c, 0x86,
	0x8b, 0x32, 0x31, 0x66, 0x75, 0x02, 0xf3, 0x25, 0xbb, 0x0c, 0xe9, 0x97, 0x25, 0xcb, 0x43, 0x7a,
	0xa9, 0xa2, 0x89, 0x62, 0x76, 0xd1, 0x4a, 0x3f, 0x04, 0x0f, 0x35, 0x83, 0x48, 0xb5, 0x2a, 0x38,
	0x4d, 0x5e, 0x18, 0x57, 0x04, 0x27, 0x7f, 0xeb, 0xee, 0xba, 0x21, 0x1a, 0xfc, 0xfb, 0x11, 0xcc,
	0x55, 0xbe, 0x28, 0xa8, 0x28, 0x53, 0x19, 0xda, 0x9c, 0xb8, 0x33, 0xb0, 0x4f, 0x61, 0x9f, 0x44,
	0x35, 0xe6, 0x31, 0x52, 0xee, 0x94, 0xd0, 0x2c, 0xa6, 0x45, 0x8d, 0x77, 0x64, 0xaa, 0x26, 0x54,
	0xdd, 0x08, 0x5e, 0xdd, 0xa8, 0x06, 0x95, 0xf6, 0x2c, 0x88, 0x5d, 0x59, 0xfe, 0x4d, 0x1b, 0x73,
	0xb5, 0xc7, 0xec, 0xbb, 0x9f, 0x57, 0x06, 0x58, 0x9f, 0xc1, 0x40, 0x79, 0x58, 0x18, 0x71, 0x96,
	0x61, 0x5f, 0xe3, 0x29, 0x12, 0xcd, 0xe2, 0xb2, 0x20, 0x59, 0x44, 0xb1, 0xa9, 0xc1, 0x1b, 0x36,
	0x11, 0x47, 0x0b, 0x0e, 0x91, 0x3a, 0x84, 0x9e, 0x0a, 0x71, 0x23, 0xfc, 0x98, 0xc3, 0x50, 0x63,
	0x0a, 0xba, 0x01, 0x1d, 0xdb, 0xa9, 0xaa, 0x58, 0xe6, 0x4f, 0xac, 0xc7, 0x5a, 0x98, 0x28, 0xf6,
	0xa7, 0xf7, 0x3b, 0xa7, 0x23, 0xf4, 0x4d, 0xbe, 0x31, 0x0d, 0x93, 0x7f, 0x60, 0x61, 0x1c, 0xc9,
	0xb1, 0xcc, 0xf6, 0x67, 0x78, 0x4b, 0x0f, 0x60, 0xdf, 0x98, 0x02, 0x7a, 0x50, 0xd5, 0x2c, 0x37,
	0xad, 0xe4, 0x0c, 0xc6, 0xfa, 0x1e, 0xd5, 0x8d, 0x2e, 0x48, 0xe2, 0x3f, 0x75, 0x0a, 0x31, 0xdb,
	0x4e, 0x55, 0xb7, 0x2d, 0xbc, 0xb7, 0x61, 0xbc, 0x20, 0x49, 0xc8, 0x54, 0xc7, 0x8a, 0x73, 0x3f,
	0x73, 0x02, 0xa1, 0x95, 0xb7, 0x12, 0xc2, 0x7b, 0x47, 0xd5, 0x9e, 0x89, 0x31, 0x15, 0x94, 0x7f,
	0x6f, 0xc7, 0xfc, 0x95, 0x88, 0xf0, 0x1e, 0x03, 0x38, 0xc2, 0xcf, 0x51, 0xd8, 0x6f, 0x08, 0xa3,
	0x11, 0x18, 0xe9, 0x33, 0xe7, 0x91, 0xcf, 0xff, 0x19, 0x14, 0x3e, 0xd9, 0x16, 0xae, 0x1f, 0xc4,
	0xce, 0x9c, 0x27, 0x29, 0xff, 0x1b, 0xd7, 0xc9, 0xd7, 0xb0, 0xe9, 0xfb, 0x30, 0x76, 0x91, 0x2e,
	0xe1, 0xff, 0x2c, 0x8e, 0x79, 0x63, 0x7b, 0xcc, 0x36, 0x20, 0xf6, 0x1c, 0x86, 0x35, 0x84, 0x25,
	0xfc, 0xf7, 0x71, 0xe4, 0xd7, 0xb6, 0x47, 0xb6, 0x71, 0xae, 0xe7, 0x30, 0xac, 0x91, 0x29, 0xe1,
	0x7f, 0xf3, 0xba, 0x71, 0x6d, 0xf8, 0xea, 0x1c, 0x86, 0x0e, 0x94, 0xe4, 0x7f, 0x80, 0xe3, 0x5e,
	0xdb, 0x71, 0x3a, 0x07, 0x6f, 0x7a, 0xa4, 0xe3, 0x27, 0x0e, 0xf8, 0x16, 0x0e, 0xb8, 0x65, 0xab,
	0xad, 0x66, 0xa0, 0x3d, 0x73, 0xde, 0x60, 0xfc, 0x9f, 0xbb, 0x4e, 0x71, 0x75, 0xf8, 0x7e, 0x1d,
	0x06, 0x75, 0x53, 0xf4, 0x21, 0xca, 0x8f, 0xec, 0xcc, 0x88, 0x31, 0x3d, 0x83, 0x91, 0x0b, 0xef,
	0xf8, 0xdf, 0x46, 0x99, 0x7b, 0xbb, 0x8e, 0xe9, 0x80, 0x40, 0x4f, 0x00, 0x6a, 0x48, 0xc6, 0xff,
	0x79, 0x1c, 0x73, 0x77, 0x7b, 0x8c, 0x03, 0xdb, 0xbc, 0x0b, 0xe3, 0x06, 0xbe, 0xe2, 0x7f, 0xe4,
	0x40, 0xdf, 0xbb, 0x11, 0x98, 0xf7, 0xe1, 0xb0, 0x85, 0x1f, 0xe8, 0x90, 0xf5, 0x0b, 0xd7, 0x2d,
	0xe7, 0x00, 0x0d, 0x6f, 0xc3, 0x28, 0x5e, 0xd4, 0x85, 0xba, 0xff, 0xf1, 0xcb, 0xdb, 0x9a, 0x87,
	0x2a, 0x46, 0x5b, 0xd9, 0x5f, 0x6c, 0x67, 0xcc, 0x5a, 0xee, 0x14, 0xa0, 0xae, 0x7e, 0xfd, 0x5f,
	0x72, 0xf2, 0x66, 0xbb, 0x84, 0x7e, 0x68, 0x25, 0x71, 0xca, 0x4f, 0x50, 0xd2, 0x6b, 0x56, 0xd0,
	0x56, 0xae, 0x46, 0x95, 0xfd, 0x4f, 0x9b, 0x72, 0x0e, 0xde, 0x7c, 0xbe, 0xdd, 0xe3, 0x7e, 0x07,
	0x85, 0x6f, 0x3b, 0x7a, 0x68, 0xf5, 0xc5, 0xe7, 0x4e, 0xb0, 0xc7, 0x11, 0xbf, 0xec, 0x18, 0x4c,
	0xd5, 0x15, 0x37, 0x13, 0xc4, 0x13, 0x98, 0xd6, 0x28, 0x89, 0x1e, 0xf5, 0x5d, 0x47, 0x77, 0x3b,
	0x80, 0x99, 0x33, 0x18, 0xaf, 0x59, 0xc6, 0x30, 0x18, 0xa3, 0xfc, 0x67, 0x8e, 0x7c, 0xc5, 0x51,
	0xa1, 0xd3, 0x42, 0x91, 0x23, 0x17, 0xd4, 0xf0, 0x7f, 0xc5, 0xd1, 0x62, 0x1b, 0xf0, 0x78, 0x02,
	0x13, 0xdb, 0xd6, 0x18, 0x6c, 0xeb, 0x57, 0x9d, 0x48, 0xb4, 0xab, 0xf1, 0x79, 0x68, 0x1e, 0x89,
	0x71, 0xea, 0x5f, 0x73, 0x6e, 0xb2, 0xf5, 0x98, 0xac, 0xe4, 0xec, 0x03, 0xa7, 0xff, 0x79, 0x23,
	0x2e, 0x37, 0xde, 0x4d, 0x4f, 0x01, 0xea, 0x5e, 0xcc, 0xff, 0x75, 0x67, 0xaf, 0xed, 0x16, 0xed,
	0x29, 0x8c, 0x1b, 0x4d, 0x87, 0xff, 0x1b, 0x6d, 0x3b, 0xdd, 0xd1, 0xc1, 0x3c, 0x87, 0xd9, 0x56,
	0xf9, 0xee, 0x7f, 0xd1, 0xf6, 0xeb, 0xed, 0x1e, 0xe1, 0x09, 0x4c, 0x9a, 0xb5, 0xbd, 0xff, 0x3d,
	0x47, 0x31, 0xbb, 0xca, 0xfe, 0x53, 0x98, 0xaa, 0xad, 0xc6, 0x05, 0xdb, 0xd8, 0xd7, 0xa7, 0xef,
	0xe3, 0x10, 0xfd, 0x04, 0x5a, 0xf3, 0xd4, 0x91, 0xf5, 0x5b, 0x1b, 0x0a, 0xfd, 0xa6, 0x73, 0x64,
	0xf3, 0x9e, 0x6f, 0x79, 0xde, 0x03, 0x18, 0xac, 0xb8, 0xbd, 0xf6, 0xdf, 0x42, 0xc1, 0x99, 0xbd,
	0xc7, 0x8a, 0xa1, 0x2e, 0x3c, 0xd6, 0xbf, 0x29, 0xd1, 0x82, 0x3f, 0x68, 0x5e, 0xb8, 0xcb, 0x53,
	0xc6, 0xc4, 0x54, 0xf5, 0x4c, 0x22, 0xb3, 0xfc, 0x6f, 0x3b, 0xc6, 0x64, 0xca, 0x0e, 0x87, 0xed,
	0x9d, 0xc2, 0x40, 0xd7, 0x7a, 0x4a, 0xf6, 0x77, 0x9c, 0xc8, 0xb9, 0x55, 0x15, 0xbe, 0x01, 0x43,
	0x53, 0x04, 0xa2, 0xec, 0xef, 0x3a, 0xd0, 0x77, 0x5d, 0x1c, 0x3e, 0x84, 0x41, 0x85, 0xac, 0xf8,
	0xbf, 0xe7, 0x58, 0x45, 0x0b, 0x6f, 0x79, 0x64, 0xdf, 0xad, 0x71, 0xae, 0x1f, 0x3a, 0x82, 0xad,
	0x22, 0xf1, 0x4d, 0xe8, 0x5b, 0xff, 0xf2, 0x7f, 0xbf, 0x7d, 0x94, 0xa6, 0xe7, 0x3d, 0x87, 0x59,
	0xc4, 0xd7, 0x0b, 0x96, 0xe9, 0x1f, 0x58, 0x60, 0x46, 0xf1, 0x43, 0xc7, 0x14, 0xb6, 0xb8, 0x76,
	0x89, 0x01, 0xcf, 0xa9, 0x39, 0xd6, 0x1f, 0xb4, 0xdb, 0x21, 0x64, 0xe5, 0x24, 0xba, 0x20, 0x09,
	0xc5, 0xc7, 0xc4, 0xfa, 0x87, 0x16, 0x3e, 0x69, 0xeb, 0xcb, 0xfd, 0xa9, 0xc6, 0x3b, 0x30, 0xd9,
	0xd0, 0x42, 0xa8, 0xc5, 0x74, 0x2d, 0xea, 0x2f, 0x9c, 0xfd, 0xef, 0xa8, 0x52, 0xcf, 0x60, 0xa8,
	0x1b, 0x21, 0xbd, 0x93, 0x9f, 0x74, 0x1c, 0x83, 0xdc, 0xd5, 0x2e, 0x9d, 0xc3, 0xc8, 0x81, 0x57,
	0xde, 0xf5, 0xff, 0xb6, 0xe3, 0x9c, 0xf5, 0x1a, 0x74, 0xae, 0x39, 0xe6, 0xdc, 0xff, 0xbb, 0x57,
	0x8e, 0x39, 0x6f, 0x8d, 0x79, 0xea, 0xff, 0xfd, 0x2b, 0xc7, 0x3c, 0x6d, 0x8d, 0x79, 0xe6, 0xff,
	0xc3, 0x2b, 0xc7, 0x3c, 0x6b, 0x8d, 0x79, 0xcf, 0xff, 0xc7, 0x57, 0x8e, 0x79, 0x2f, 0xf8, 0x51,
	0x07, 0x0e, 0x6a, 0x4c, 0x50, 0x97, 0x97, 0x3b, 0x0b, 0xec, 0x19, 0x0c, 0x84, 0x24, 0xb2, 0x14,
	0x35, 0x30, 0x88, 0xa0, 0x2e, 0x92, 0xf4, 0xef, 0x59, 0x9c, 0xb7, 0xed, 0x03, 0xe8, 0x2f, 0xcb,
	0x34, 0xcd, 0xa8, 0x10, 0x06, 0x99, 0x50, 0xcd, 0xba, 0x0e, 0xac, 0xa6, 0xdc, 0x36, 0x25, 0x30,
	0x56, 0xda, 0xc1, 0x5f, 0x74, 0x74, 0xa9, 0xdf, 0x82, 0x86, 0x76, 0xec, 0xa4, 0xa7, 0x9a, 0x91,
	0x82, 0x7e, 0x19, 0x3a, 0xf4, 0x2e, 0xd2, 0x1f, 0xc3, 0x54, 0xd1, 0xdd, 0xd2, 0xa7, 0xe7, 0xf8,
	0x45, 0xeb, 0x81, 0xed, 0x00, 0xfa, 0x4a, 0x1a, 0x81, 0x4f, 0xb5, 0xc3, 0xbd, 0x8a, 0x52, 0x21,
	0xcb, 0xc1, 0x29, 0x1c, 0x3a, 0xfd, 0x87, 0x20, 0x1b, 0x8a, 0xab, 0x6a, 0x49, 0xa9, 0x41, 0xd7,
	0x2e, 0x82, 0x60, 0xdf, 0x85, 0x3b, 0xad, 0x5c, 0xa6, 0xa1, 0xb2, 0xaa, 0x7d, 0xd2, 0xf8, 0x43,
	0xe5, 0x89, 0xd5, 0x63, 0x4e, 0x25, 0x1f, 0xb3, 0xe5, 0xd2, 0xfc, 0xb0, 0xe4, 0x4f, 0x3a, 0x70,
	0x5b, 0xaf, 0x2b, 0xc3, 0x28, 0x2d, 0x31, 0xe4, 0x66, 0xdc, 0xd6, 0x31, 0x1e, 0x80, 0xf9, 0x68,
	0x74, 0x3f, 0x2c, 0x93, 0x24, 0x8e, 0x0b, 0x83, 0x9a, 0x1c, 0xc3, 0xb4, 0x54, 0xad, 0x1a, 0x36,
	0x79, 0xf5, 0x4f, 0xb1, 0x74, 0xc3, 0x99, 0x97, 0x61, 0x5e, 0x50, 0x21, 0xca, 0xc2, 0xfe, 0xbe,
	0x60, 0x06, 0x03, 0x04, 0x0e, 0x52, 0x96, 0xe9, 0xe7, 0xa0, 0x7e, 0xf0, 0x37, 0x1d, 0xd3, 0xbe,
	0x35, 0xc3, 0xdd, 0x04, 0x6e, 0xd2, 0x8c, 0x16, 0x89, 0x73, 0x84, 0x84, 0xca, 0x50, 0xd3, 0x6a,
	0xd3, 0x30, 0x64, 0x83, 0xd9, 0x30, 0xf3, 0x4c, 0xaf, 0x3a, 0x1d, 0x9c, 0x29, 0x76, 0x31, 0xd7,
	0x63, 0x98, 0x9a, 0x1f, 0x33, 0x29, 0x1e, 0x32, 0x34, 0x6c, 0xa3, 0xd4, 0x53, 0x4a, 0x5e, 0x93,
	0x11, 0x78, 0xc5, 0x47, 0x49, 0x92, 0x85, 0x65, 0x96, 0xf2, 0xe8, 0xa2, 0x66, 0xee, 0x2b, 0xe6,
	0x47, 0x07, 0x3f, 0xf9, 0xea, 0x5e, 0xe7, 0x9f, 0xbe, 0xba, 0xd7, 0xf9, 0xb7, 0xaf, 0xee, 0x75,
	0xfe, 0xf2, 0x3f, 0xee, 0xfd, 0xd4, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x10, 0xf8, 0x56, 0x2e,
	0x9d, 0x28, 0x00, 0x00,
}

func (m *SuitGoodsInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SuitGoodsInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CanBuySuitShopId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.CanBuySuitShopId)<<1)^uint32((*m.CanBuySuitShopId>>31))))
	}
	if m.IsBuy == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		if *m.IsBuy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SuitInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SuitInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SuitId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SuitId)<<1)^uint32((*m.SuitId>>31))))
	}
	if m.SuitUnixtimeTimeOutStamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.SuitUnixtimeTimeOutStamp)<<1)^uint64((*m.SuitUnixtimeTimeOutStamp>>63))))
	}
	if m.SuitDurationType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SuitDurationType)<<1)^uint32((*m.SuitDurationType>>31))))
	}
	if m.GetTimestamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.GetTimestamp)<<1)^uint64((*m.GetTimestamp>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleSuitInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleSuitInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.BuySuit) > 0 {
		for _, msg := range m.BuySuit {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.SuitShopLastUpdateTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.SuitShopLastUpdateTime)<<1)^uint64((*m.SuitShopLastUpdateTime>>63))))
	}
	if m.CurrentSuit != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.CurrentSuit.Size()))
		n1, err1 := m.CurrentSuit.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += n1
	}
	if len(m.HaveSuits) > 0 {
		for _, msg := range m.HaveSuits {
			dAtA[i] = 0x22
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FaceGoodsInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FaceGoodsInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CanBuyFaceShopId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.CanBuyFaceShopId)<<1)^uint32((*m.CanBuyFaceShopId>>31))))
	}
	if m.IsBuy == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		if *m.IsBuy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FaceShopIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FaceShopIndex)<<1)^uint32((*m.FaceShopIndex>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FaceInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FaceInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FaceId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FaceId)<<1)^uint32((*m.FaceId>>31))))
	}
	if m.FaceUnixtimeTimeOutStamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.FaceUnixtimeTimeOutStamp)<<1)^uint64((*m.FaceUnixtimeTimeOutStamp>>63))))
	}
	if m.FaceDurationType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FaceDurationType)<<1)^uint32((*m.FaceDurationType>>31))))
	}
	if m.GetTimestamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.GetTimestamp)<<1)^uint64((*m.GetTimestamp>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleCommonShop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleCommonShop) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ShopList) > 0 {
		for _, msg := range m.ShopList {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListSignInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListSignInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SignYear == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SignYear)<<1)^uint32((*m.SignYear>>31))))
	}
	if m.SignMonth == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SignMonth)<<1)^uint32((*m.SignMonth>>31))))
	}
	if m.MonthTotalDays == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.MonthTotalDays)<<1)^uint32((*m.MonthTotalDays>>31))))
	}
	if m.SignBeginDay == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SignBeginDay)<<1)^uint32((*m.SignBeginDay>>31))))
	}
	if m.NextSignDay == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.NextSignDay)<<1)^uint32((*m.NextSignDay>>31))))
	}
	if m.SignCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SignCount)<<1)^uint32((*m.SignCount>>31))))
	}
	if m.RetroactiveCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.RetroactiveCount)<<1)^uint32((*m.RetroactiveCount>>31))))
	}
	if m.LotteryDays == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.LotteryDays)<<1)^uint32((*m.LotteryDays>>31))))
	}
	if m.MissCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.MissCount)<<1)^uint32((*m.MissCount>>31))))
	}
	if m.RefreshMonthDay == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.RefreshMonthDay)<<1)^uint32((*m.RefreshMonthDay>>31))))
	}
	if m.TodaySign == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x58
		i++
		if *m.TodaySign {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SevenDayDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SevenDayDetail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Day == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Day)<<1)^uint32((*m.Day>>31))))
	}
	if m.GetFlag == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.GetFlag)<<1)^uint32((*m.GetFlag>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SevenDayInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SevenDayInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TotalLoginDays == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.TotalLoginDays)<<1)^uint32((*m.TotalLoginDays>>31))))
	}
	if len(m.DayInfo) > 0 {
		for _, msg := range m.DayInfo {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RiskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RiskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Id)<<1)^uint32((*m.Id>>31))))
	}
	if m.Passed == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Passed)<<1)^uint32((*m.Passed>>31))))
	}
	if m.FightCount != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FightCount)<<1)^uint32((*m.FightCount>>31))))
	}
	if m.ResetCount != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.ResetCount)<<1)^uint32((*m.ResetCount>>31))))
	}
	if m.ShareFlag != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.ShareFlag)<<1)^uint32((*m.ShareFlag>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RewardBox) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RewardBox) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Id)<<1)^uint32((*m.Id>>31))))
	}
	if m.Get == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Get)<<1)^uint32((*m.Get>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ChapterInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChapterInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Id)<<1)^uint32((*m.Id>>31))))
	}
	if len(m.Dup) > 0 {
		for _, msg := range m.Dup {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Box) > 0 {
		for _, msg := range m.Box {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.GetReward == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.GetReward)<<1)^uint32((*m.GetReward>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleFacePreferInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleFacePreferInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AutoShowFlag == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		if *m.AutoShowFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.FaceList) > 0 {
		for _, num := range m.FaceList {
			dAtA[i] = 0x10
			i++
			x2 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x2 >= 1<<7 {
				dAtA[i] = uint8(uint64(x2)&0x7f | 0x80)
				x2 >>= 7
				i++
			}
			dAtA[i] = uint8(x2)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListFaceShopInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListFaceShopInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OriginalBuyFace) > 0 {
		for _, msg := range m.OriginalBuyFace {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.DiscountBuyFace) > 0 {
		for _, msg := range m.DiscountBuyFace {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.FaceShopLastUpdateTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.FaceShopLastUpdateTime)<<1)^uint64((*m.FaceShopLastUpdateTime>>63))))
	}
	if m.FaceShopLastManualUpdateTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.FaceShopLastManualUpdateTime)<<1)^uint64((*m.FaceShopLastManualUpdateTime>>63))))
	}
	if m.FaceShopManualUpdateCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FaceShopManualUpdateCount)<<1)^uint32((*m.FaceShopManualUpdateCount>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleFaceInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleFaceInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OriginalBuyFace) > 0 {
		for _, msg := range m.OriginalBuyFace {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.DiscountBuyFace) > 0 {
		for _, msg := range m.DiscountBuyFace {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.FaceShopLastUpdateTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.FaceShopLastUpdateTime)<<1)^uint64((*m.FaceShopLastUpdateTime>>63))))
	}
	if m.FaceShopLastManualUpdateTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.FaceShopLastManualUpdateTime)<<1)^uint64((*m.FaceShopLastManualUpdateTime>>63))))
	}
	if m.FaceShopManualUpdateCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FaceShopManualUpdateCount)<<1)^uint32((*m.FaceShopManualUpdateCount>>31))))
	}
	if len(m.HaveFaces) > 0 {
		for _, msg := range m.HaveFaces {
			dAtA[i] = 0x32
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.PreferInfo != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.PreferInfo.Size()))
		n3, err3 := m.PreferInfo.MarshalTo(dAtA[i:])
		if err3 != nil {
			return 0, err3
		}
		i += n3
	}
	if len(m.CustomList) > 0 {
		for _, msg := range m.CustomList {
			dAtA[i] = 0x42
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.CurrentFace == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.CurrentFace.Size()))
		n4, err4 := m.CurrentFace.MarshalTo(dAtA[i:])
		if err4 != nil {
			return 0, err4
		}
		i += n4
	}
	if m.ForeverFree != nil {
		dAtA[i] = 0x50
		i++
		if *m.ForeverFree {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbSkillInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbSkillInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Id)<<1)^uint32((*m.Id>>31))))
	}
	if m.Level == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Level)<<1)^uint32((*m.Level>>31))))
	}
	if m.Skilled == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Skilled)<<1)^uint32((*m.Skilled>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbArenaInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbArenaInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.BuyCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.BuyCount)<<1)^uint32((*m.BuyCount>>31))))
	}
	if m.TotalCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.TotalCount)<<1)^uint32((*m.TotalCount>>31))))
	}
	if m.LeftCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.LeftCount)<<1)^uint32((*m.LeftCount>>31))))
	}
	if m.CdTimeStamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.CdTimeStamp)<<1)^uint64((*m.CdTimeStamp>>63))))
	}
	if m.CdTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.CdTime)<<1)^uint64((*m.CdTime>>63))))
	}
	if m.Score == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.Score)<<1)^uint64((*m.Score>>63))))
	}
	if m.HistoryTopRank == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.HistoryTopRank)<<1)^uint32((*m.HistoryTopRank>>31))))
	}
	if m.BattleInfo != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.BattleInfo.Size()))
		n5, err5 := m.BattleInfo.MarshalTo(dAtA[i:])
		if err5 != nil {
			return 0, err5
		}
		i += n5
	}
	if m.FightRank != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FightRank)<<1)^uint32((*m.FightRank>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbSwordInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbSwordInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TotalCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.TotalCount)<<1)^uint32((*m.TotalCount>>31))))
	}
	if m.FailedCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FailedCount)<<1)^uint32((*m.FailedCount>>31))))
	}
	if m.LeftCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.LeftCount)<<1)^uint32((*m.LeftCount>>31))))
	}
	if m.BuyCount != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.BuyCount)<<1)^uint32((*m.BuyCount>>31))))
	}
	if m.CdTime != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.CdTime)<<1)^uint64((*m.CdTime>>63))))
	}
	if m.JoinCount != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.JoinCount)<<1)^uint32((*m.JoinCount>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleTalentSkillInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleTalentSkillInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.HaveSkills) > 0 {
		for _, msg := range m.HaveSkills {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CurrentSkills) > 0 {
		for _, num := range m.CurrentSkills {
			dAtA[i] = 0x10
			i++
			x6 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x6 >= 1<<7 {
				dAtA[i] = uint8(uint64(x6)&0x7f | 0x80)
				x6 >>= 7
				i++
			}
			dAtA[i] = uint8(x6)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleBookSkillInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleBookSkillInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.HaveSkills) > 0 {
		for _, msg := range m.HaveSkills {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CurrentSkills) > 0 {
		for _, num := range m.CurrentSkills {
			dAtA[i] = 0x10
			i++
			x7 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x7 >= 1<<7 {
				dAtA[i] = uint8(uint64(x7)&0x7f | 0x80)
				x7 >>= 7
				i++
			}
			dAtA[i] = uint8(x7)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleSuitSkillInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleSuitSkillInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.HaveSkills) > 0 {
		for _, msg := range m.HaveSkills {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CurrentSkills) > 0 {
		for _, num := range m.CurrentSkills {
			dAtA[i] = 0x10
			i++
			x8 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x8 >= 1<<7 {
				dAtA[i] = uint8(uint64(x8)&0x7f | 0x80)
				x8 >>= 7
				i++
			}
			dAtA[i] = uint8(x8)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleFriendInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleFriendInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, msg := range m.Friends {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.FightCount != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FightCount)<<1)^uint32((*m.FightCount>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleRiskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleRiskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Chaps) > 0 {
		for _, msg := range m.Chaps {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ChapsDanger) > 0 {
		for _, msg := range m.ChapsDanger {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbTask) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CompletedTaskList) > 0 {
		for _, num := range m.CompletedTaskList {
			dAtA[i] = 0x8
			i++
			x9 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x9 >= 1<<7 {
				dAtA[i] = uint8(uint64(x9)&0x7f | 0x80)
				x9 >>= 7
				i++
			}
			dAtA[i] = uint8(x9)
			i++
		}
	}
	if len(m.CanAcceptTaskList) > 0 {
		for _, msg := range m.CanAcceptTaskList {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.AcceptedTaskList) > 0 {
		for _, msg := range m.AcceptedTaskList {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleSuccessInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleSuccessInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.DetailList) > 0 {
		for _, msg := range m.DetailList {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ReachIdList) > 0 {
		for _, num := range m.ReachIdList {
			dAtA[i] = 0x10
			i++
			x10 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x10 >= 1<<7 {
				dAtA[i] = uint8(uint64(x10)&0x7f | 0x80)
				x10 >>= 7
				i++
			}
			dAtA[i] = uint8(x10)
			i++
		}
	}
	if len(m.GotIdList) > 0 {
		for _, num := range m.GotIdList {
			dAtA[i] = 0x18
			i++
			x11 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x11 >= 1<<7 {
				dAtA[i] = uint8(uint64(x11)&0x7f | 0x80)
				x11 >>= 7
				i++
			}
			dAtA[i] = uint8(x11)
			i++
		}
	}
	if m.Point != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.Point)<<1)^uint64((*m.Point>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleGuideInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleGuideInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FindGuidIndex != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FindGuidIndex)<<1)^uint32((*m.FindGuidIndex>>31))))
	}
	if m.ForceGuideIndex != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.ForceGuideIndex)<<1)^uint32((*m.ForceGuideIndex>>31))))
	}
	if len(m.TipReadIdList) > 0 {
		for _, num := range m.TipReadIdList {
			dAtA[i] = 0x18
			i++
			x12 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x12 >= 1<<7 {
				dAtA[i] = uint8(uint64(x12)&0x7f | 0x80)
				x12 >>= 7
				i++
			}
			dAtA[i] = uint8(x12)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbRoleSystemConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbRoleSystemConfig) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LanguageId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.LanguageId)<<1)^uint32((*m.LanguageId>>31))))
	}
	if m.MusicEnabled == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		if *m.MusicEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SoundEnabled == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		if *m.SoundEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MusicVolume == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x25
		i++
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.MusicVolume))))
		i += 4
	}
	if m.SoundVolume == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x2d
		i++
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.SoundVolume))))
		i += 4
	}
	if m.HelmetVisible == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x30
		i++
		if *m.HelmetVisible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.OtherPlayerVisible == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x38
		i++
		if *m.OtherPlayerVisible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.RandAssistFriend == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x40
		i++
		if *m.RandAssistFriend {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CarNameVisible == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x48
		i++
		if *m.CarNameVisible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.RockEnabled == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x50
		i++
		if *m.RockEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BattleSpeedEnabled != nil {
		dAtA[i] = 0x58
		i++
		if *m.BattleSpeedEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BgmId != nil {
		dAtA[i] = 0x60
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.BgmId)<<1)^uint32((*m.BgmId>>31))))
	}
	if m.SuitHeadVisible != nil {
		dAtA[i] = 0x68
		i++
		if *m.SuitHeadVisible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDbRoleTimeStamp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDbRoleTimeStamp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FaceShopLastUpdateTime != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.FaceShopLastUpdateTime)<<1)^uint64((*m.FaceShopLastUpdateTime>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbLoginRoleTime) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbLoginRoleTime) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LastDayFirstLogin != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.LastDayFirstLogin))
	}
	if m.LastOfflineTime != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.LastOfflineTime))
	}
	if m.CurrentLoginTime != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.CurrentLoginTime))
	}
	if m.TotalOnlineTime != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.TotalOnlineTime))
	}
	if m.TotalLoginDays != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.TotalLoginDays))
	}
	if m.TotalLoginCount != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.TotalLoginCount))
	}
	if m.ContinuityDays != nil {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.ContinuityDays))
	}
	if m.MaxContinuityDays != nil {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.MaxContinuityDays))
	}
	if m.CreateTime != nil {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.CreateTime))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbStaminaInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbStaminaInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.BuyStaminaCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.BuyStaminaCount)<<1)^uint32((*m.BuyStaminaCount>>31))))
	}
	if m.StaminaUpperLimit == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.StaminaUpperLimit)<<1)^uint32((*m.StaminaUpperLimit>>31))))
	}
	if m.StiminaLeftTime != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.StiminaLeftTime))
	}
	if m.LastStaminaRecvStamp != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.LastStaminaRecvStamp))
	}
	if m.LastStaminaTickTime != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.LastStaminaTickTime))
	}
	if m.LastBathStaminaTickTime != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.LastBathStaminaTickTime))
	}
	if m.BathStaminaRecoveryValue != nil {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.BathStaminaRecoveryValue))
	}
	if len(m.BathOnceTimeRecovery) > 0 {
		for _, b := range m.BathOnceTimeRecovery {
			dAtA[i] = 0x40
			i++
			if b {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListDailyTaskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDailyTaskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.DailyTaskInfo) > 0 {
		for _, msg := range m.DailyTaskInfo {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleinfoExtendAttr_1) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleinfoExtendAttr_1) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TestData != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.TestData)<<1)^uint64((*m.TestData>>63))))
	}
	if m.EggId != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.EggId)<<1)^uint32((*m.EggId>>31))))
	}
	if len(m.HistoryRedeemCode) > 0 {
		for _, b := range m.HistoryRedeemCode {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if m.WeixinShareFlag != nil {
		dAtA[i] = 0x20
		i++
		if *m.WeixinShareFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BathhouseTool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BathhouseTool) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ToolType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.ToolType)<<1)^uint32((*m.ToolType>>31))))
	}
	if m.ToolId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.ToolId)<<1)^uint32((*m.ToolId>>31))))
	}
	if m.UseCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.UseCount)<<1)^uint32((*m.UseCount>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GuadraticInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuadraticInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LeftEnterCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.LeftEnterCount)<<1)^uint32((*m.LeftEnterCount>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleinfoExtendAttr_2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleinfoExtendAttr_2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FriendFightInfo != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.FriendFightInfo.Size()))
		n13, err13 := m.FriendFightInfo.MarshalTo(dAtA[i:])
		if err13 != nil {
			return 0, err13
		}
		i += n13
	}
	if len(m.ProgressList) > 0 {
		for _, msg := range m.ProgressList {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TaskIdList) > 0 {
		for _, num := range m.TaskIdList {
			dAtA[i] = 0x18
			i++
			x14 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x14 >= 1<<7 {
				dAtA[i] = uint8(uint64(x14)&0x7f | 0x80)
				x14 >>= 7
				i++
			}
			dAtA[i] = uint8(x14)
			i++
		}
	}
	if len(m.OnceTaskList) > 0 {
		for _, num := range m.OnceTaskList {
			dAtA[i] = 0x20
			i++
			x15 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x15 >= 1<<7 {
				dAtA[i] = uint8(uint64(x15)&0x7f | 0x80)
				x15 >>= 7
				i++
			}
			dAtA[i] = uint8(x15)
			i++
		}
	}
	if len(m.FunctionPtr) > 0 {
		for _, num := range m.FunctionPtr {
			dAtA[i] = 0x28
			i++
			x16 := (uint64(num) << 1) ^ uint64((num >> 63))
			for x16 >= 1<<7 {
				dAtA[i] = uint8(uint64(x16)&0x7f | 0x80)
				x16 >>= 7
				i++
			}
			dAtA[i] = uint8(x16)
			i++
		}
	}
	if len(m.BrokenList) > 0 {
		for _, num := range m.BrokenList {
			dAtA[i] = 0x30
			i++
			x17 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x17 >= 1<<7 {
				dAtA[i] = uint8(uint64(x17)&0x7f | 0x80)
				x17 >>= 7
				i++
			}
			dAtA[i] = uint8(x17)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleinfoExtendAttr_3) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleinfoExtendAttr_3) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TestData != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.TestData)<<1)^uint64((*m.TestData>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleinfoExtendAttr_4) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleinfoExtendAttr_4) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TestData != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.TestData)<<1)^uint64((*m.TestData>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleinfoExtendAttr_5) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleinfoExtendAttr_5) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleCardInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleCardInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CurrentCardPveList) > 0 {
		for _, num := range m.CurrentCardPveList {
			dAtA[i] = 0x8
			i++
			x18 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x18 >= 1<<7 {
				dAtA[i] = uint8(uint64(x18)&0x7f | 0x80)
				x18 >>= 7
				i++
			}
			dAtA[i] = uint8(x18)
			i++
		}
	}
	if len(m.CurrentCardPvpList) > 0 {
		for _, num := range m.CurrentCardPvpList {
			dAtA[i] = 0x10
			i++
			x19 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x19 >= 1<<7 {
				dAtA[i] = uint8(uint64(x19)&0x7f | 0x80)
				x19 >>= 7
				i++
			}
			dAtA[i] = uint8(x19)
			i++
		}
	}
	if len(m.HaveCardList) > 0 {
		for _, num := range m.HaveCardList {
			dAtA[i] = 0x18
			i++
			x20 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x20 >= 1<<7 {
				dAtA[i] = uint8(uint64(x20)&0x7f | 0x80)
				x20 >>= 7
				i++
			}
			dAtA[i] = uint8(x20)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PointGoldInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PointGoldInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ExchangedCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.ExchangedCount))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FriendManagerInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendManagerInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, msg := range m.Friends {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ArenaKillInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArenaKillInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.KillPlayer) > 0 {
		for _, msg := range m.KillPlayer {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FriendAssistInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendAssistInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.LeftAssistTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.LeftAssistTime)<<1)^uint32((*m.LeftAssistTime>>31))))
	}
	if m.AssistTimeStamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.AssistTimeStamp)<<1)^uint64((*m.AssistTimeStamp>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListFriendAssistInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListFriendAssistInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AssistInfo) > 0 {
		for _, msg := range m.AssistInfo {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PersonEasterEggInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonEasterEggInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EggId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.EggId)<<1)^uint32((*m.EggId>>31))))
	}
	if m.CdTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.CdTime)<<1)^uint32((*m.CdTime>>31))))
	}
	if m.Count == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Count)<<1)^uint32((*m.Count>>31))))
	}
	if m.TriggerCount == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.TriggerCount)<<1)^uint32((*m.TriggerCount>>31))))
	}
	if m.DayGetCount != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.DayGetCount)<<1)^uint32((*m.DayGetCount>>31))))
	}
	if m.FirstTouch != nil {
		dAtA[i] = 0x30
		i++
		if *m.FirstTouch {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListPersonEasterEgg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListPersonEasterEgg) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EggTimeStamp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.EggTimeStamp)<<1)^uint64((*m.EggTimeStamp>>63))))
	}
	if len(m.EggInfo) > 0 {
		for _, msg := range m.EggInfo {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RechargeMoneyInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RechargeMoneyInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TotalMoney == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.TotalMoney)<<1)^uint64((*m.TotalMoney>>63))))
	}
	if m.CurrMoneyExp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.CurrMoneyExp)<<1)^uint64((*m.CurrMoneyExp>>63))))
	}
	if m.DailyRewardFlag == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		if *m.DailyRewardFlag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.SaleId) > 0 {
		for _, num := range m.SaleId {
			dAtA[i] = 0x20
			i++
			x21 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x21 >= 1<<7 {
				dAtA[i] = uint8(uint64(x21)&0x7f | 0x80)
				x21 >>= 7
				i++
			}
			dAtA[i] = uint8(x21)
			i++
		}
	}
	if len(m.VipLevelFlag) > 0 {
		for _, num := range m.VipLevelFlag {
			dAtA[i] = 0x28
			i++
			x22 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x22 >= 1<<7 {
				dAtA[i] = uint8(uint64(x22)&0x7f | 0x80)
				x22 >>= 7
				i++
			}
			dAtA[i] = uint8(x22)
			i++
		}
	}
	if m.TotalGetDiamond != nil {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.TotalGetDiamond)<<1)^uint64((*m.TotalGetDiamond>>63))))
	}
	if m.FirstRecharge != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.FirstRecharge.Size()))
		n23, err23 := m.FirstRecharge.MarshalTo(dAtA[i:])
		if err23 != nil {
			return 0, err23
		}
		i += n23
	}
	if m.OtherRecharge != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.OtherRecharge.Size()))
		n24, err24 := m.OtherRecharge.MarshalTo(dAtA[i:])
		if err24 != nil {
			return 0, err24
		}
		i += n24
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleShowFlag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleShowFlag) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.HelmetVisible == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		if *m.HelmetVisible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BgmId != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.BgmId)<<1)^uint32((*m.BgmId>>31))))
	}
	if m.SuitHeadVisible != nil {
		dAtA[i] = 0x18
		i++
		if *m.SuitHeadVisible {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TempInfoInMemory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TempInfoInMemory) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.IsOnEnterGame != nil {
		dAtA[i] = 0x8
		i++
		if *m.IsOnEnterGame {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.OldPosX != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.OldPosX)<<1)^uint32((*m.OldPosX>>31))))
	}
	if m.OldPosY != nil {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.OldPosY)<<1)^uint32((*m.OldPosY>>31))))
	}
	if m.OldSceneId != nil {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.OldSceneId)<<1)^uint32((*m.OldSceneId>>31))))
	}
	if m.MgRoomId != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.MgRoomId)<<1)^uint32((*m.MgRoomId>>31))))
	}
	if len(m.BigBig) > 0 {
		for _, msg := range m.BigBig {
			dAtA[i] = 0x32
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ShowFlag != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ShowFlag.Size()))
		n25, err25 := m.ShowFlag.MarshalTo(dAtA[i:])
		if err25 != nil {
			return 0, err25
		}
		i += n25
	}
	if m.Risk != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.Risk.Size()))
		n26, err26 := m.Risk.MarshalTo(dAtA[i:])
		if err26 != nil {
			return 0, err26
		}
		i += n26
	}
	if m.IsUtf8 != nil {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.IsUtf8)<<1)^uint32((*m.IsUtf8>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbRolePetInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbRolePetInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.PetList) > 0 {
		for _, msg := range m.PetList {
			dAtA[i] = 0xa
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.OncePetIdList) > 0 {
		for _, num := range m.OncePetIdList {
			dAtA[i] = 0x10
			i++
			x27 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x27 >= 1<<7 {
				dAtA[i] = uint8(uint64(x27)&0x7f | 0x80)
				x27 >>= 7
				i++
			}
			dAtA[i] = uint8(x27)
			i++
		}
	}
	if m.RefreshInfo != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.RefreshInfo.Size()))
		n28, err28 := m.RefreshInfo.MarshalTo(dAtA[i:])
		if err28 != nil {
			return 0, err28
		}
		i += n28
	}
	if m.FightPetId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.FightPetId)<<1)^uint32((*m.FightPetId>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleServerMail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleServerMail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MailId != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.MailId)<<1)^uint32((*m.MailId>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ButtonCd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ButtonCd) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Cd) > 0 {
		for _, num := range m.Cd {
			dAtA[i] = 0x8
			i++
			x29 := (uint64(num) << 1) ^ uint64((num >> 63))
			for x29 >= 1<<7 {
				dAtA[i] = uint8(uint64(x29)&0x7f | 0x80)
				x29 >>= 7
				i++
			}
			dAtA[i] = uint8(x29)
			i++
		}
	}
	if len(m.CdTimestamp) > 0 {
		for _, num := range m.CdTimestamp {
			dAtA[i] = 0x10
			i++
			x30 := (uint64(num) << 1) ^ uint64((num >> 63))
			for x30 >= 1<<7 {
				dAtA[i] = uint8(uint64(x30)&0x7f | 0x80)
				x30 >>= 7
				i++
			}
			dAtA[i] = uint8(x30)
			i++
		}
	}
	if len(m.FirstTouch) > 0 {
		for _, b := range m.FirstTouch {
			dAtA[i] = 0x18
			i++
			if b {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WwwShareInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WwwShareInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.RiskIdList) > 0 {
		for _, num := range m.RiskIdList {
			dAtA[i] = 0x8
			i++
			x31 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x31 >= 1<<7 {
				dAtA[i] = uint8(uint64(x31)&0x7f | 0x80)
				x31 >>= 7
				i++
			}
			dAtA[i] = uint8(x31)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ServerGmInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServerGmInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CanSpeak != nil {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.CanSpeak)<<1)^uint32((*m.CanSpeak>>31))))
	}
	if m.NextSpeakTime != nil {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.NextSpeakTime)<<1)^uint64((*m.NextSpeakTime>>63))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ServerUpdateInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServerUpdateInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FightInitBug != nil {
		dAtA[i] = 0x8
		i++
		if *m.FightInitBug {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FixEquipExistBug != nil {
		dAtA[i] = 0x10
		i++
		if *m.FixEquipExistBug {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleActivityInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleActivityInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ActivityList) > 0 {
		for _, msg := range m.ActivityList {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SqlResultRoleinfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SqlResultRoleinfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.Account == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(len(m.Account)))
		i += copy(dAtA[i:], m.Account)
	}
	if m.Gender == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Gender)<<1)^uint32((*m.Gender>>31))))
	}
	if m.NickName == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(len(m.NickName)))
		i += copy(dAtA[i:], m.NickName)
	}
	if m.Level == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Level)<<1)^uint32((*m.Level>>31))))
	}
	if m.SceneId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.SceneId)<<1)^uint32((*m.SceneId>>31))))
	}
	if m.PosX == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x38
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.PosX)<<1)^uint32((*m.PosX>>31))))
	}
	if m.PosY == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x40
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.PosY)<<1)^uint32((*m.PosY>>31))))
	}
	if m.GameCoin == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x48
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.GameCoin)<<1)^uint64((*m.GameCoin>>63))))
	}
	if m.Endurance == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x50
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.Endurance)<<1)^uint64((*m.Endurance>>63))))
	}
	if m.DiamondCoin == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x58
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.DiamondCoin)<<1)^uint64((*m.DiamondCoin>>63))))
	}
	if m.Exp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x60
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.Exp)<<1)^uint64((*m.Exp>>63))))
	}
	if m.SkillPoint == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x68
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.SkillPoint)<<1)^uint64((*m.SkillPoint>>63))))
	}
	if m.VipLevel != nil {
		dAtA[i] = 0x70
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.VipLevel)<<1)^uint32((*m.VipLevel>>31))))
	}
	if m.PlayerId != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(len(m.PlayerId)))
		i += copy(dAtA[i:], m.PlayerId)
	}
	if m.MoveSpeed != nil {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.MoveSpeed)<<1)^uint32((*m.MoveSpeed>>31))))
	}
	if m.ToLeft != nil {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		if *m.ToLeft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.GmInfo != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.GmInfo.Size()))
		n32, err32 := m.GmInfo.MarshalTo(dAtA[i:])
		if err32 != nil {
			return 0, err32
		}
		i += n32
	}
	if m.EquipFixBag != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.EquipFixBag.Size()))
		n33, err33 := m.EquipFixBag.MarshalTo(dAtA[i:])
		if err33 != nil {
			return 0, err33
		}
		i += n33
	}
	if m.BagItemInfo != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.BagItemInfo.Size()))
		n34, err34 := m.BagItemInfo.MarshalTo(dAtA[i:])
		if err34 != nil {
			return 0, err34
		}
		i += n34
	}
	if m.BagEquipInfo != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.BagEquipInfo.Size()))
		n35, err35 := m.BagEquipInfo.MarshalTo(dAtA[i:])
		if err35 != nil {
			return 0, err35
		}
		i += n35
	}
	if m.EquipInfo != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.EquipInfo.Size()))
		n36, err36 := m.EquipInfo.MarshalTo(dAtA[i:])
		if err36 != nil {
			return 0, err36
		}
		i += n36
	}
	if m.SuitInfo != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SuitInfo.Size()))
		n37, err37 := m.SuitInfo.MarshalTo(dAtA[i:])
		if err37 != nil {
			return 0, err37
		}
		i += n37
	}
	if m.FaceInfo != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.FaceInfo.Size()))
		n38, err38 := m.FaceInfo.MarshalTo(dAtA[i:])
		if err38 != nil {
			return 0, err38
		}
		i += n38
	}
	if m.TalentSkills != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.TalentSkills.Size()))
		n39, err39 := m.TalentSkills.MarshalTo(dAtA[i:])
		if err39 != nil {
			return 0, err39
		}
		i += n39
	}
	if m.BookSkills != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.BookSkills.Size()))
		n40, err40 := m.BookSkills.MarshalTo(dAtA[i:])
		if err40 != nil {
			return 0, err40
		}
		i += n40
	}
	if m.SuitSkills != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SuitSkills.Size()))
		n41, err41 := m.SuitSkills.MarshalTo(dAtA[i:])
		if err41 != nil {
			return 0, err41
		}
		i += n41
	}
	if m.FriendInfo != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.FriendInfo.Size()))
		n42, err42 := m.FriendInfo.MarshalTo(dAtA[i:])
		if err42 != nil {
			return 0, err42
		}
		i += n42
	}
	if m.PetInfo != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.PetInfo.Size()))
		n43, err43 := m.PetInfo.MarshalTo(dAtA[i:])
		if err43 != nil {
			return 0, err43
		}
		i += n43
	}
	if m.RiskInfo != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.RiskInfo.Size()))
		n44, err44 := m.RiskInfo.MarshalTo(dAtA[i:])
		if err44 != nil {
			return 0, err44
		}
		i += n44
	}
	if m.TaskInfo != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.TaskInfo.Size()))
		n45, err45 := m.TaskInfo.MarshalTo(dAtA[i:])
		if err45 != nil {
			return 0, err45
		}
		i += n45
	}
	if m.SuccessInfo != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SuccessInfo.Size()))
		n46, err46 := m.SuccessInfo.MarshalTo(dAtA[i:])
		if err46 != nil {
			return 0, err46
		}
		i += n46
	}
	if m.GuideInfo != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.GuideInfo.Size()))
		n47, err47 := m.GuideInfo.MarshalTo(dAtA[i:])
		if err47 != nil {
			return 0, err47
		}
		i += n47
	}
	if m.SystemConfig != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SystemConfig.Size()))
		n48, err48 := m.SystemConfig.MarshalTo(dAtA[i:])
		if err48 != nil {
			return 0, err48
		}
		i += n48
	}
	if m.RoleTimeStampList != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.RoleTimeStampList.Size()))
		n49, err49 := m.RoleTimeStampList.MarshalTo(dAtA[i:])
		if err49 != nil {
			return 0, err49
		}
		i += n49
	}
	if m.DbCardInfo != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.DbCardInfo.Size()))
		n50, err50 := m.DbCardInfo.MarshalTo(dAtA[i:])
		if err50 != nil {
			return 0, err50
		}
		i += n50
	}
	if m.CardInfo != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.CardInfo.Size()))
		n51, err51 := m.CardInfo.MarshalTo(dAtA[i:])
		if err51 != nil {
			return 0, err51
		}
		i += n51
	}
	if m.ArenaKill != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ArenaKill.Size()))
		n52, err52 := m.ArenaKill.MarshalTo(dAtA[i:])
		if err52 != nil {
			return 0, err52
		}
		i += n52
	}
	if m.ArenaInfo != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ArenaInfo.Size()))
		n53, err53 := m.ArenaInfo.MarshalTo(dAtA[i:])
		if err53 != nil {
			return 0, err53
		}
		i += n53
	}
	if m.SwordInfo != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SwordInfo.Size()))
		n54, err54 := m.SwordInfo.MarshalTo(dAtA[i:])
		if err54 != nil {
			return 0, err54
		}
		i += n54
	}
	if m.DailyTaskInfo != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.DailyTaskInfo.Size()))
		n55, err55 := m.DailyTaskInfo.MarshalTo(dAtA[i:])
		if err55 != nil {
			return 0, err55
		}
		i += n55
	}
	if m.ActivityInfo != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ActivityInfo.Size()))
		n56, err56 := m.ActivityInfo.MarshalTo(dAtA[i:])
		if err56 != nil {
			return 0, err56
		}
		i += n56
	}
	if m.LoginTimeInfo != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.LoginTimeInfo.Size()))
		n57, err57 := m.LoginTimeInfo.MarshalTo(dAtA[i:])
		if err57 != nil {
			return 0, err57
		}
		i += n57
	}
	if m.MinigameInfo != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.MinigameInfo.Size()))
		n58, err58 := m.MinigameInfo.MarshalTo(dAtA[i:])
		if err58 != nil {
			return 0, err58
		}
		i += n58
	}
	if m.StaminaInfo != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.StaminaInfo.Size()))
		n59, err59 := m.StaminaInfo.MarshalTo(dAtA[i:])
		if err59 != nil {
			return 0, err59
		}
		i += n59
	}
	if m.ManagerFriend != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ManagerFriend.Size()))
		n60, err60 := m.ManagerFriend.MarshalTo(dAtA[i:])
		if err60 != nil {
			return 0, err60
		}
		i += n60
	}
	if m.SignInfo != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SignInfo.Size()))
		n61, err61 := m.SignInfo.MarshalTo(dAtA[i:])
		if err61 != nil {
			return 0, err61
		}
		i += n61
	}
	if m.SevenDay != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.SevenDay.Size()))
		n62, err62 := m.SevenDay.MarshalTo(dAtA[i:])
		if err62 != nil {
			return 0, err62
		}
		i += n62
	}
	if m.PointGold != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.PointGold.Size()))
		n63, err63 := m.PointGold.MarshalTo(dAtA[i:])
		if err63 != nil {
			return 0, err63
		}
		i += n63
	}
	if m.FriendAssist != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.FriendAssist.Size()))
		n64, err64 := m.FriendAssist.MarshalTo(dAtA[i:])
		if err64 != nil {
			return 0, err64
		}
		i += n64
	}
	if m.PersonEasterEgg != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.PersonEasterEgg.Size()))
		n65, err65 := m.PersonEasterEgg.MarshalTo(dAtA[i:])
		if err65 != nil {
			return 0, err65
		}
		i += n65
	}
	if m.RechargeMoney != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.RechargeMoney.Size()))
		n66, err66 := m.RechargeMoney.MarshalTo(dAtA[i:])
		if err66 != nil {
			return 0, err66
		}
		i += n66
	}
	if m.OldDriverInfo != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.OldDriverInfo.Size()))
		n67, err67 := m.OldDriverInfo.MarshalTo(dAtA[i:])
		if err67 != nil {
			return 0, err67
		}
		i += n67
	}
	if m.CountInfo != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.CountInfo.Size()))
		n68, err68 := m.CountInfo.MarshalTo(dAtA[i:])
		if err68 != nil {
			return 0, err68
		}
		i += n68
	}
	if m.HomeInfo != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.HomeInfo.Size()))
		n69, err69 := m.HomeInfo.MarshalTo(dAtA[i:])
		if err69 != nil {
			return 0, err69
		}
		i += n69
	}
	if m.DanmakuInfo != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.DanmakuInfo.Size()))
		n70, err70 := m.DanmakuInfo.MarshalTo(dAtA[i:])
		if err70 != nil {
			return 0, err70
		}
		i += n70
	}
	if m.InteractInfo != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.InteractInfo.Size()))
		n71, err71 := m.InteractInfo.MarshalTo(dAtA[i:])
		if err71 != nil {
			return 0, err71
		}
		i += n71
	}
	if m.MailInfo != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.MailInfo.Size()))
		n72, err72 := m.MailInfo.MarshalTo(dAtA[i:])
		if err72 != nil {
			return 0, err72
		}
		i += n72
	}
	if len(m.ButtonInfo) > 0 {
		for _, msg := range m.ButtonInfo {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintSql_Login(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Guadratic != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.Guadratic.Size()))
		n73, err73 := m.Guadratic.MarshalTo(dAtA[i:])
		if err73 != nil {
			return 0, err73
		}
		i += n73
	}
	if m.ShareInfo != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ShareInfo.Size()))
		n74, err74 := m.ShareInfo.MarshalTo(dAtA[i:])
		if err74 != nil {
			return 0, err74
		}
		i += n74
	}
	if m.Activity != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.Activity.Size()))
		n75, err75 := m.Activity.MarshalTo(dAtA[i:])
		if err75 != nil {
			return 0, err75
		}
		i += n75
	}
	if m.CombinationSkill != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.CombinationSkill.Size()))
		n76, err76 := m.CombinationSkill.MarshalTo(dAtA[i:])
		if err76 != nil {
			return 0, err76
		}
		i += n76
	}
	if m.OpenInfo != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.OpenInfo.Size()))
		n77, err77 := m.OpenInfo.MarshalTo(dAtA[i:])
		if err77 != nil {
			return 0, err77
		}
		i += n77
	}
	if m.CommonShop != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.CommonShop.Size()))
		n78, err78 := m.CommonShop.MarshalTo(dAtA[i:])
		if err78 != nil {
			return 0, err78
		}
		i += n78
	}
	if m.VersionUpdate != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.VersionUpdate.Size()))
		n79, err79 := m.VersionUpdate.MarshalTo(dAtA[i:])
		if err79 != nil {
			return 0, err79
		}
		i += n79
	}
	if m.MemoryInfo != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.MemoryInfo.Size()))
		n80, err80 := m.MemoryInfo.MarshalTo(dAtA[i:])
		if err80 != nil {
			return 0, err80
		}
		i += n80
	}
	if m.ExtendAttr1 != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ExtendAttr1.Size()))
		n81, err81 := m.ExtendAttr1.MarshalTo(dAtA[i:])
		if err81 != nil {
			return 0, err81
		}
		i += n81
	}
	if m.ExtendAttr2 != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ExtendAttr2.Size()))
		n82, err82 := m.ExtendAttr2.MarshalTo(dAtA[i:])
		if err82 != nil {
			return 0, err82
		}
		i += n82
	}
	if m.ExtendAttr3 != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ExtendAttr3.Size()))
		n83, err83 := m.ExtendAttr3.MarshalTo(dAtA[i:])
		if err83 != nil {
			return 0, err83
		}
		i += n83
	}
	if m.ExtendAttr4 != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ExtendAttr4.Size()))
		n84, err84 := m.ExtendAttr4.MarshalTo(dAtA[i:])
		if err84 != nil {
			return 0, err84
		}
		i += n84
	}
	if m.ExtendAttr5 != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ExtendAttr5.Size()))
		n85, err85 := m.ExtendAttr5.MarshalTo(dAtA[i:])
		if err85 != nil {
			return 0, err85
		}
		i += n85
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BathhousePlayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BathhousePlayer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
	}
	if m.StatusId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.StatusId)<<1)^uint32((*m.StatusId>>31))))
	}
	if m.StatusBeginTime == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.StatusBeginTime)<<1)^uint64((*m.StatusBeginTime>>63))))
	}
	if m.Fullness == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Fullness)<<1)^uint32((*m.Fullness>>31))))
	}
	if m.Stamina == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Stamina)<<1)^uint32((*m.Stamina>>31))))
	}
	if m.Exp == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x30
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Exp)<<1)^uint32((*m.Exp>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SqlFriendMngInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SqlFriendMngInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.RoleIndex))
	}
	if m.ReqRoleIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.ReqRoleIndex))
	}
	if m.ReqFriendInfo != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(m.ReqFriendInfo.Size()))
		n86, err86 := m.ReqFriendInfo.MarshalTo(dAtA[i:])
		if err86 != nil {
			return 0, err86
		}
		i += n86
	}
	if m.ReqType == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.ReqType))
	}
	if m.ReqTime != nil {
		dAtA[i] = 0x28
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.ReqTime))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SqlResultSaveRole) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SqlResultSaveRole) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RetCode == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DailyActivityChangeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DailyActivityChangeInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TotalActivity == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.TotalActivity)<<1)^uint32((*m.TotalActivity>>31))))
	}
	if m.ActivityDiff == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.ActivityDiff)<<1)^uint32((*m.ActivityDiff>>31))))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SqlRetClusterNodeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SqlRetClusterNodeInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.NodeIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.NodeIndex)<<1)^uint64((*m.NodeIndex>>63))))
	}
	if m.Intaddr == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.Intaddr)<<1)^uint64((*m.Intaddr>>63))))
	}
	if m.UnitNextIndex == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.UnitNextIndex)<<1)^uint64((*m.UnitNextIndex>>63))))
	}
	if m.CpuPressure == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x20
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint64(*m.CpuPressure)<<1)^uint64((*m.CpuPressure>>63))))
	}
	if m.IsOnline == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x28
		i++
		if *m.IsOnline {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RoleInteractInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleInteractInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Energy == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.Energy)<<1)^uint32((*m.Energy>>31))))
	}
	if m.GetEnergyId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.GetEnergyId)<<1)^uint32((*m.GetEnergyId>>31))))
	}
	if m.GetRewardId == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintSql_Login(dAtA, i, uint64((uint32(*m.GetRewardId)<<1)^uint32((*m.GetRewardId>>31))))
	}
	if len(m.ActIdList) > 0 {
		for _, num := range m.ActIdList {
			dAtA[i] = 0x20
			i++
			x87 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x87 >= 1<<7 {
				dAtA[i] = uint8(uint64(x87)&0x7f | 0x80)
				x87 >>= 7
				i++
			}
			dAtA[i] = uint8(x87)
			i++
		}
	}
	if len(m.ActiveActList) > 0 {
		for _, num := range m.ActiveActList {
			dAtA[i] = 0x28
			i++
			x88 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x88 >= 1<<7 {
				dAtA[i] = uint8(uint64(x88)&0x7f | 0x80)
				x88 >>= 7
				i++
			}
			dAtA[i] = uint8(x88)
			i++
		}
	}
	if len(m.AutoActList) > 0 {
		for _, num := range m.AutoActList {
			dAtA[i] = 0x30
			i++
			x89 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x89 >= 1<<7 {
				dAtA[i] = uint8(uint64(x89)&0x7f | 0x80)
				x89 >>= 7
				i++
			}
			dAtA[i] = uint8(x89)
			i++
		}
	}
	if len(m.CanUnlockActList) > 0 {
		for _, num := range m.CanUnlockActList {
			dAtA[i] = 0x38
			i++
			x90 := (uint32(num) << 1) ^ uint32((num >> 31))
			for x90 >= 1<<7 {
				dAtA[i] = uint8(uint64(x90)&0x7f | 0x80)
				x90 >>= 7
				i++
			}
			dAtA[i] = uint8(x90)
			i++
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintSql_Login(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SuitGoodsInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CanBuySuitShopId != nil {
		n += 1 + sozSql_Login(uint64(*m.CanBuySuitShopId))
	}
	if m.IsBuy != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SuitInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SuitId != nil {
		n += 1 + sozSql_Login(uint64(*m.SuitId))
	}
	if m.SuitUnixtimeTimeOutStamp != nil {
		n += 1 + sozSql_Login(uint64(*m.SuitUnixtimeTimeOutStamp))
	}
	if m.SuitDurationType != nil {
		n += 1 + sozSql_Login(uint64(*m.SuitDurationType))
	}
	if m.GetTimestamp != nil {
		n += 1 + sozSql_Login(uint64(*m.GetTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleSuitInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BuySuit) > 0 {
		for _, e := range m.BuySuit {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.SuitShopLastUpdateTime != nil {
		n += 1 + sozSql_Login(uint64(*m.SuitShopLastUpdateTime))
	}
	if m.CurrentSuit != nil {
		l = m.CurrentSuit.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if len(m.HaveSuits) > 0 {
		for _, e := range m.HaveSuits {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FaceGoodsInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CanBuyFaceShopId != nil {
		n += 1 + sozSql_Login(uint64(*m.CanBuyFaceShopId))
	}
	if m.IsBuy != nil {
		n += 2
	}
	if m.FaceShopIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FaceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FaceId != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceId))
	}
	if m.FaceUnixtimeTimeOutStamp != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceUnixtimeTimeOutStamp))
	}
	if m.FaceDurationType != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceDurationType))
	}
	if m.GetTimestamp != nil {
		n += 1 + sozSql_Login(uint64(*m.GetTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleCommonShop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ShopList) > 0 {
		for _, e := range m.ShopList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListSignInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignYear != nil {
		n += 1 + sozSql_Login(uint64(*m.SignYear))
	}
	if m.SignMonth != nil {
		n += 1 + sozSql_Login(uint64(*m.SignMonth))
	}
	if m.MonthTotalDays != nil {
		n += 1 + sozSql_Login(uint64(*m.MonthTotalDays))
	}
	if m.SignBeginDay != nil {
		n += 1 + sozSql_Login(uint64(*m.SignBeginDay))
	}
	if m.NextSignDay != nil {
		n += 1 + sozSql_Login(uint64(*m.NextSignDay))
	}
	if m.SignCount != nil {
		n += 1 + sozSql_Login(uint64(*m.SignCount))
	}
	if m.RetroactiveCount != nil {
		n += 1 + sozSql_Login(uint64(*m.RetroactiveCount))
	}
	if m.LotteryDays != nil {
		n += 1 + sozSql_Login(uint64(*m.LotteryDays))
	}
	if m.MissCount != nil {
		n += 1 + sozSql_Login(uint64(*m.MissCount))
	}
	if m.RefreshMonthDay != nil {
		n += 1 + sozSql_Login(uint64(*m.RefreshMonthDay))
	}
	if m.TodaySign != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SevenDayDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Day != nil {
		n += 1 + sozSql_Login(uint64(*m.Day))
	}
	if m.GetFlag != nil {
		n += 1 + sozSql_Login(uint64(*m.GetFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SevenDayInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalLoginDays != nil {
		n += 1 + sozSql_Login(uint64(*m.TotalLoginDays))
	}
	if len(m.DayInfo) > 0 {
		for _, e := range m.DayInfo {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RiskInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sozSql_Login(uint64(*m.Id))
	}
	if m.Passed != nil {
		n += 1 + sozSql_Login(uint64(*m.Passed))
	}
	if m.FightCount != nil {
		n += 1 + sozSql_Login(uint64(*m.FightCount))
	}
	if m.ResetCount != nil {
		n += 1 + sozSql_Login(uint64(*m.ResetCount))
	}
	if m.ShareFlag != nil {
		n += 1 + sozSql_Login(uint64(*m.ShareFlag))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RewardBox) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sozSql_Login(uint64(*m.Id))
	}
	if m.Get != nil {
		n += 1 + sozSql_Login(uint64(*m.Get))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChapterInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sozSql_Login(uint64(*m.Id))
	}
	if len(m.Dup) > 0 {
		for _, e := range m.Dup {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.Box) > 0 {
		for _, e := range m.Box {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.GetReward != nil {
		n += 1 + sozSql_Login(uint64(*m.GetReward))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleFacePreferInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AutoShowFlag != nil {
		n += 2
	}
	if len(m.FaceList) > 0 {
		for _, e := range m.FaceList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListFaceShopInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OriginalBuyFace) > 0 {
		for _, e := range m.OriginalBuyFace {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.DiscountBuyFace) > 0 {
		for _, e := range m.DiscountBuyFace {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.FaceShopLastUpdateTime != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopLastUpdateTime))
	}
	if m.FaceShopLastManualUpdateTime != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopLastManualUpdateTime))
	}
	if m.FaceShopManualUpdateCount != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopManualUpdateCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleFaceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OriginalBuyFace) > 0 {
		for _, e := range m.OriginalBuyFace {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.DiscountBuyFace) > 0 {
		for _, e := range m.DiscountBuyFace {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.FaceShopLastUpdateTime != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopLastUpdateTime))
	}
	if m.FaceShopLastManualUpdateTime != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopLastManualUpdateTime))
	}
	if m.FaceShopManualUpdateCount != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopManualUpdateCount))
	}
	if len(m.HaveFaces) > 0 {
		for _, e := range m.HaveFaces {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.PreferInfo != nil {
		l = m.PreferInfo.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if len(m.CustomList) > 0 {
		for _, e := range m.CustomList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.CurrentFace != nil {
		l = m.CurrentFace.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.ForeverFree != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbSkillInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sozSql_Login(uint64(*m.Id))
	}
	if m.Level != nil {
		n += 1 + sozSql_Login(uint64(*m.Level))
	}
	if m.Skilled != nil {
		n += 1 + sozSql_Login(uint64(*m.Skilled))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbArenaInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuyCount != nil {
		n += 1 + sozSql_Login(uint64(*m.BuyCount))
	}
	if m.TotalCount != nil {
		n += 1 + sozSql_Login(uint64(*m.TotalCount))
	}
	if m.LeftCount != nil {
		n += 1 + sozSql_Login(uint64(*m.LeftCount))
	}
	if m.CdTimeStamp != nil {
		n += 1 + sozSql_Login(uint64(*m.CdTimeStamp))
	}
	if m.CdTime != nil {
		n += 1 + sozSql_Login(uint64(*m.CdTime))
	}
	if m.Score != nil {
		n += 1 + sozSql_Login(uint64(*m.Score))
	}
	if m.HistoryTopRank != nil {
		n += 1 + sozSql_Login(uint64(*m.HistoryTopRank))
	}
	if m.BattleInfo != nil {
		l = m.BattleInfo.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.FightRank != nil {
		n += 1 + sozSql_Login(uint64(*m.FightRank))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbSwordInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalCount != nil {
		n += 1 + sozSql_Login(uint64(*m.TotalCount))
	}
	if m.FailedCount != nil {
		n += 1 + sozSql_Login(uint64(*m.FailedCount))
	}
	if m.LeftCount != nil {
		n += 1 + sozSql_Login(uint64(*m.LeftCount))
	}
	if m.BuyCount != nil {
		n += 1 + sozSql_Login(uint64(*m.BuyCount))
	}
	if m.CdTime != nil {
		n += 1 + sozSql_Login(uint64(*m.CdTime))
	}
	if m.JoinCount != nil {
		n += 1 + sozSql_Login(uint64(*m.JoinCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleTalentSkillInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.HaveSkills) > 0 {
		for _, e := range m.HaveSkills {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.CurrentSkills) > 0 {
		for _, e := range m.CurrentSkills {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleBookSkillInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.HaveSkills) > 0 {
		for _, e := range m.HaveSkills {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.CurrentSkills) > 0 {
		for _, e := range m.CurrentSkills {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleSuitSkillInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.HaveSkills) > 0 {
		for _, e := range m.HaveSkills {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.CurrentSkills) > 0 {
		for _, e := range m.CurrentSkills {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleFriendInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, e := range m.Friends {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.FightCount != nil {
		n += 1 + sozSql_Login(uint64(*m.FightCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleRiskInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Chaps) > 0 {
		for _, e := range m.Chaps {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.ChapsDanger) > 0 {
		for _, e := range m.ChapsDanger {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbTask) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CompletedTaskList) > 0 {
		for _, e := range m.CompletedTaskList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.CanAcceptTaskList) > 0 {
		for _, e := range m.CanAcceptTaskList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.AcceptedTaskList) > 0 {
		for _, e := range m.AcceptedTaskList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleSuccessInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DetailList) > 0 {
		for _, e := range m.DetailList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.ReachIdList) > 0 {
		for _, e := range m.ReachIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.GotIdList) > 0 {
		for _, e := range m.GotIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.Point != nil {
		n += 1 + sozSql_Login(uint64(*m.Point))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleGuideInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FindGuidIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.FindGuidIndex))
	}
	if m.ForceGuideIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.ForceGuideIndex))
	}
	if len(m.TipReadIdList) > 0 {
		for _, e := range m.TipReadIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbRoleSystemConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LanguageId != nil {
		n += 1 + sozSql_Login(uint64(*m.LanguageId))
	}
	if m.MusicEnabled != nil {
		n += 2
	}
	if m.SoundEnabled != nil {
		n += 2
	}
	if m.MusicVolume != nil {
		n += 5
	}
	if m.SoundVolume != nil {
		n += 5
	}
	if m.HelmetVisible != nil {
		n += 2
	}
	if m.OtherPlayerVisible != nil {
		n += 2
	}
	if m.RandAssistFriend != nil {
		n += 2
	}
	if m.CarNameVisible != nil {
		n += 2
	}
	if m.RockEnabled != nil {
		n += 2
	}
	if m.BattleSpeedEnabled != nil {
		n += 2
	}
	if m.BgmId != nil {
		n += 1 + sozSql_Login(uint64(*m.BgmId))
	}
	if m.SuitHeadVisible != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDbRoleTimeStamp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FaceShopLastUpdateTime != nil {
		n += 1 + sozSql_Login(uint64(*m.FaceShopLastUpdateTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbLoginRoleTime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastDayFirstLogin != nil {
		n += 1 + sovSql_Login(uint64(*m.LastDayFirstLogin))
	}
	if m.LastOfflineTime != nil {
		n += 1 + sovSql_Login(uint64(*m.LastOfflineTime))
	}
	if m.CurrentLoginTime != nil {
		n += 1 + sovSql_Login(uint64(*m.CurrentLoginTime))
	}
	if m.TotalOnlineTime != nil {
		n += 1 + sovSql_Login(uint64(*m.TotalOnlineTime))
	}
	if m.TotalLoginDays != nil {
		n += 1 + sovSql_Login(uint64(*m.TotalLoginDays))
	}
	if m.TotalLoginCount != nil {
		n += 1 + sovSql_Login(uint64(*m.TotalLoginCount))
	}
	if m.ContinuityDays != nil {
		n += 1 + sovSql_Login(uint64(*m.ContinuityDays))
	}
	if m.MaxContinuityDays != nil {
		n += 1 + sovSql_Login(uint64(*m.MaxContinuityDays))
	}
	if m.CreateTime != nil {
		n += 1 + sovSql_Login(uint64(*m.CreateTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbStaminaInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BuyStaminaCount != nil {
		n += 1 + sozSql_Login(uint64(*m.BuyStaminaCount))
	}
	if m.StaminaUpperLimit != nil {
		n += 1 + sozSql_Login(uint64(*m.StaminaUpperLimit))
	}
	if m.StiminaLeftTime != nil {
		n += 1 + sovSql_Login(uint64(*m.StiminaLeftTime))
	}
	if m.LastStaminaRecvStamp != nil {
		n += 1 + sovSql_Login(uint64(*m.LastStaminaRecvStamp))
	}
	if m.LastStaminaTickTime != nil {
		n += 1 + sovSql_Login(uint64(*m.LastStaminaTickTime))
	}
	if m.LastBathStaminaTickTime != nil {
		n += 1 + sovSql_Login(uint64(*m.LastBathStaminaTickTime))
	}
	if m.BathStaminaRecoveryValue != nil {
		n += 1 + sovSql_Login(uint64(*m.BathStaminaRecoveryValue))
	}
	if len(m.BathOnceTimeRecovery) > 0 {
		n += 2 * len(m.BathOnceTimeRecovery)
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDailyTaskInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DailyTaskInfo) > 0 {
		for _, e := range m.DailyTaskInfo {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleinfoExtendAttr_1) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TestData != nil {
		n += 1 + sozSql_Login(uint64(*m.TestData))
	}
	if m.EggId != nil {
		n += 1 + sozSql_Login(uint64(*m.EggId))
	}
	if len(m.HistoryRedeemCode) > 0 {
		for _, b := range m.HistoryRedeemCode {
			l = len(b)
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.WeixinShareFlag != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BathhouseTool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ToolType != nil {
		n += 1 + sozSql_Login(uint64(*m.ToolType))
	}
	if m.ToolId != nil {
		n += 1 + sozSql_Login(uint64(*m.ToolId))
	}
	if m.UseCount != nil {
		n += 1 + sozSql_Login(uint64(*m.UseCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GuadraticInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LeftEnterCount != nil {
		n += 1 + sozSql_Login(uint64(*m.LeftEnterCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleinfoExtendAttr_2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendFightInfo != nil {
		l = m.FriendFightInfo.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if len(m.ProgressList) > 0 {
		for _, e := range m.ProgressList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.TaskIdList) > 0 {
		for _, e := range m.TaskIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.OnceTaskList) > 0 {
		for _, e := range m.OnceTaskList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.FunctionPtr) > 0 {
		for _, e := range m.FunctionPtr {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.BrokenList) > 0 {
		for _, e := range m.BrokenList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleinfoExtendAttr_3) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TestData != nil {
		n += 1 + sozSql_Login(uint64(*m.TestData))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleinfoExtendAttr_4) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TestData != nil {
		n += 1 + sozSql_Login(uint64(*m.TestData))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleinfoExtendAttr_5) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleCardInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CurrentCardPveList) > 0 {
		for _, e := range m.CurrentCardPveList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.CurrentCardPvpList) > 0 {
		for _, e := range m.CurrentCardPvpList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.HaveCardList) > 0 {
		for _, e := range m.HaveCardList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PointGoldInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExchangedCount != nil {
		n += 1 + sovSql_Login(uint64(*m.ExchangedCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendManagerInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Friends) > 0 {
		for _, e := range m.Friends {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArenaKillInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.KillPlayer) > 0 {
		for _, e := range m.KillPlayer {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendAssistInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.RoleIndex))
	}
	if m.LeftAssistTime != nil {
		n += 1 + sozSql_Login(uint64(*m.LeftAssistTime))
	}
	if m.AssistTimeStamp != nil {
		n += 1 + sozSql_Login(uint64(*m.AssistTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListFriendAssistInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AssistInfo) > 0 {
		for _, e := range m.AssistInfo {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PersonEasterEggInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EggId != nil {
		n += 1 + sozSql_Login(uint64(*m.EggId))
	}
	if m.CdTime != nil {
		n += 1 + sozSql_Login(uint64(*m.CdTime))
	}
	if m.Count != nil {
		n += 1 + sozSql_Login(uint64(*m.Count))
	}
	if m.TriggerCount != nil {
		n += 1 + sozSql_Login(uint64(*m.TriggerCount))
	}
	if m.DayGetCount != nil {
		n += 1 + sozSql_Login(uint64(*m.DayGetCount))
	}
	if m.FirstTouch != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListPersonEasterEgg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EggTimeStamp != nil {
		n += 1 + sozSql_Login(uint64(*m.EggTimeStamp))
	}
	if len(m.EggInfo) > 0 {
		for _, e := range m.EggInfo {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RechargeMoneyInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalMoney != nil {
		n += 1 + sozSql_Login(uint64(*m.TotalMoney))
	}
	if m.CurrMoneyExp != nil {
		n += 1 + sozSql_Login(uint64(*m.CurrMoneyExp))
	}
	if m.DailyRewardFlag != nil {
		n += 2
	}
	if len(m.SaleId) > 0 {
		for _, e := range m.SaleId {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.VipLevelFlag) > 0 {
		for _, e := range m.VipLevelFlag {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.TotalGetDiamond != nil {
		n += 1 + sozSql_Login(uint64(*m.TotalGetDiamond))
	}
	if m.FirstRecharge != nil {
		l = m.FirstRecharge.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.OtherRecharge != nil {
		l = m.OtherRecharge.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleShowFlag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HelmetVisible != nil {
		n += 2
	}
	if m.BgmId != nil {
		n += 1 + sozSql_Login(uint64(*m.BgmId))
	}
	if m.SuitHeadVisible != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TempInfoInMemory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsOnEnterGame != nil {
		n += 2
	}
	if m.OldPosX != nil {
		n += 1 + sozSql_Login(uint64(*m.OldPosX))
	}
	if m.OldPosY != nil {
		n += 1 + sozSql_Login(uint64(*m.OldPosY))
	}
	if m.OldSceneId != nil {
		n += 1 + sozSql_Login(uint64(*m.OldSceneId))
	}
	if m.MgRoomId != nil {
		n += 1 + sozSql_Login(uint64(*m.MgRoomId))
	}
	if len(m.BigBig) > 0 {
		for _, e := range m.BigBig {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.ShowFlag != nil {
		l = m.ShowFlag.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.Risk != nil {
		l = m.Risk.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.IsUtf8 != nil {
		n += 2 + sozSql_Login(uint64(*m.IsUtf8))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbRolePetInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PetList) > 0 {
		for _, e := range m.PetList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if len(m.OncePetIdList) > 0 {
		for _, e := range m.OncePetIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.RefreshInfo != nil {
		l = m.RefreshInfo.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.FightPetId != nil {
		n += 1 + sozSql_Login(uint64(*m.FightPetId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleServerMail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MailId != nil {
		n += 1 + sozSql_Login(uint64(*m.MailId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ButtonCd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cd) > 0 {
		for _, e := range m.Cd {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.CdTimestamp) > 0 {
		for _, e := range m.CdTimestamp {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.FirstTouch) > 0 {
		n += 2 * len(m.FirstTouch)
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WwwShareInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RiskIdList) > 0 {
		for _, e := range m.RiskIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ServerGmInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CanSpeak != nil {
		n += 1 + sozSql_Login(uint64(*m.CanSpeak))
	}
	if m.NextSpeakTime != nil {
		n += 1 + sozSql_Login(uint64(*m.NextSpeakTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ServerUpdateInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FightInitBug != nil {
		n += 2
	}
	if m.FixEquipExistBug != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleActivityInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ActivityList) > 0 {
		for _, e := range m.ActivityList {
			l = e.Size()
			n += 1 + l + sovSql_Login(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SqlResultRoleinfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.RoleIndex))
	}
	if m.Account != nil {
		l = len(m.Account)
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.Gender != nil {
		n += 1 + sozSql_Login(uint64(*m.Gender))
	}
	if m.NickName != nil {
		l = len(m.NickName)
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.Level != nil {
		n += 1 + sozSql_Login(uint64(*m.Level))
	}
	if m.SceneId != nil {
		n += 1 + sozSql_Login(uint64(*m.SceneId))
	}
	if m.PosX != nil {
		n += 1 + sozSql_Login(uint64(*m.PosX))
	}
	if m.PosY != nil {
		n += 1 + sozSql_Login(uint64(*m.PosY))
	}
	if m.GameCoin != nil {
		n += 1 + sozSql_Login(uint64(*m.GameCoin))
	}
	if m.Endurance != nil {
		n += 1 + sozSql_Login(uint64(*m.Endurance))
	}
	if m.DiamondCoin != nil {
		n += 1 + sozSql_Login(uint64(*m.DiamondCoin))
	}
	if m.Exp != nil {
		n += 1 + sozSql_Login(uint64(*m.Exp))
	}
	if m.SkillPoint != nil {
		n += 1 + sozSql_Login(uint64(*m.SkillPoint))
	}
	if m.VipLevel != nil {
		n += 1 + sozSql_Login(uint64(*m.VipLevel))
	}
	if m.PlayerId != nil {
		l = len(m.PlayerId)
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.MoveSpeed != nil {
		n += 2 + sozSql_Login(uint64(*m.MoveSpeed))
	}
	if m.ToLeft != nil {
		n += 3
	}
	if m.GmInfo != nil {
		l = m.GmInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.EquipFixBag != nil {
		l = m.EquipFixBag.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.BagItemInfo != nil {
		l = m.BagItemInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.BagEquipInfo != nil {
		l = m.BagEquipInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.EquipInfo != nil {
		l = m.EquipInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SuitInfo != nil {
		l = m.SuitInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.FaceInfo != nil {
		l = m.FaceInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.TalentSkills != nil {
		l = m.TalentSkills.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.BookSkills != nil {
		l = m.BookSkills.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SuitSkills != nil {
		l = m.SuitSkills.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.FriendInfo != nil {
		l = m.FriendInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.PetInfo != nil {
		l = m.PetInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.RiskInfo != nil {
		l = m.RiskInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.TaskInfo != nil {
		l = m.TaskInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SuccessInfo != nil {
		l = m.SuccessInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.GuideInfo != nil {
		l = m.GuideInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SystemConfig != nil {
		l = m.SystemConfig.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.RoleTimeStampList != nil {
		l = m.RoleTimeStampList.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.DbCardInfo != nil {
		l = m.DbCardInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.CardInfo != nil {
		l = m.CardInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ArenaKill != nil {
		l = m.ArenaKill.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ArenaInfo != nil {
		l = m.ArenaInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SwordInfo != nil {
		l = m.SwordInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.DailyTaskInfo != nil {
		l = m.DailyTaskInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ActivityInfo != nil {
		l = m.ActivityInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.LoginTimeInfo != nil {
		l = m.LoginTimeInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.MinigameInfo != nil {
		l = m.MinigameInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.StaminaInfo != nil {
		l = m.StaminaInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ManagerFriend != nil {
		l = m.ManagerFriend.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SignInfo != nil {
		l = m.SignInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.SevenDay != nil {
		l = m.SevenDay.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.PointGold != nil {
		l = m.PointGold.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.FriendAssist != nil {
		l = m.FriendAssist.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.PersonEasterEgg != nil {
		l = m.PersonEasterEgg.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.RechargeMoney != nil {
		l = m.RechargeMoney.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.OldDriverInfo != nil {
		l = m.OldDriverInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.CountInfo != nil {
		l = m.CountInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.HomeInfo != nil {
		l = m.HomeInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.DanmakuInfo != nil {
		l = m.DanmakuInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.InteractInfo != nil {
		l = m.InteractInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.MailInfo != nil {
		l = m.MailInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if len(m.ButtonInfo) > 0 {
		for _, e := range m.ButtonInfo {
			l = e.Size()
			n += 2 + l + sovSql_Login(uint64(l))
		}
	}
	if m.Guadratic != nil {
		l = m.Guadratic.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ShareInfo != nil {
		l = m.ShareInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.Activity != nil {
		l = m.Activity.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.CombinationSkill != nil {
		l = m.CombinationSkill.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.OpenInfo != nil {
		l = m.OpenInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.CommonShop != nil {
		l = m.CommonShop.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.VersionUpdate != nil {
		l = m.VersionUpdate.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.MemoryInfo != nil {
		l = m.MemoryInfo.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ExtendAttr1 != nil {
		l = m.ExtendAttr1.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ExtendAttr2 != nil {
		l = m.ExtendAttr2.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ExtendAttr3 != nil {
		l = m.ExtendAttr3.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ExtendAttr4 != nil {
		l = m.ExtendAttr4.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.ExtendAttr5 != nil {
		l = m.ExtendAttr5.Size()
		n += 2 + l + sovSql_Login(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BathhousePlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.RoleIndex))
	}
	if m.StatusId != nil {
		n += 1 + sozSql_Login(uint64(*m.StatusId))
	}
	if m.StatusBeginTime != nil {
		n += 1 + sozSql_Login(uint64(*m.StatusBeginTime))
	}
	if m.Fullness != nil {
		n += 1 + sozSql_Login(uint64(*m.Fullness))
	}
	if m.Stamina != nil {
		n += 1 + sozSql_Login(uint64(*m.Stamina))
	}
	if m.Exp != nil {
		n += 1 + sozSql_Login(uint64(*m.Exp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SqlFriendMngInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sovSql_Login(uint64(*m.RoleIndex))
	}
	if m.ReqRoleIndex != nil {
		n += 1 + sovSql_Login(uint64(*m.ReqRoleIndex))
	}
	if m.ReqFriendInfo != nil {
		l = m.ReqFriendInfo.Size()
		n += 1 + l + sovSql_Login(uint64(l))
	}
	if m.ReqType != nil {
		n += 1 + sovSql_Login(uint64(*m.ReqType))
	}
	if m.ReqTime != nil {
		n += 1 + sovSql_Login(uint64(*m.ReqTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SqlResultSaveRole) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovSql_Login(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DailyActivityChangeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TotalActivity != nil {
		n += 1 + sozSql_Login(uint64(*m.TotalActivity))
	}
	if m.ActivityDiff != nil {
		n += 1 + sozSql_Login(uint64(*m.ActivityDiff))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SqlRetClusterNodeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NodeIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.NodeIndex))
	}
	if m.Intaddr != nil {
		n += 1 + sozSql_Login(uint64(*m.Intaddr))
	}
	if m.UnitNextIndex != nil {
		n += 1 + sozSql_Login(uint64(*m.UnitNextIndex))
	}
	if m.CpuPressure != nil {
		n += 1 + sozSql_Login(uint64(*m.CpuPressure))
	}
	if m.IsOnline != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleInteractInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Energy != nil {
		n += 1 + sozSql_Login(uint64(*m.Energy))
	}
	if m.GetEnergyId != nil {
		n += 1 + sozSql_Login(uint64(*m.GetEnergyId))
	}
	if m.GetRewardId != nil {
		n += 1 + sozSql_Login(uint64(*m.GetRewardId))
	}
	if len(m.ActIdList) > 0 {
		for _, e := range m.ActIdList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.ActiveActList) > 0 {
		for _, e := range m.ActiveActList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.AutoActList) > 0 {
		for _, e := range m.AutoActList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if len(m.CanUnlockActList) > 0 {
		for _, e := range m.CanUnlockActList {
			n += 1 + sozSql_Login(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSql_Login(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSql_Login(x uint64) (n int) {
	return sovSql_Login(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SuitGoodsInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: suit_goods_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: suit_goods_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanBuySuitShopId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.CanBuySuitShopId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsBuy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsBuy = &b
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SuitInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: suit_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: suit_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SuitId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitUnixtimeTimeOutStamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.SuitUnixtimeTimeOutStamp = &v2
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitDurationType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SuitDurationType = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.GetTimestamp = &v2
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleSuitInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_suit_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_suit_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuySuit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuySuit = append(m.BuySuit, &SuitGoodsInfo{})
			if err := m.BuySuit[len(m.BuySuit)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitShopLastUpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.SuitShopLastUpdateTime = &v2
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSuit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentSuit == nil {
				m.CurrentSuit = &SuitInfo{}
			}
			if err := m.CurrentSuit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveSuits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HaveSuits = append(m.HaveSuits, &SuitInfo{})
			if err := m.HaveSuits[len(m.HaveSuits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FaceGoodsInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: face_goods_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: face_goods_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanBuyFaceShopId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.CanBuyFaceShopId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsBuy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsBuy = &b
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopIndex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FaceShopIndex = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FaceInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: face_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: face_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FaceId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceUnixtimeTimeOutStamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.FaceUnixtimeTimeOutStamp = &v2
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceDurationType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FaceDurationType = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.GetTimestamp = &v2
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleCommonShop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_common_shop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_common_shop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopList = append(m.ShopList, &CommonShopInfo{})
			if err := m.ShopList[len(m.ShopList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListSignInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_sign_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_sign_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignYear", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SignYear = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignMonth", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SignMonth = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MonthTotalDays", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MonthTotalDays = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignBeginDay", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SignBeginDay = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextSignDay", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.NextSignDay = &v
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SignCount = &v
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetroactiveCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RetroactiveCount = &v
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LotteryDays", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.LotteryDays = &v
			hasFields[0] |= uint64(0x00000080)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MissCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MissCount = &v
			hasFields[0] |= uint64(0x00000100)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshMonthDay", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.RefreshMonthDay = &v
			hasFields[0] |= uint64(0x00000200)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TodaySign", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.TodaySign = &b
			hasFields[0] |= uint64(0x00000400)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000200) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000400) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SevenDayDetail) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: seven_day_detail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: seven_day_detail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Day", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Day = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetFlag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.GetFlag = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SevenDayInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: seven_day_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: seven_day_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalLoginDays", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TotalLoginDays = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DayInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DayInfo = append(m.DayInfo, &SevenDayDetail{})
			if err := m.DayInfo[len(m.DayInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RiskInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: risk_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: risk_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Passed", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Passed = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FightCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FightCount = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ResetCount = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareFlag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ShareFlag = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RewardBox) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: reward_box: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: reward_box: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Get", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Get = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChapterInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: chapter_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: chapter_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Dup = append(m.Dup, &RiskInfo{})
			if err := m.Dup[len(m.Dup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Box", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Box = append(m.Box, &RewardBox{})
			if err := m.Box[len(m.Box)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetReward", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.GetReward = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleFacePreferInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_face_prefer_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_face_prefer_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoShowFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.AutoShowFlag = &b
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.FaceList = append(m.FaceList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FaceList) == 0 {
					m.FaceList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.FaceList = append(m.FaceList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListFaceShopInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_face_shop_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_face_shop_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalBuyFace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalBuyFace = append(m.OriginalBuyFace, &FaceGoodsInfo{})
			if err := m.OriginalBuyFace[len(m.OriginalBuyFace)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscountBuyFace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DiscountBuyFace = append(m.DiscountBuyFace, &FaceGoodsInfo{})
			if err := m.DiscountBuyFace[len(m.DiscountBuyFace)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopLastUpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.FaceShopLastUpdateTime = &v2
			hasFields[0] |= uint64(0x00000001)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopLastManualUpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.FaceShopLastManualUpdateTime = &v2
			hasFields[0] |= uint64(0x00000002)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopManualUpdateCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FaceShopManualUpdateCount = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleFaceInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_face_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_face_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalBuyFace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalBuyFace = append(m.OriginalBuyFace, &FaceGoodsInfo{})
			if err := m.OriginalBuyFace[len(m.OriginalBuyFace)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscountBuyFace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DiscountBuyFace = append(m.DiscountBuyFace, &FaceGoodsInfo{})
			if err := m.DiscountBuyFace[len(m.DiscountBuyFace)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopLastUpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.FaceShopLastUpdateTime = &v2
			hasFields[0] |= uint64(0x00000001)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopLastManualUpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.FaceShopLastManualUpdateTime = &v2
			hasFields[0] |= uint64(0x00000002)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopManualUpdateCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FaceShopManualUpdateCount = &v
			hasFields[0] |= uint64(0x00000004)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveFaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HaveFaces = append(m.HaveFaces, &FaceInfo{})
			if err := m.HaveFaces[len(m.HaveFaces)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreferInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PreferInfo == nil {
				m.PreferInfo = &RoleFacePreferInfo{}
			}
			if err := m.PreferInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomList = append(m.CustomList, &RoleCustomFace{})
			if err := m.CustomList[len(m.CustomList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentFace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentFace == nil {
				m.CurrentFace = &RoleFace{}
			}
			if err := m.CurrentFace.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForeverFree", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ForeverFree = &b
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbSkillInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_skill_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_skill_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Id = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Level = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Skilled", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Skilled = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbArenaInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_arena_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_arena_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.BuyCount = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TotalCount = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeftCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.LeftCount = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdTimeStamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.CdTimeStamp = &v2
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.CdTime = &v2
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.Score = &v2
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryTopRank", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.HistoryTopRank = &v
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BattleInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BattleInfo == nil {
				m.BattleInfo = &BattlePlayerInfo{}
			}
			if err := m.BattleInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FightRank", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FightRank = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbSwordInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_sword_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_sword_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TotalCount = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailedCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FailedCount = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeftCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.LeftCount = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.BuyCount = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.CdTime = &v2
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.JoinCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleTalentSkillInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_talent_skill_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_talent_skill_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveSkills", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HaveSkills = append(m.HaveSkills, &DbSkillInfo{})
			if err := m.HaveSkills[len(m.HaveSkills)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CurrentSkills = append(m.CurrentSkills, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CurrentSkills) == 0 {
					m.CurrentSkills = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CurrentSkills = append(m.CurrentSkills, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSkills", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleBookSkillInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_book_skill_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_book_skill_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveSkills", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HaveSkills = append(m.HaveSkills, &DbSkillInfo{})
			if err := m.HaveSkills[len(m.HaveSkills)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CurrentSkills = append(m.CurrentSkills, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CurrentSkills) == 0 {
					m.CurrentSkills = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CurrentSkills = append(m.CurrentSkills, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSkills", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleSuitSkillInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_suit_skill_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_suit_skill_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveSkills", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HaveSkills = append(m.HaveSkills, &DbSkillInfo{})
			if err := m.HaveSkills[len(m.HaveSkills)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CurrentSkills = append(m.CurrentSkills, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CurrentSkills) == 0 {
					m.CurrentSkills = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CurrentSkills = append(m.CurrentSkills, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSkills", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleFriendInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_friend_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_friend_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friends = append(m.Friends, &DbFriendInfo{})
			if err := m.Friends[len(m.Friends)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FightCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FightCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleRiskInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_risk_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_risk_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chaps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chaps = append(m.Chaps, &ChapterInfo{})
			if err := m.Chaps[len(m.Chaps)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChapsDanger", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChapsDanger = append(m.ChapsDanger, &ChapterInfo{})
			if err := m.ChapsDanger[len(m.ChapsDanger)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_task: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_task: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CompletedTaskList = append(m.CompletedTaskList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CompletedTaskList) == 0 {
					m.CompletedTaskList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CompletedTaskList = append(m.CompletedTaskList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletedTaskList", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanAcceptTaskList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CanAcceptTaskList = append(m.CanAcceptTaskList, &TaskInfo{})
			if err := m.CanAcceptTaskList[len(m.CanAcceptTaskList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AcceptedTaskList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AcceptedTaskList = append(m.AcceptedTaskList, &TaskInfo{})
			if err := m.AcceptedTaskList[len(m.AcceptedTaskList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleSuccessInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_success_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_success_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DetailList = append(m.DetailList, &SuccessDetail{})
			if err := m.DetailList[len(m.DetailList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.ReachIdList = append(m.ReachIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ReachIdList) == 0 {
					m.ReachIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.ReachIdList = append(m.ReachIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ReachIdList", wireType)
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.GotIdList = append(m.GotIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.GotIdList) == 0 {
					m.GotIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.GotIdList = append(m.GotIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field GotIdList", wireType)
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Point", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.Point = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleGuideInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_guide_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_guide_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FindGuidIndex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FindGuidIndex = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceGuideIndex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ForceGuideIndex = &v
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.TipReadIdList = append(m.TipReadIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TipReadIdList) == 0 {
					m.TipReadIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.TipReadIdList = append(m.TipReadIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TipReadIdList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbRoleSystemConfig) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_role_system_config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_role_system_config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LanguageId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.LanguageId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.MusicEnabled = &b
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoundEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SoundEnabled = &b
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field MusicVolume", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.MusicVolume = &v2
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoundVolume", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.SoundVolume = &v2
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelmetVisible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.HelmetVisible = &b
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherPlayerVisible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.OtherPlayerVisible = &b
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandAssistFriend", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RandAssistFriend = &b
			hasFields[0] |= uint64(0x00000080)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarNameVisible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.CarNameVisible = &b
			hasFields[0] |= uint64(0x00000100)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RockEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RockEnabled = &b
			hasFields[0] |= uint64(0x00000200)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BattleSpeedEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.BattleSpeedEnabled = &b
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgmId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.BgmId = &v
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitHeadVisible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SuitHeadVisible = &b
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000200) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDbRoleTimeStamp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_db_role_time_stamp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_db_role_time_stamp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceShopLastUpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.FaceShopLastUpdateTime = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbLoginRoleTime) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_login_role_time: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_login_role_time: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDayFirstLogin", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastDayFirstLogin = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastOfflineTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastOfflineTime = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentLoginTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentLoginTime = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalOnlineTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalOnlineTime = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalLoginDays", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalLoginDays = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalLoginCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalLoginCount = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContinuityDays", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContinuityDays = &v
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxContinuityDays", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxContinuityDays = &v
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreateTime = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbStaminaInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_stamina_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_stamina_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyStaminaCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.BuyStaminaCount = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaminaUpperLimit", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.StaminaUpperLimit = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StiminaLeftTime", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StiminaLeftTime = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastStaminaRecvStamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastStaminaRecvStamp = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastStaminaTickTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastStaminaTickTime = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastBathStaminaTickTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastBathStaminaTickTime = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BathStaminaRecoveryValue", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BathStaminaRecoveryValue = &v
		case 8:
			if wireType == 0 {
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BathOnceTimeRecovery = append(m.BathOnceTimeRecovery, bool(v != 0))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				elementCount = packedLen
				if elementCount != 0 && len(m.BathOnceTimeRecovery) == 0 {
					m.BathOnceTimeRecovery = make([]bool, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BathOnceTimeRecovery = append(m.BathOnceTimeRecovery, bool(v != 0))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BathOnceTimeRecovery", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDailyTaskInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_daily_task_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_daily_task_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyTaskInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DailyTaskInfo = append(m.DailyTaskInfo, &DbDailyTaskInfo{})
			if err := m.DailyTaskInfo[len(m.DailyTaskInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleinfoExtendAttr_1) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: roleinfo_extend_attr_1: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: roleinfo_extend_attr_1: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TestData", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TestData = &v2
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EggId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.EggId = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryRedeemCode", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HistoryRedeemCode = append(m.HistoryRedeemCode, make([]byte, postIndex-iNdEx))
			copy(m.HistoryRedeemCode[len(m.HistoryRedeemCode)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeixinShareFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.WeixinShareFlag = &b
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BathhouseTool) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bathhouse_tool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bathhouse_tool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToolType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ToolType = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToolId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ToolId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.UseCount = &v
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuadraticInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: guadratic_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: guadratic_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeftEnterCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.LeftEnterCount = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleinfoExtendAttr_2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: roleinfo_extend_attr_2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: roleinfo_extend_attr_2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendFightInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FriendFightInfo == nil {
				m.FriendFightInfo = &VisitingCardInfo{}
			}
			if err := m.FriendFightInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgressList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProgressList = append(m.ProgressList, &TaskProgressInfo{})
			if err := m.ProgressList[len(m.ProgressList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.TaskIdList = append(m.TaskIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TaskIdList) == 0 {
					m.TaskIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.TaskIdList = append(m.TaskIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskIdList", wireType)
			}
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.OnceTaskList = append(m.OnceTaskList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OnceTaskList) == 0 {
					m.OnceTaskList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.OnceTaskList = append(m.OnceTaskList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OnceTaskList", wireType)
			}
		case 5:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
				m.FunctionPtr = append(m.FunctionPtr, int64(v))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FunctionPtr) == 0 {
					m.FunctionPtr = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
					m.FunctionPtr = append(m.FunctionPtr, int64(v))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FunctionPtr", wireType)
			}
		case 6:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.BrokenList = append(m.BrokenList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.BrokenList) == 0 {
					m.BrokenList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.BrokenList = append(m.BrokenList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BrokenList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleinfoExtendAttr_3) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: roleinfo_extend_attr_3: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: roleinfo_extend_attr_3: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TestData", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TestData = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleinfoExtendAttr_4) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: roleinfo_extend_attr_4: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: roleinfo_extend_attr_4: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TestData", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TestData = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleinfoExtendAttr_5) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: roleinfo_extend_attr_5: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: roleinfo_extend_attr_5: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleCardInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_card_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_card_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CurrentCardPveList = append(m.CurrentCardPveList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CurrentCardPveList) == 0 {
					m.CurrentCardPveList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CurrentCardPveList = append(m.CurrentCardPveList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentCardPveList", wireType)
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CurrentCardPvpList = append(m.CurrentCardPvpList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CurrentCardPvpList) == 0 {
					m.CurrentCardPvpList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CurrentCardPvpList = append(m.CurrentCardPvpList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentCardPvpList", wireType)
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.HaveCardList = append(m.HaveCardList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.HaveCardList) == 0 {
					m.HaveCardList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.HaveCardList = append(m.HaveCardList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field HaveCardList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PointGoldInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: point_gold_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: point_gold_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExchangedCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExchangedCount = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendManagerInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: friend_manager_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: friend_manager_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friends", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friends = append(m.Friends, &SqlFriendMngInfo{})
			if err := m.Friends[len(m.Friends)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArenaKillInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: arena_kill_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: arena_kill_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KillPlayer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KillPlayer = append(m.KillPlayer, &DbArenaKillInfo{})
			if err := m.KillPlayer[len(m.KillPlayer)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendAssistInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: friend_assist_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: friend_assist_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeftAssistTime", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.LeftAssistTime = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssistTimeStamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.AssistTimeStamp = &v2
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListFriendAssistInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_friend_assist_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_friend_assist_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssistInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssistInfo = append(m.AssistInfo, &FriendAssistInfo{})
			if err := m.AssistInfo[len(m.AssistInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonEasterEggInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: person_easter_egg_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: person_easter_egg_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EggId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.EggId = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdTime", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.CdTime = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Count = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TriggerCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TriggerCount = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DayGetCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.DayGetCount = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstTouch", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.FirstTouch = &b
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListPersonEasterEgg) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: list_person_easter_egg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: list_person_easter_egg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EggTimeStamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.EggTimeStamp = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EggInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EggInfo = append(m.EggInfo, &PersonEasterEggInfo{})
			if err := m.EggInfo[len(m.EggInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RechargeMoneyInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: recharge_money_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: recharge_money_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalMoney", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TotalMoney = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrMoneyExp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.CurrMoneyExp = &v2
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyRewardFlag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.DailyRewardFlag = &b
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.SaleId = append(m.SaleId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.SaleId) == 0 {
					m.SaleId = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.SaleId = append(m.SaleId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SaleId", wireType)
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.VipLevelFlag = append(m.VipLevelFlag, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.VipLevelFlag) == 0 {
					m.VipLevelFlag = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.VipLevelFlag = append(m.VipLevelFlag, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field VipLevelFlag", wireType)
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalGetDiamond", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TotalGetDiamond = &v2
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstRecharge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstRecharge == nil {
				m.FirstRecharge = &RoleRechargeGet{}
			}
			if err := m.FirstRecharge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherRecharge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OtherRecharge == nil {
				m.OtherRecharge = &RoleRechargeGet{}
			}
			if err := m.OtherRecharge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleShowFlag) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_show_flag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_show_flag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelmetVisible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.HelmetVisible = &b
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgmId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.BgmId = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitHeadVisible", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SuitHeadVisible = &b
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TempInfoInMemory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: temp_info_in_memory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: temp_info_in_memory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsOnEnterGame", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsOnEnterGame = &b
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldPosX", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.OldPosX = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldPosY", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.OldPosY = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldSceneId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.OldSceneId = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MgRoomId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MgRoomId = &v
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BigBig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BigBig = append(m.BigBig, &SpInfo{})
			if err := m.BigBig[len(m.BigBig)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowFlag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShowFlag == nil {
				m.ShowFlag = &RoleShowFlag{}
			}
			if err := m.ShowFlag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Risk", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Risk == nil {
				m.Risk = &FightRiskInfo{}
			}
			if err := m.Risk.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsUtf8", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.IsUtf8 = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbRolePetInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_role_pet_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_role_pet_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PetList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PetList = append(m.PetList, &PetInfo{})
			if err := m.PetList[len(m.PetList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.OncePetIdList = append(m.OncePetIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OncePetIdList) == 0 {
					m.OncePetIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.OncePetIdList = append(m.OncePetIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OncePetIdList", wireType)
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RefreshInfo == nil {
				m.RefreshInfo = &PetRefresh{}
			}
			if err := m.RefreshInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FightPetId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.FightPetId = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleServerMail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_server_mail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_server_mail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MailId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ButtonCd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: button_cd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: button_cd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
				m.Cd = append(m.Cd, int64(v))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Cd) == 0 {
					m.Cd = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
					m.Cd = append(m.Cd, int64(v))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Cd", wireType)
			}
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
				m.CdTimestamp = append(m.CdTimestamp, int64(v))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CdTimestamp) == 0 {
					m.CdTimestamp = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
					m.CdTimestamp = append(m.CdTimestamp, int64(v))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CdTimestamp", wireType)
			}
		case 3:
			if wireType == 0 {
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FirstTouch = append(m.FirstTouch, bool(v != 0))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				elementCount = packedLen
				if elementCount != 0 && len(m.FirstTouch) == 0 {
					m.FirstTouch = make([]bool, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FirstTouch = append(m.FirstTouch, bool(v != 0))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstTouch", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WwwShareInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: www_share_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: www_share_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.RiskIdList = append(m.RiskIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RiskIdList) == 0 {
					m.RiskIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.RiskIdList = append(m.RiskIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RiskIdList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServerGmInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: server_gm_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: server_gm_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanSpeak", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.CanSpeak = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextSpeakTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.NextSpeakTime = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServerUpdateInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: server_update_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: server_update_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FightInitBug", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.FightInitBug = &b
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FixEquipExistBug", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.FixEquipExistBug = &b
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleActivityInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_activity_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_activity_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActivityList = append(m.ActivityList, &ActivityInfo{})
			if err := m.ActivityList[len(m.ActivityList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SqlResultRoleinfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sql_result_roleinfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sql_result_roleinfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = append(m.Account[:0], dAtA[iNdEx:postIndex]...)
			if m.Account == nil {
				m.Account = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Gender = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = append(m.NickName[:0], dAtA[iNdEx:postIndex]...)
			if m.NickName == nil {
				m.NickName = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Level = &v
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SceneId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SceneId = &v
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosX", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.PosX = &v
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PosY", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.PosY = &v
			hasFields[0] |= uint64(0x00000080)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameCoin", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.GameCoin = &v2
			hasFields[0] |= uint64(0x00000100)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endurance", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.Endurance = &v2
			hasFields[0] |= uint64(0x00000200)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiamondCoin", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.DiamondCoin = &v2
			hasFields[0] |= uint64(0x00000400)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.Exp = &v2
			hasFields[0] |= uint64(0x00000800)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkillPoint", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.SkillPoint = &v2
			hasFields[0] |= uint64(0x00001000)
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipLevel", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.VipLevel = &v
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerId = append(m.PlayerId[:0], dAtA[iNdEx:postIndex]...)
			if m.PlayerId == nil {
				m.PlayerId = []byte{}
			}
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveSpeed", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MoveSpeed = &v
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToLeft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ToLeft = &b
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GmInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GmInfo == nil {
				m.GmInfo = &ServerGmInfo{}
			}
			if err := m.GmInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipFixBag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EquipFixBag == nil {
				m.EquipFixBag = &ListDbFixEquips{}
			}
			if err := m.EquipFixBag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BagItemInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BagItemInfo == nil {
				m.BagItemInfo = &ListDbBagItems{}
			}
			if err := m.BagItemInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BagEquipInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BagEquipInfo == nil {
				m.BagEquipInfo = &ListDbBagEquips{}
			}
			if err := m.BagEquipInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EquipInfo == nil {
				m.EquipInfo = &ListDbRoleEquips{}
			}
			if err := m.EquipInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SuitInfo == nil {
				m.SuitInfo = &ListDbRoleSuitInfo{}
			}
			if err := m.SuitInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FaceInfo == nil {
				m.FaceInfo = &ListDbRoleFaceInfo{}
			}
			if err := m.FaceInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TalentSkills", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TalentSkills == nil {
				m.TalentSkills = &ListDbRoleTalentSkillInfo{}
			}
			if err := m.TalentSkills.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BookSkills", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BookSkills == nil {
				m.BookSkills = &ListDbRoleBookSkillInfo{}
			}
			if err := m.BookSkills.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 59:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuitSkills", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SuitSkills == nil {
				m.SuitSkills = &ListDbRoleSuitSkillInfo{}
			}
			if err := m.SuitSkills.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FriendInfo == nil {
				m.FriendInfo = &ListDbRoleFriendInfo{}
			}
			if err := m.FriendInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 61:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PetInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PetInfo == nil {
				m.PetInfo = &DbRolePetInfo{}
			}
			if err := m.PetInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RiskInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RiskInfo == nil {
				m.RiskInfo = &ListDbRoleRiskInfo{}
			}
			if err := m.RiskInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 63:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskInfo == nil {
				m.TaskInfo = &DbTask{}
			}
			if err := m.TaskInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 64:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuccessInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SuccessInfo == nil {
				m.SuccessInfo = &ListDbRoleSuccessInfo{}
			}
			if err := m.SuccessInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 65:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuideInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuideInfo == nil {
				m.GuideInfo = &ListDbRoleGuideInfo{}
			}
			if err := m.GuideInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 66:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SystemConfig == nil {
				m.SystemConfig = &DbRoleSystemConfig{}
			}
			if err := m.SystemConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 67:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleTimeStampList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoleTimeStampList == nil {
				m.RoleTimeStampList = &ListDbRoleTimeStamp{}
			}
			if err := m.RoleTimeStampList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 68:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DbCardInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DbCardInfo == nil {
				m.DbCardInfo = &VisitingCardInfo{}
			}
			if err := m.DbCardInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 69:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CardInfo == nil {
				m.CardInfo = &RoleCardInfo{}
			}
			if err := m.CardInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArenaKill", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ArenaKill == nil {
				m.ArenaKill = &ArenaKillInfo{}
			}
			if err := m.ArenaKill.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 71:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArenaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ArenaInfo == nil {
				m.ArenaInfo = &DbArenaInfo{}
			}
			if err := m.ArenaInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 72:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwordInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwordInfo == nil {
				m.SwordInfo = &DbSwordInfo{}
			}
			if err := m.SwordInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 73:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyTaskInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DailyTaskInfo == nil {
				m.DailyTaskInfo = &ListDailyTaskInfo{}
			}
			if err := m.DailyTaskInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 74:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ActivityInfo == nil {
				m.ActivityInfo = &DbDailyActivityInfo{}
			}
			if err := m.ActivityInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 75:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginTimeInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LoginTimeInfo == nil {
				m.LoginTimeInfo = &DbLoginRoleTime{}
			}
			if err := m.LoginTimeInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 76:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinigameInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinigameInfo == nil {
				m.MinigameInfo = &MinigamePlayInfo{}
			}
			if err := m.MinigameInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 77:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaminaInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StaminaInfo == nil {
				m.StaminaInfo = &DbStaminaInfo{}
			}
			if err := m.StaminaInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 78:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManagerFriend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ManagerFriend == nil {
				m.ManagerFriend = &FriendManagerInfo{}
			}
			if err := m.ManagerFriend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 79:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SignInfo == nil {
				m.SignInfo = &ListSignInfo{}
			}
			if err := m.SignInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 80:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SevenDay", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SevenDay == nil {
				m.SevenDay = &SevenDayInfo{}
			}
			if err := m.SevenDay.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 81:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PointGold", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PointGold == nil {
				m.PointGold = &PointGoldInfo{}
			}
			if err := m.PointGold.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 82:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendAssist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FriendAssist == nil {
				m.FriendAssist = &ListFriendAssistInfo{}
			}
			if err := m.FriendAssist.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 83:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PersonEasterEgg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PersonEasterEgg == nil {
				m.PersonEasterEgg = &ListPersonEasterEgg{}
			}
			if err := m.PersonEasterEgg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 84:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RechargeMoney", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RechargeMoney == nil {
				m.RechargeMoney = &RechargeMoneyInfo{}
			}
			if err := m.RechargeMoney.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 85:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldDriverInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OldDriverInfo == nil {
				m.OldDriverInfo = &OldDriver{}
			}
			if err := m.OldDriverInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 86:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CountInfo == nil {
				m.CountInfo = &RoleCountInfo{}
			}
			if err := m.CountInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 87:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HomeInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HomeInfo == nil {
				m.HomeInfo = &DbHomeInfo{}
			}
			if err := m.HomeInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 88:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DanmakuInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DanmakuInfo == nil {
				m.DanmakuInfo = &DbDanmakuInfo{}
			}
			if err := m.DanmakuInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 89:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InteractInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InteractInfo == nil {
				m.InteractInfo = &RoleInteractInfo{}
			}
			if err := m.InteractInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 90:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MailInfo == nil {
				m.MailInfo = &RoleServerMail{}
			}
			if err := m.MailInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 91:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ButtonInfo = append(m.ButtonInfo, &ButtonCd{})
			if err := m.ButtonInfo[len(m.ButtonInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 92:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Guadratic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Guadratic == nil {
				m.Guadratic = &GuadraticInfo{}
			}
			if err := m.Guadratic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 93:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShareInfo == nil {
				m.ShareInfo = &WwwShareInfo{}
			}
			if err := m.ShareInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 94:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Activity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Activity == nil {
				m.Activity = &RoleActivityInfo{}
			}
			if err := m.Activity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 95:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CombinationSkill", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CombinationSkill == nil {
				m.CombinationSkill = &CombinationSkillInfo{}
			}
			if err := m.CombinationSkill.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 96:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OpenInfo == nil {
				m.OpenInfo = &RoleOpenPackage{}
			}
			if err := m.OpenInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 97:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommonShop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CommonShop == nil {
				m.CommonShop = &RoleCommonShop{}
			}
			if err := m.CommonShop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 98:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionUpdate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VersionUpdate == nil {
				m.VersionUpdate = &ServerUpdateInfo{}
			}
			if err := m.VersionUpdate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemoryInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MemoryInfo == nil {
				m.MemoryInfo = &TempInfoInMemory{}
			}
			if err := m.MemoryInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendAttr1", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendAttr1 == nil {
				m.ExtendAttr1 = &RoleinfoExtendAttr_1{}
			}
			if err := m.ExtendAttr1.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendAttr2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendAttr2 == nil {
				m.ExtendAttr2 = &RoleinfoExtendAttr_2{}
			}
			if err := m.ExtendAttr2.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 203:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendAttr3", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendAttr3 == nil {
				m.ExtendAttr3 = &RoleinfoExtendAttr_3{}
			}
			if err := m.ExtendAttr3.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 204:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendAttr4", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendAttr4 == nil {
				m.ExtendAttr4 = &RoleinfoExtendAttr_4{}
			}
			if err := m.ExtendAttr4.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendAttr5", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendAttr5 == nil {
				m.ExtendAttr5 = &RoleinfoExtendAttr_5{}
			}
			if err := m.ExtendAttr5.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000200) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000400) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000800) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00001000) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BathhousePlayer) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bathhouse_player: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bathhouse_player: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.StatusId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusBeginTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.StatusBeginTime = &v2
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fullness", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Fullness = &v
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stamina", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Stamina = &v
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Exp = &v
			hasFields[0] |= uint64(0x00000020)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SqlFriendMngInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sql_friend_mng_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sql_friend_mng_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RoleIndex = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqRoleIndex", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReqRoleIndex = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqFriendInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSql_Login
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSql_Login
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReqFriendInfo == nil {
				m.ReqFriendInfo = &DbFriendInfo{}
			}
			if err := m.ReqFriendInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReqType = &v
			hasFields[0] |= uint64(0x00000004)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqTime", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReqTime = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SqlResultSaveRole) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sql_result_save_role: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sql_result_save_role: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DailyActivityChangeInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: daily_activity_change_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: daily_activity_change_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalActivity", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.TotalActivity = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityDiff", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ActivityDiff = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SqlRetClusterNodeInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sql_ret_cluster_node_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sql_ret_cluster_node_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.NodeIndex = &v2
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Intaddr", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.Intaddr = &v2
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnitNextIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.UnitNextIndex = &v2
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuPressure", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.CpuPressure = &v2
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsOnline", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsOnline = &b
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleInteractInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: role_interact_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: role_interact_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Energy", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Energy = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetEnergyId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.GetEnergyId = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetRewardId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.GetRewardId = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.ActIdList = append(m.ActIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ActIdList) == 0 {
					m.ActIdList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.ActIdList = append(m.ActIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ActIdList", wireType)
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.ActiveActList = append(m.ActiveActList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ActiveActList) == 0 {
					m.ActiveActList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.ActiveActList = append(m.ActiveActList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveActList", wireType)
			}
		case 6:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.AutoActList = append(m.AutoActList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AutoActList) == 0 {
					m.AutoActList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.AutoActList = append(m.AutoActList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoActList", wireType)
			}
		case 7:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.CanUnlockActList = append(m.CanUnlockActList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSql_Login
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSql_Login
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CanUnlockActList) == 0 {
					m.CanUnlockActList = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSql_Login
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.CanUnlockActList = append(m.CanUnlockActList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CanUnlockActList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSql_Login(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSql_Login
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSql_Login(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSql_Login
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSql_Login
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSql_Login
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthSql_Login
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowSql_Login
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipSql_Login(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthSql_Login
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthSql_Login = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSql_Login   = fmt.Errorf("proto: integer overflow")
)
