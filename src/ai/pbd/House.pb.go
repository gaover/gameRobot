// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: House.proto

package pbd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 家俱
type FurnitureInfo struct {
	Id                   *int32   `protobuf:"zigzag32,1,opt,name=id" json:"id,omitempty"`
	Count                *int64   `protobuf:"zigzag64,2,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FurnitureInfo) Reset()         { *m = FurnitureInfo{} }
func (m *FurnitureInfo) String() string { return proto.CompactTextString(m) }
func (*FurnitureInfo) ProtoMessage()    {}
func (*FurnitureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{0}
}
func (m *FurnitureInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FurnitureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FurnitureInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FurnitureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FurnitureInfo.Merge(m, src)
}
func (m *FurnitureInfo) XXX_Size() int {
	return m.Size()
}
func (m *FurnitureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FurnitureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FurnitureInfo proto.InternalMessageInfo

func (m *FurnitureInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FurnitureInfo) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 家园房间空间大小
type HomeRoomSize struct {
	SquareId             *int32   `protobuf:"zigzag32,1,opt,name=square_id" json:"square_id,omitempty"`
	MaxX                 *int32   `protobuf:"zigzag32,2,opt,name=max_x" json:"max_x,omitempty"`
	MaxY                 *int32   `protobuf:"zigzag32,3,opt,name=max_y" json:"max_y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeRoomSize) Reset()         { *m = HomeRoomSize{} }
func (m *HomeRoomSize) String() string { return proto.CompactTextString(m) }
func (*HomeRoomSize) ProtoMessage()    {}
func (*HomeRoomSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{1}
}
func (m *HomeRoomSize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HomeRoomSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HomeRoomSize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HomeRoomSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeRoomSize.Merge(m, src)
}
func (m *HomeRoomSize) XXX_Size() int {
	return m.Size()
}
func (m *HomeRoomSize) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeRoomSize.DiscardUnknown(m)
}

var xxx_messageInfo_HomeRoomSize proto.InternalMessageInfo

func (m *HomeRoomSize) GetSquareId() int32 {
	if m != nil && m.SquareId != nil {
		return *m.SquareId
	}
	return 0
}

func (m *HomeRoomSize) GetMaxX() int32 {
	if m != nil && m.MaxX != nil {
		return *m.MaxX
	}
	return 0
}

func (m *HomeRoomSize) GetMaxY() int32 {
	if m != nil && m.MaxY != nil {
		return *m.MaxY
	}
	return 0
}

type DecoratePos struct {
	X                    *int32   `protobuf:"zigzag32,1,opt,name=x" json:"x,omitempty"`
	Y                    *int32   `protobuf:"zigzag32,2,opt,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecoratePos) Reset()         { *m = DecoratePos{} }
func (m *DecoratePos) String() string { return proto.CompactTextString(m) }
func (*DecoratePos) ProtoMessage()    {}
func (*DecoratePos) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{2}
}
func (m *DecoratePos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DecoratePos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DecoratePos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DecoratePos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecoratePos.Merge(m, src)
}
func (m *DecoratePos) XXX_Size() int {
	return m.Size()
}
func (m *DecoratePos) XXX_DiscardUnknown() {
	xxx_messageInfo_DecoratePos.DiscardUnknown(m)
}

var xxx_messageInfo_DecoratePos proto.InternalMessageInfo

func (m *DecoratePos) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *DecoratePos) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

// 家俱摆放信息
type RoomDecorateInfo struct {
	Direction            *int32       `protobuf:"zigzag32,1,opt,name=direction" json:"direction,omitempty"`
	Pos                  *DecoratePos `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
	Id                   *int32       `protobuf:"zigzag32,3,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RoomDecorateInfo) Reset()         { *m = RoomDecorateInfo{} }
func (m *RoomDecorateInfo) String() string { return proto.CompactTextString(m) }
func (*RoomDecorateInfo) ProtoMessage()    {}
func (*RoomDecorateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{3}
}
func (m *RoomDecorateInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomDecorateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomDecorateInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoomDecorateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomDecorateInfo.Merge(m, src)
}
func (m *RoomDecorateInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoomDecorateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomDecorateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomDecorateInfo proto.InternalMessageInfo

func (m *RoomDecorateInfo) GetDirection() int32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *RoomDecorateInfo) GetPos() *DecoratePos {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *RoomDecorateInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 房间摆放家俱信息
type RoomFurnitureInfo struct {
	RoleIndex            *int64              `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	RoomCapacity         *HomeRoomSize       `protobuf:"bytes,2,opt,name=room_capacity" json:"room_capacity,omitempty"`
	WallDecorate         []*RoomDecorateInfo `protobuf:"bytes,3,rep,name=wall_decorate" json:"wall_decorate,omitempty"`
	WallPaper            []*RoomDecorateInfo `protobuf:"bytes,4,rep,name=wall_paper" json:"wall_paper,omitempty"`
	FloorDecorate        []*RoomDecorateInfo `protobuf:"bytes,5,rep,name=floor_decorate" json:"floor_decorate,omitempty"`
	FloorTile            []*RoomDecorateInfo `protobuf:"bytes,6,rep,name=floor_tile" json:"floor_tile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RoomFurnitureInfo) Reset()         { *m = RoomFurnitureInfo{} }
func (m *RoomFurnitureInfo) String() string { return proto.CompactTextString(m) }
func (*RoomFurnitureInfo) ProtoMessage()    {}
func (*RoomFurnitureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{4}
}
func (m *RoomFurnitureInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoomFurnitureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoomFurnitureInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoomFurnitureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomFurnitureInfo.Merge(m, src)
}
func (m *RoomFurnitureInfo) XXX_Size() int {
	return m.Size()
}
func (m *RoomFurnitureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomFurnitureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomFurnitureInfo proto.InternalMessageInfo

func (m *RoomFurnitureInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *RoomFurnitureInfo) GetRoomCapacity() *HomeRoomSize {
	if m != nil {
		return m.RoomCapacity
	}
	return nil
}

func (m *RoomFurnitureInfo) GetWallDecorate() []*RoomDecorateInfo {
	if m != nil {
		return m.WallDecorate
	}
	return nil
}

func (m *RoomFurnitureInfo) GetWallPaper() []*RoomDecorateInfo {
	if m != nil {
		return m.WallPaper
	}
	return nil
}

func (m *RoomFurnitureInfo) GetFloorDecorate() []*RoomDecorateInfo {
	if m != nil {
		return m.FloorDecorate
	}
	return nil
}

func (m *RoomFurnitureInfo) GetFloorTile() []*RoomDecorateInfo {
	if m != nil {
		return m.FloorTile
	}
	return nil
}

// 家园信息
type DbHomeInfo struct {
	Level                *int32             `protobuf:"zigzag32,1,opt,name=level" json:"level,omitempty"`
	Exp                  *int32             `protobuf:"zigzag32,2,opt,name=exp" json:"exp,omitempty"`
	DepotCapacity        *int32             `protobuf:"zigzag32,3,opt,name=depot_capacity" json:"depot_capacity,omitempty"`
	DepotExtandId        *int32             `protobuf:"zigzag32,4,opt,name=depot_extand_id" json:"depot_extand_id,omitempty"`
	DepotFurnitureList   []*FurnitureInfo   `protobuf:"bytes,5,rep,name=depot_furniture_list" json:"depot_furniture_list,omitempty"`
	RoomFurnitureList    []*FurnitureInfo   `protobuf:"bytes,6,rep,name=room_furniture_list" json:"room_furniture_list,omitempty"`
	RoomInfo             *RoomFurnitureInfo `protobuf:"bytes,7,opt,name=room_info" json:"room_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DbHomeInfo) Reset()         { *m = DbHomeInfo{} }
func (m *DbHomeInfo) String() string { return proto.CompactTextString(m) }
func (*DbHomeInfo) ProtoMessage()    {}
func (*DbHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{5}
}
func (m *DbHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DbHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbHomeInfo.Merge(m, src)
}
func (m *DbHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *DbHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DbHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DbHomeInfo proto.InternalMessageInfo

func (m *DbHomeInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DbHomeInfo) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *DbHomeInfo) GetDepotCapacity() int32 {
	if m != nil && m.DepotCapacity != nil {
		return *m.DepotCapacity
	}
	return 0
}

func (m *DbHomeInfo) GetDepotExtandId() int32 {
	if m != nil && m.DepotExtandId != nil {
		return *m.DepotExtandId
	}
	return 0
}

func (m *DbHomeInfo) GetDepotFurnitureList() []*FurnitureInfo {
	if m != nil {
		return m.DepotFurnitureList
	}
	return nil
}

func (m *DbHomeInfo) GetRoomFurnitureList() []*FurnitureInfo {
	if m != nil {
		return m.RoomFurnitureList
	}
	return nil
}

func (m *DbHomeInfo) GetRoomInfo() *RoomFurnitureInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 新房间信息
type NewRoomInfo struct {
	WallDecorate  []*RoomDecorateInfo `protobuf:"bytes,1,rep,name=wall_decorate" json:"wall_decorate,omitempty"`
	WallPaper     []*RoomDecorateInfo `protobuf:"bytes,2,rep,name=wall_paper" json:"wall_paper,omitempty"`
	FloorDecorate []*RoomDecorateInfo `protobuf:"bytes,3,rep,name=floor_decorate" json:"floor_decorate,omitempty"`
	FloorTile     []*RoomDecorateInfo `protobuf:"bytes,4,rep,name=floor_tile" json:"floor_tile,omitempty"`
	// 以下两个字段的增加,删除都是对于房间的家俱来说的,并且是汇总之后的信息
	RemoveList           []*FurnitureInfo `protobuf:"bytes,5,rep,name=remove_list" json:"remove_list,omitempty"`
	IncreaseList         []*FurnitureInfo `protobuf:"bytes,6,rep,name=increase_list" json:"increase_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NewRoomInfo) Reset()         { *m = NewRoomInfo{} }
func (m *NewRoomInfo) String() string { return proto.CompactTextString(m) }
func (*NewRoomInfo) ProtoMessage()    {}
func (*NewRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{6}
}
func (m *NewRoomInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewRoomInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoomInfo.Merge(m, src)
}
func (m *NewRoomInfo) XXX_Size() int {
	return m.Size()
}
func (m *NewRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoomInfo proto.InternalMessageInfo

func (m *NewRoomInfo) GetWallDecorate() []*RoomDecorateInfo {
	if m != nil {
		return m.WallDecorate
	}
	return nil
}

func (m *NewRoomInfo) GetWallPaper() []*RoomDecorateInfo {
	if m != nil {
		return m.WallPaper
	}
	return nil
}

func (m *NewRoomInfo) GetFloorDecorate() []*RoomDecorateInfo {
	if m != nil {
		return m.FloorDecorate
	}
	return nil
}

func (m *NewRoomInfo) GetFloorTile() []*RoomDecorateInfo {
	if m != nil {
		return m.FloorTile
	}
	return nil
}

func (m *NewRoomInfo) GetRemoveList() []*FurnitureInfo {
	if m != nil {
		return m.RemoveList
	}
	return nil
}

func (m *NewRoomInfo) GetIncreaseList() []*FurnitureInfo {
	if m != nil {
		return m.IncreaseList
	}
	return nil
}

// 同步家园等级相关信息
type S2C_SyncHomeInfo struct {
	Level                *int32        `protobuf:"zigzag32,1,opt,name=level" json:"level,omitempty"`
	Exp                  *int32        `protobuf:"zigzag32,2,opt,name=exp" json:"exp,omitempty"`
	DepotCapacity        *int32        `protobuf:"zigzag32,3,opt,name=depot_capacity" json:"depot_capacity,omitempty"`
	DepotExtandTime      *int32        `protobuf:"zigzag32,4,opt,name=depot_extand_time" json:"depot_extand_time,omitempty"`
	RoomSize             *HomeRoomSize `protobuf:"bytes,5,opt,name=room_size" json:"room_size,omitempty"`
	ExpDiff              []int32       `protobuf:"zigzag32,6,rep,name=exp_diff" json:"exp_diff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2C_SyncHomeInfo) Reset()         { *m = S2C_SyncHomeInfo{} }
func (m *S2C_SyncHomeInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_SyncHomeInfo) ProtoMessage()    {}
func (*S2C_SyncHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{7}
}
func (m *S2C_SyncHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_SyncHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_SyncHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_SyncHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_SyncHomeInfo.Merge(m, src)
}
func (m *S2C_SyncHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_SyncHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_SyncHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_SyncHomeInfo proto.InternalMessageInfo

func (m *S2C_SyncHomeInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *S2C_SyncHomeInfo) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *S2C_SyncHomeInfo) GetDepotCapacity() int32 {
	if m != nil && m.DepotCapacity != nil {
		return *m.DepotCapacity
	}
	return 0
}

func (m *S2C_SyncHomeInfo) GetDepotExtandTime() int32 {
	if m != nil && m.DepotExtandTime != nil {
		return *m.DepotExtandTime
	}
	return 0
}

func (m *S2C_SyncHomeInfo) GetRoomSize() *HomeRoomSize {
	if m != nil {
		return m.RoomSize
	}
	return nil
}

func (m *S2C_SyncHomeInfo) GetExpDiff() []int32 {
	if m != nil {
		return m.ExpDiff
	}
	return nil
}

// 同步家具信息
type S2C_Bag_FurnitureUpdate struct {
	FurnitureInfo        *FurnitureInfo `protobuf:"bytes,1,opt,name=furniture_info" json:"furniture_info,omitempty"`
	DiffCount            []int64        `protobuf:"zigzag64,2,rep,name=diff_count" json:"diff_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2C_Bag_FurnitureUpdate) Reset()         { *m = S2C_Bag_FurnitureUpdate{} }
func (m *S2C_Bag_FurnitureUpdate) String() string { return proto.CompactTextString(m) }
func (*S2C_Bag_FurnitureUpdate) ProtoMessage()    {}
func (*S2C_Bag_FurnitureUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{8}
}
func (m *S2C_Bag_FurnitureUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_Bag_FurnitureUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_Bag_FurnitureUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_Bag_FurnitureUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_Bag_FurnitureUpdate.Merge(m, src)
}
func (m *S2C_Bag_FurnitureUpdate) XXX_Size() int {
	return m.Size()
}
func (m *S2C_Bag_FurnitureUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_Bag_FurnitureUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_Bag_FurnitureUpdate proto.InternalMessageInfo

func (m *S2C_Bag_FurnitureUpdate) GetFurnitureInfo() *FurnitureInfo {
	if m != nil {
		return m.FurnitureInfo
	}
	return nil
}

func (m *S2C_Bag_FurnitureUpdate) GetDiffCount() []int64 {
	if m != nil {
		return m.DiffCount
	}
	return nil
}

// 请求指定玩家的房间信息
type C2S_OtherHomeInfo struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	TarRoleIndex         *int64   `protobuf:"zigzag64,2,opt,name=tar_role_index" json:"tar_role_index,omitempty"`
	RetIntaddr           *int64   `protobuf:"zigzag64,3,opt,name=ret_intaddr" json:"ret_intaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_OtherHomeInfo) Reset()         { *m = C2S_OtherHomeInfo{} }
func (m *C2S_OtherHomeInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_OtherHomeInfo) ProtoMessage()    {}
func (*C2S_OtherHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{9}
}
func (m *C2S_OtherHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_OtherHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_OtherHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_OtherHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_OtherHomeInfo.Merge(m, src)
}
func (m *C2S_OtherHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_OtherHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_OtherHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_OtherHomeInfo proto.InternalMessageInfo

func (m *C2S_OtherHomeInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_OtherHomeInfo) GetTarRoleIndex() int64 {
	if m != nil && m.TarRoleIndex != nil {
		return *m.TarRoleIndex
	}
	return 0
}

func (m *C2S_OtherHomeInfo) GetRetIntaddr() int64 {
	if m != nil && m.RetIntaddr != nil {
		return *m.RetIntaddr
	}
	return 0
}

type S2C_OtherHomeInfo struct {
	RetCode              *E_MSG_RET_CODE    `protobuf:"varint,1,opt,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	RoomInfo             *RoomFurnitureInfo `protobuf:"bytes,2,opt,name=room_info" json:"room_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *S2C_OtherHomeInfo) Reset()         { *m = S2C_OtherHomeInfo{} }
func (m *S2C_OtherHomeInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_OtherHomeInfo) ProtoMessage()    {}
func (*S2C_OtherHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{10}
}
func (m *S2C_OtherHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_OtherHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_OtherHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_OtherHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_OtherHomeInfo.Merge(m, src)
}
func (m *S2C_OtherHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_OtherHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_OtherHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_OtherHomeInfo proto.InternalMessageInfo

func (m *S2C_OtherHomeInfo) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

func (m *S2C_OtherHomeInfo) GetRoomInfo() *RoomFurnitureInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 玩家自己打开家园
type C2S_RoleHomeInfo struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_RoleHomeInfo) Reset()         { *m = C2S_RoleHomeInfo{} }
func (m *C2S_RoleHomeInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_RoleHomeInfo) ProtoMessage()    {}
func (*C2S_RoleHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{11}
}
func (m *C2S_RoleHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_RoleHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_RoleHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_RoleHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_RoleHomeInfo.Merge(m, src)
}
func (m *C2S_RoleHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_RoleHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_RoleHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_RoleHomeInfo proto.InternalMessageInfo

func (m *C2S_RoleHomeInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

type S2C_RoleHomeInfo struct {
	HomeInfo             *DbHomeInfo `protobuf:"bytes,1,opt,name=home_info" json:"home_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2C_RoleHomeInfo) Reset()         { *m = S2C_RoleHomeInfo{} }
func (m *S2C_RoleHomeInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_RoleHomeInfo) ProtoMessage()    {}
func (*S2C_RoleHomeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{12}
}
func (m *S2C_RoleHomeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_RoleHomeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_RoleHomeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_RoleHomeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_RoleHomeInfo.Merge(m, src)
}
func (m *S2C_RoleHomeInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_RoleHomeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_RoleHomeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_RoleHomeInfo proto.InternalMessageInfo

func (m *S2C_RoleHomeInfo) GetHomeInfo() *DbHomeInfo {
	if m != nil {
		return m.HomeInfo
	}
	return nil
}

// 购买家园商店商品
type C2S_BuyHomeShopGood struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	GoodId               *int32   `protobuf:"zigzag32,2,opt,name=good_id" json:"good_id,omitempty"`
	Count                *int32   `protobuf:"zigzag32,3,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_BuyHomeShopGood) Reset()         { *m = C2S_BuyHomeShopGood{} }
func (m *C2S_BuyHomeShopGood) String() string { return proto.CompactTextString(m) }
func (*C2S_BuyHomeShopGood) ProtoMessage()    {}
func (*C2S_BuyHomeShopGood) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{13}
}
func (m *C2S_BuyHomeShopGood) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_BuyHomeShopGood) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_BuyHomeShopGood.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_BuyHomeShopGood) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_BuyHomeShopGood.Merge(m, src)
}
func (m *C2S_BuyHomeShopGood) XXX_Size() int {
	return m.Size()
}
func (m *C2S_BuyHomeShopGood) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_BuyHomeShopGood.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_BuyHomeShopGood proto.InternalMessageInfo

func (m *C2S_BuyHomeShopGood) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_BuyHomeShopGood) GetGoodId() int32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

func (m *C2S_BuyHomeShopGood) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type S2C_BuyHomeShopGood struct {
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,1,opt,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	GoodId               *int32          `protobuf:"zigzag32,2,opt,name=good_id" json:"good_id,omitempty"`
	Count                *int32          `protobuf:"zigzag32,3,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_BuyHomeShopGood) Reset()         { *m = S2C_BuyHomeShopGood{} }
func (m *S2C_BuyHomeShopGood) String() string { return proto.CompactTextString(m) }
func (*S2C_BuyHomeShopGood) ProtoMessage()    {}
func (*S2C_BuyHomeShopGood) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{14}
}
func (m *S2C_BuyHomeShopGood) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_BuyHomeShopGood) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_BuyHomeShopGood.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_BuyHomeShopGood) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_BuyHomeShopGood.Merge(m, src)
}
func (m *S2C_BuyHomeShopGood) XXX_Size() int {
	return m.Size()
}
func (m *S2C_BuyHomeShopGood) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_BuyHomeShopGood.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_BuyHomeShopGood proto.InternalMessageInfo

func (m *S2C_BuyHomeShopGood) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

func (m *S2C_BuyHomeShopGood) GetGoodId() int32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

func (m *S2C_BuyHomeShopGood) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 购买扩张房间大小商品
type C2S_ExtendRoomSize struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_ExtendRoomSize) Reset()         { *m = C2S_ExtendRoomSize{} }
func (m *C2S_ExtendRoomSize) String() string { return proto.CompactTextString(m) }
func (*C2S_ExtendRoomSize) ProtoMessage()    {}
func (*C2S_ExtendRoomSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{15}
}
func (m *C2S_ExtendRoomSize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_ExtendRoomSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_ExtendRoomSize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_ExtendRoomSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ExtendRoomSize.Merge(m, src)
}
func (m *C2S_ExtendRoomSize) XXX_Size() int {
	return m.Size()
}
func (m *C2S_ExtendRoomSize) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ExtendRoomSize.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ExtendRoomSize proto.InternalMessageInfo

func (m *C2S_ExtendRoomSize) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

type S2C_ExtendRoomSize struct {
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,1,opt,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_ExtendRoomSize) Reset()         { *m = S2C_ExtendRoomSize{} }
func (m *S2C_ExtendRoomSize) String() string { return proto.CompactTextString(m) }
func (*S2C_ExtendRoomSize) ProtoMessage()    {}
func (*S2C_ExtendRoomSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{16}
}
func (m *S2C_ExtendRoomSize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_ExtendRoomSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_ExtendRoomSize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_ExtendRoomSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ExtendRoomSize.Merge(m, src)
}
func (m *S2C_ExtendRoomSize) XXX_Size() int {
	return m.Size()
}
func (m *S2C_ExtendRoomSize) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ExtendRoomSize.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ExtendRoomSize proto.InternalMessageInfo

func (m *S2C_ExtendRoomSize) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

// 仓库卖出商品
type C2S_HomeDepotSell struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	ItemId               *int32   `protobuf:"zigzag32,2,opt,name=item_id" json:"item_id,omitempty"`
	ItemCount            *int32   `protobuf:"zigzag32,3,opt,name=item_count" json:"item_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_HomeDepotSell) Reset()         { *m = C2S_HomeDepotSell{} }
func (m *C2S_HomeDepotSell) String() string { return proto.CompactTextString(m) }
func (*C2S_HomeDepotSell) ProtoMessage()    {}
func (*C2S_HomeDepotSell) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{17}
}
func (m *C2S_HomeDepotSell) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_HomeDepotSell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_HomeDepotSell.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_HomeDepotSell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_HomeDepotSell.Merge(m, src)
}
func (m *C2S_HomeDepotSell) XXX_Size() int {
	return m.Size()
}
func (m *C2S_HomeDepotSell) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_HomeDepotSell.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_HomeDepotSell proto.InternalMessageInfo

func (m *C2S_HomeDepotSell) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_HomeDepotSell) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *C2S_HomeDepotSell) GetItemCount() int32 {
	if m != nil && m.ItemCount != nil {
		return *m.ItemCount
	}
	return 0
}

type S2C_HomeDepotSell struct {
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,1,opt,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_HomeDepotSell) Reset()         { *m = S2C_HomeDepotSell{} }
func (m *S2C_HomeDepotSell) String() string { return proto.CompactTextString(m) }
func (*S2C_HomeDepotSell) ProtoMessage()    {}
func (*S2C_HomeDepotSell) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{18}
}
func (m *S2C_HomeDepotSell) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_HomeDepotSell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_HomeDepotSell.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_HomeDepotSell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_HomeDepotSell.Merge(m, src)
}
func (m *S2C_HomeDepotSell) XXX_Size() int {
	return m.Size()
}
func (m *S2C_HomeDepotSell) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_HomeDepotSell.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_HomeDepotSell proto.InternalMessageInfo

func (m *S2C_HomeDepotSell) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

// 扩充家园仓库容量
type C2S_ExtendDepotSize struct {
	RoleIndex            *int64   `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2S_ExtendDepotSize) Reset()         { *m = C2S_ExtendDepotSize{} }
func (m *C2S_ExtendDepotSize) String() string { return proto.CompactTextString(m) }
func (*C2S_ExtendDepotSize) ProtoMessage()    {}
func (*C2S_ExtendDepotSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{19}
}
func (m *C2S_ExtendDepotSize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_ExtendDepotSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_ExtendDepotSize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_ExtendDepotSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_ExtendDepotSize.Merge(m, src)
}
func (m *C2S_ExtendDepotSize) XXX_Size() int {
	return m.Size()
}
func (m *C2S_ExtendDepotSize) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_ExtendDepotSize.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_ExtendDepotSize proto.InternalMessageInfo

func (m *C2S_ExtendDepotSize) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

type S2C_ExtendDepotSize struct {
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,1,opt,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_ExtendDepotSize) Reset()         { *m = S2C_ExtendDepotSize{} }
func (m *S2C_ExtendDepotSize) String() string { return proto.CompactTextString(m) }
func (*S2C_ExtendDepotSize) ProtoMessage()    {}
func (*S2C_ExtendDepotSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{20}
}
func (m *S2C_ExtendDepotSize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_ExtendDepotSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_ExtendDepotSize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_ExtendDepotSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_ExtendDepotSize.Merge(m, src)
}
func (m *S2C_ExtendDepotSize) XXX_Size() int {
	return m.Size()
}
func (m *S2C_ExtendDepotSize) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_ExtendDepotSize.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_ExtendDepotSize proto.InternalMessageInfo

func (m *S2C_ExtendDepotSize) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

// 上传最终房间家俱信息
type C2S_UpdateRoomInfo struct {
	RoleIndex            *int64       `protobuf:"zigzag64,1,opt,name=role_index" json:"role_index,omitempty"`
	RoomInfo             *NewRoomInfo `protobuf:"bytes,2,opt,name=room_info" json:"room_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *C2S_UpdateRoomInfo) Reset()         { *m = C2S_UpdateRoomInfo{} }
func (m *C2S_UpdateRoomInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_UpdateRoomInfo) ProtoMessage()    {}
func (*C2S_UpdateRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{21}
}
func (m *C2S_UpdateRoomInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_UpdateRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_UpdateRoomInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_UpdateRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_UpdateRoomInfo.Merge(m, src)
}
func (m *C2S_UpdateRoomInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_UpdateRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_UpdateRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_UpdateRoomInfo proto.InternalMessageInfo

func (m *C2S_UpdateRoomInfo) GetRoleIndex() int64 {
	if m != nil && m.RoleIndex != nil {
		return *m.RoleIndex
	}
	return 0
}

func (m *C2S_UpdateRoomInfo) GetRoomInfo() *NewRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type S2C_UpdateRoomInfo struct {
	RetCode              *E_MSG_RET_CODE `protobuf:"varint,1,opt,name=ret_code,enum=pbd.E_MSG_RET_CODE" json:"ret_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2C_UpdateRoomInfo) Reset()         { *m = S2C_UpdateRoomInfo{} }
func (m *S2C_UpdateRoomInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_UpdateRoomInfo) ProtoMessage()    {}
func (*S2C_UpdateRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_061af2b23dee2f71, []int{22}
}
func (m *S2C_UpdateRoomInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_UpdateRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_UpdateRoomInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_UpdateRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_UpdateRoomInfo.Merge(m, src)
}
func (m *S2C_UpdateRoomInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_UpdateRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_UpdateRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_UpdateRoomInfo proto.InternalMessageInfo

func (m *S2C_UpdateRoomInfo) GetRetCode() E_MSG_RET_CODE {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return E_MSG_RET_CODE_Msg_Ret_Code_Unknow
}

func init() {
	proto.RegisterType((*FurnitureInfo)(nil), "pbd.furniture_info")
	proto.RegisterType((*HomeRoomSize)(nil), "pbd.home_room_size")
	proto.RegisterType((*DecoratePos)(nil), "pbd.decorate_pos")
	proto.RegisterType((*RoomDecorateInfo)(nil), "pbd.room_decorate_info")
	proto.RegisterType((*RoomFurnitureInfo)(nil), "pbd.room_furniture_info")
	proto.RegisterType((*DbHomeInfo)(nil), "pbd.db_home_info")
	proto.RegisterType((*NewRoomInfo)(nil), "pbd.new_room_info")
	proto.RegisterType((*S2C_SyncHomeInfo)(nil), "pbd.S2C_SyncHomeInfo")
	proto.RegisterType((*S2C_Bag_FurnitureUpdate)(nil), "pbd.S2C_Bag_Furniture_update")
	proto.RegisterType((*C2S_OtherHomeInfo)(nil), "pbd.C2S_OtherHomeInfo")
	proto.RegisterType((*S2C_OtherHomeInfo)(nil), "pbd.S2C_OtherHomeInfo")
	proto.RegisterType((*C2S_RoleHomeInfo)(nil), "pbd.C2S_RoleHomeInfo")
	proto.RegisterType((*S2C_RoleHomeInfo)(nil), "pbd.S2C_RoleHomeInfo")
	proto.RegisterType((*C2S_BuyHomeShopGood)(nil), "pbd.C2S_BuyHomeShopGood")
	proto.RegisterType((*S2C_BuyHomeShopGood)(nil), "pbd.S2C_BuyHomeShopGood")
	proto.RegisterType((*C2S_ExtendRoomSize)(nil), "pbd.C2S_ExtendRoomSize")
	proto.RegisterType((*S2C_ExtendRoomSize)(nil), "pbd.S2C_ExtendRoomSize")
	proto.RegisterType((*C2S_HomeDepotSell)(nil), "pbd.C2S_HomeDepotSell")
	proto.RegisterType((*S2C_HomeDepotSell)(nil), "pbd.S2C_HomeDepotSell")
	proto.RegisterType((*C2S_ExtendDepotSize)(nil), "pbd.C2S_ExtendDepotSize")
	proto.RegisterType((*S2C_ExtendDepotSize)(nil), "pbd.S2C_ExtendDepotSize")
	proto.RegisterType((*C2S_UpdateRoomInfo)(nil), "pbd.C2S_UpdateRoomInfo")
	proto.RegisterType((*S2C_UpdateRoomInfo)(nil), "pbd.S2C_UpdateRoomInfo")
}

func init() { proto.RegisterFile("House.proto", fileDescriptor_061af2b23dee2f71) }

var fileDescriptor_061af2b23dee2f71 = []byte{
	// 797 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x71, 0xd3, 0x36, 0x93, 0x26, 0x8d, 0x37, 0xa8, 0x35, 0x1c, 0xa2, 0xca, 0x6a, 0xab,
	0xd0, 0x4a, 0x01, 0x72, 0x42, 0xc0, 0x85, 0xb6, 0xa1, 0xad, 0x04, 0xaa, 0x54, 0x97, 0x13, 0x48,
	0x2b, 0xd7, 0xbb, 0x69, 0x2d, 0xd9, 0x5e, 0xe3, 0xac, 0xdb, 0x84, 0xa7, 0xe0, 0x88, 0xc4, 0x85,
	0xc7, 0xe1, 0xc8, 0x23, 0xa0, 0x72, 0xe6, 0x1d, 0xd0, 0xee, 0xba, 0x49, 0x9c, 0x9f, 0x26, 0xe5,
	0xb8, 0xeb, 0xf9, 0x66, 0xbe, 0xf9, 0xbe, 0xd9, 0x31, 0x14, 0x8f, 0x58, 0xd2, 0xa1, 0x8d, 0x28,
	0x66, 0x9c, 0x21, 0x3d, 0x3a, 0x27, 0x8f, 0x4b, 0xad, 0x30, 0x09, 0x0e, 0x68, 0x5b, 0xdd, 0x59,
	0xbb, 0x50, 0x6e, 0x27, 0x71, 0xe8, 0xf1, 0x24, 0xa6, 0xd8, 0x0b, 0xdb, 0x0c, 0x01, 0xe4, 0x3c,
	0x62, 0x6a, 0x1b, 0x5a, 0xdd, 0x40, 0x25, 0xc8, 0xbb, 0x2c, 0x09, 0xb9, 0x99, 0xdb, 0xd0, 0xea,
	0xc8, 0x7a, 0x03, 0xe5, 0x4b, 0x16, 0x50, 0x1c, 0x33, 0x16, 0xe0, 0x8e, 0xf7, 0x85, 0x22, 0x03,
	0x0a, 0x9d, 0xcf, 0x89, 0x23, 0xb0, 0x43, 0x98, 0xc0, 0xe9, 0xe2, 0xae, 0xc4, 0xf4, 0x8f, 0x3d,
	0x53, 0x17, 0x47, 0x6b, 0x13, 0x56, 0x08, 0x75, 0x59, 0xec, 0x70, 0x8a, 0x23, 0xd6, 0x41, 0x05,
	0xd0, 0xba, 0x29, 0xb0, 0x00, 0x5a, 0x4f, 0x81, 0x2c, 0x1b, 0x90, 0xac, 0xd1, 0x0f, 0x95, 0xcc,
	0x0c, 0x28, 0x10, 0x2f, 0xa6, 0x2e, 0xf7, 0x58, 0x98, 0x62, 0x6a, 0xa0, 0x47, 0xac, 0x23, 0x51,
	0xc5, 0xa6, 0xd1, 0x88, 0xce, 0x49, 0x23, 0x93, 0x5e, 0x35, 0xa3, 0x4a, 0x7f, 0xcd, 0x41, 0x55,
	0x66, 0x1d, 0x69, 0x18, 0x01, 0xc4, 0xcc, 0x17, 0x07, 0x42, 0x15, 0x17, 0x84, 0x76, 0xa0, 0x24,
	0x43, 0x5d, 0x27, 0x72, 0x5c, 0x8f, 0xf7, 0xd2, 0x0a, 0x55, 0x59, 0x61, 0x44, 0x83, 0x06, 0x94,
	0xae, 0x1d, 0xdf, 0xef, 0x93, 0x35, 0xf5, 0x0d, 0xbd, 0x5e, 0x6c, 0xae, 0xcb, 0xd8, 0x09, 0x6d,
	0xec, 0x02, 0xc8, 0xf8, 0xc8, 0x89, 0x68, 0x6c, 0x2e, 0xdc, 0x1d, 0xfc, 0x14, 0xca, 0x6d, 0x9f,
	0xb1, 0x78, 0x90, 0x3d, 0x3f, 0x33, 0xbb, 0x02, 0x70, 0xcf, 0xa7, 0xe6, 0xe2, 0x9d, 0xc1, 0xd6,
	0x5f, 0x0d, 0x56, 0xc8, 0x39, 0x96, 0x0d, 0x49, 0x74, 0x09, 0xf2, 0x3e, 0xbd, 0xa2, 0x7e, 0x2a,
	0x6f, 0x11, 0x74, 0xda, 0x8d, 0x52, 0x27, 0xd7, 0xa0, 0x4c, 0x68, 0xc4, 0xf8, 0x40, 0x14, 0xa9,
	0x2b, 0x5a, 0x87, 0x55, 0x75, 0x4f, 0xbb, 0xdc, 0x09, 0x89, 0x98, 0x84, 0x05, 0xf9, 0xe1, 0x39,
	0x3c, 0x54, 0x1f, 0x06, 0x82, 0xfb, 0x5e, 0x87, 0xa7, 0x1d, 0x28, 0x2d, 0x47, 0xbc, 0x78, 0x36,
	0x66, 0x91, 0x44, 0x2c, 0x4e, 0x47, 0xec, 0x42, 0x41, 0x22, 0xc4, 0xc1, 0x5c, 0x92, 0x2e, 0x99,
	0x83, 0x76, 0xb3, 0xc1, 0xd6, 0x8f, 0x1c, 0x94, 0x42, 0x7a, 0x8d, 0xfb, 0x88, 0x71, 0xf3, 0xb4,
	0xfb, 0x98, 0x97, 0xbb, 0xaf, 0x79, 0xfa, 0x7d, 0xcc, 0x9b, 0x31, 0x1a, 0x75, 0x28, 0xc6, 0x34,
	0x60, 0x57, 0xb3, 0x55, 0xdd, 0x81, 0x92, 0x17, 0xba, 0x31, 0x75, 0x3a, 0x33, 0xf5, 0xb4, 0xbe,
	0x6b, 0x50, 0xb1, 0x9b, 0xfb, 0xd8, 0xee, 0x85, 0xee, 0x11, 0x0b, 0xe8, 0xf1, 0xff, 0x8e, 0xc5,
	0x23, 0x30, 0x32, 0x63, 0xc1, 0xbd, 0x80, 0xa6, 0x83, 0xb1, 0x9d, 0x7a, 0x26, 0x9e, 0x8f, 0x99,
	0x9f, 0xfe, 0xb2, 0x2a, 0xb0, 0x4c, 0xbb, 0x11, 0x26, 0x5e, 0xbb, 0x2d, 0x29, 0x1b, 0xd6, 0x47,
	0x30, 0x05, 0xb9, 0x3d, 0xe7, 0x02, 0xbf, 0xed, 0xf3, 0x4e, 0x22, 0xe2, 0x70, 0x8a, 0xc6, 0x56,
	0x99, 0x64, 0x3b, 0x45, 0x12, 0x04, 0x20, 0xd2, 0xe2, 0xdb, 0xf5, 0xa6, 0xd7, 0x91, 0x75, 0x06,
	0xc6, 0x7e, 0xd3, 0xc6, 0x27, 0xfc, 0x92, 0xc6, 0xfd, 0xd6, 0x27, 0x6d, 0x87, 0x35, 0x28, 0x73,
	0x27, 0xc6, 0x43, 0xf7, 0x72, 0x3f, 0xa2, 0xaa, 0x70, 0x84, 0x63, 0x2f, 0xe4, 0x0e, 0x21, 0xb1,
	0xd4, 0x01, 0x59, 0x17, 0x60, 0x08, 0xca, 0xd9, 0xac, 0x5b, 0xb0, 0x2c, 0x22, 0x5d, 0x46, 0xa8,
	0xcc, 0x59, 0x4e, 0x59, 0xb6, 0xf0, 0x7b, 0xfb, 0x10, 0x9f, 0xb6, 0xce, 0xf0, 0xfe, 0xc9, 0x41,
	0x2b, 0x3b, 0xdc, 0xb9, 0x19, 0xc3, 0xbd, 0x0d, 0x15, 0x41, 0xff, 0x94, 0xf9, 0xf4, 0x2e, 0xf6,
	0xd6, 0x0b, 0x65, 0x70, 0x26, 0x6e, 0x13, 0x0a, 0xfd, 0x25, 0x90, 0xca, 0x96, 0x6e, 0xd3, 0xa1,
	0xed, 0x60, 0x1d, 0x43, 0x55, 0x54, 0xd8, 0x4b, 0x7a, 0x02, 0x68, 0x5f, 0xb2, 0xe8, 0x90, 0x31,
	0x32, 0x51, 0xa2, 0x55, 0x58, 0xba, 0x60, 0x4c, 0x2e, 0x83, 0x5c, 0xf6, 0x57, 0xa2, 0x96, 0xf1,
	0x27, 0xa8, 0x4a, 0x23, 0x47, 0x52, 0xcd, 0xa9, 0xcb, 0xac, 0xec, 0x75, 0x40, 0x82, 0x68, 0xab,
	0xcb, 0x69, 0x48, 0x4e, 0x19, 0x0b, 0x6c, 0x31, 0x4e, 0x93, 0xc4, 0x78, 0x05, 0x48, 0xf0, 0x18,
	0x89, 0x9c, 0x8f, 0x86, 0xf5, 0x4e, 0x0d, 0x8c, 0xe8, 0xe0, 0x40, 0x8c, 0xba, 0x4d, 0x7d, 0x7f,
	0x9a, 0x1a, 0x1e, 0xa7, 0xc1, 0x80, 0x2f, 0x02, 0x90, 0x17, 0xc3, 0xa4, 0x5f, 0xaa, 0x41, 0xc9,
	0x66, 0x9b, 0x93, 0xc9, 0x13, 0xe5, 0x8c, 0x6a, 0x43, 0xa1, 0xa7, 0x75, 0xfc, 0x5a, 0x29, 0x3f,
	0x1a, 0x3a, 0x67, 0xa1, 0x13, 0xa5, 0xec, 0x07, 0xf9, 0xe4, 0x84, 0x5e, 0x53, 0x1f, 0xc9, 0xd6,
	0xf8, 0xec, 0x22, 0x99, 0x31, 0xb3, 0x80, 0x6f, 0x0d, 0x18, 0x49, 0x38, 0x1f, 0x9b, 0xbd, 0xca,
	0xcf, 0x9b, 0x9a, 0xf6, 0xeb, 0xa6, 0xa6, 0xfd, 0xbe, 0xa9, 0x69, 0xdf, 0xfe, 0xd4, 0x1e, 0xfc,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0x40, 0xb6, 0xeb, 0x98, 0xf1, 0x08, 0x00, 0x00,
}

func (m *FurnitureInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FurnitureInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FurnitureInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.Count)<<1)^uint64((*m.Count>>63))))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Id)<<1)^uint32((*m.Id>>31))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HomeRoomSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HomeRoomSize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HomeRoomSize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxY != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.MaxY)<<1)^uint32((*m.MaxY>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.MaxX != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.MaxX)<<1)^uint32((*m.MaxX>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.SquareId != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.SquareId)<<1)^uint32((*m.SquareId>>31))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DecoratePos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DecoratePos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DecoratePos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Y != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Y)<<1)^uint32((*m.Y>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.X != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.X)<<1)^uint32((*m.X>>31))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RoomDecorateInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomDecorateInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RoomDecorateInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Id)<<1)^uint32((*m.Id>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.Pos != nil {
		{
			size, err := m.Pos.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Direction != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Direction)<<1)^uint32((*m.Direction>>31))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RoomFurnitureInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomFurnitureInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RoomFurnitureInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FloorTile) > 0 {
		for iNdEx := len(m.FloorTile) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FloorTile[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.FloorDecorate) > 0 {
		for iNdEx := len(m.FloorDecorate) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FloorDecorate[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.WallPaper) > 0 {
		for iNdEx := len(m.WallPaper) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WallPaper[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.WallDecorate) > 0 {
		for iNdEx := len(m.WallDecorate) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WallDecorate[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.RoomCapacity != nil {
		{
			size, err := m.RoomCapacity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DbHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DbHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoomInfo != nil {
		{
			size, err := m.RoomInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RoomFurnitureList) > 0 {
		for iNdEx := len(m.RoomFurnitureList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RoomFurnitureList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.DepotFurnitureList) > 0 {
		for iNdEx := len(m.DepotFurnitureList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DepotFurnitureList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.DepotExtandId != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.DepotExtandId)<<1)^uint32((*m.DepotExtandId>>31))))
		i--
		dAtA[i] = 0x20
	}
	if m.DepotCapacity != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.DepotCapacity)<<1)^uint32((*m.DepotCapacity>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.Exp != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Exp)<<1)^uint32((*m.Exp>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.Level != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Level)<<1)^uint32((*m.Level>>31))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *NewRoomInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewRoomInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewRoomInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IncreaseList) > 0 {
		for iNdEx := len(m.IncreaseList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.IncreaseList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.RemoveList) > 0 {
		for iNdEx := len(m.RemoveList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.FloorTile) > 0 {
		for iNdEx := len(m.FloorTile) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FloorTile[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.FloorDecorate) > 0 {
		for iNdEx := len(m.FloorDecorate) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FloorDecorate[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.WallPaper) > 0 {
		for iNdEx := len(m.WallPaper) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WallPaper[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.WallDecorate) > 0 {
		for iNdEx := len(m.WallDecorate) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WallDecorate[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintHouse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *S2C_SyncHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_SyncHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_SyncHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExpDiff) > 0 {
		for iNdEx := len(m.ExpDiff) - 1; iNdEx >= 0; iNdEx-- {
			x4 := (uint32(m.ExpDiff[iNdEx]) << 1) ^ uint32((m.ExpDiff[iNdEx] >> 31))
			i = encodeVarintHouse(dAtA, i, uint64(x4))
			i--
			dAtA[i] = 0x30
		}
	}
	if m.RoomSize != nil {
		{
			size, err := m.RoomSize.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.DepotExtandTime != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.DepotExtandTime)<<1)^uint32((*m.DepotExtandTime>>31))))
		i--
		dAtA[i] = 0x20
	}
	if m.DepotCapacity != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.DepotCapacity)<<1)^uint32((*m.DepotCapacity>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.Exp != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Exp)<<1)^uint32((*m.Exp>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.Level != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Level)<<1)^uint32((*m.Level>>31))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_Bag_FurnitureUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_Bag_FurnitureUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_Bag_FurnitureUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DiffCount) > 0 {
		for iNdEx := len(m.DiffCount) - 1; iNdEx >= 0; iNdEx-- {
			x6 := (uint64(m.DiffCount[iNdEx]) << 1) ^ uint64((m.DiffCount[iNdEx] >> 63))
			i = encodeVarintHouse(dAtA, i, uint64(x6))
			i--
			dAtA[i] = 0x10
		}
	}
	if m.FurnitureInfo != nil {
		{
			size, err := m.FurnitureInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_OtherHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_OtherHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_OtherHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RetIntaddr != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RetIntaddr)<<1)^uint64((*m.RetIntaddr>>63))))
		i--
		dAtA[i] = 0x18
	}
	if m.TarRoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.TarRoleIndex)<<1)^uint64((*m.TarRoleIndex>>63))))
		i--
		dAtA[i] = 0x10
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_OtherHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_OtherHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_OtherHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoomInfo != nil {
		{
			size, err := m.RoomInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RetCode != nil {
		i = encodeVarintHouse(dAtA, i, uint64(*m.RetCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_RoleHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_RoleHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_RoleHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_RoleHomeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_RoleHomeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_RoleHomeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HomeInfo != nil {
		{
			size, err := m.HomeInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2S_BuyHomeShopGood) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_BuyHomeShopGood) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_BuyHomeShopGood) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Count)<<1)^uint32((*m.Count>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.GoodId != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.GoodId)<<1)^uint32((*m.GoodId>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_BuyHomeShopGood) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_BuyHomeShopGood) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_BuyHomeShopGood) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.Count)<<1)^uint32((*m.Count>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.GoodId != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.GoodId)<<1)^uint32((*m.GoodId>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.RetCode != nil {
		i = encodeVarintHouse(dAtA, i, uint64(*m.RetCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_ExtendRoomSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_ExtendRoomSize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_ExtendRoomSize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_ExtendRoomSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_ExtendRoomSize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_ExtendRoomSize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RetCode != nil {
		i = encodeVarintHouse(dAtA, i, uint64(*m.RetCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_HomeDepotSell) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_HomeDepotSell) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_HomeDepotSell) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemCount != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.ItemCount)<<1)^uint32((*m.ItemCount>>31))))
		i--
		dAtA[i] = 0x18
	}
	if m.ItemId != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint32(*m.ItemId)<<1)^uint32((*m.ItemId>>31))))
		i--
		dAtA[i] = 0x10
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_HomeDepotSell) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_HomeDepotSell) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_HomeDepotSell) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RetCode != nil {
		i = encodeVarintHouse(dAtA, i, uint64(*m.RetCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_ExtendDepotSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_ExtendDepotSize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_ExtendDepotSize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_ExtendDepotSize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_ExtendDepotSize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_ExtendDepotSize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RetCode != nil {
		i = encodeVarintHouse(dAtA, i, uint64(*m.RetCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2S_UpdateRoomInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_UpdateRoomInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_UpdateRoomInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoomInfo != nil {
		{
			size, err := m.RoomInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintHouse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RoleIndex != nil {
		i = encodeVarintHouse(dAtA, i, uint64((uint64(*m.RoleIndex)<<1)^uint64((*m.RoleIndex>>63))))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_UpdateRoomInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_UpdateRoomInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_UpdateRoomInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RetCode != nil {
		i = encodeVarintHouse(dAtA, i, uint64(*m.RetCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintHouse(dAtA []byte, offset int, v uint64) int {
	offset -= sovHouse(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FurnitureInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 1 + sozHouse(uint64(*m.Id))
	}
	if m.Count != nil {
		n += 1 + sozHouse(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HomeRoomSize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SquareId != nil {
		n += 1 + sozHouse(uint64(*m.SquareId))
	}
	if m.MaxX != nil {
		n += 1 + sozHouse(uint64(*m.MaxX))
	}
	if m.MaxY != nil {
		n += 1 + sozHouse(uint64(*m.MaxY))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DecoratePos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.X != nil {
		n += 1 + sozHouse(uint64(*m.X))
	}
	if m.Y != nil {
		n += 1 + sozHouse(uint64(*m.Y))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomDecorateInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Direction != nil {
		n += 1 + sozHouse(uint64(*m.Direction))
	}
	if m.Pos != nil {
		l = m.Pos.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if m.Id != nil {
		n += 1 + sozHouse(uint64(*m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoomFurnitureInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.RoomCapacity != nil {
		l = m.RoomCapacity.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if len(m.WallDecorate) > 0 {
		for _, e := range m.WallDecorate {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.WallPaper) > 0 {
		for _, e := range m.WallPaper {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.FloorDecorate) > 0 {
		for _, e := range m.FloorDecorate {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.FloorTile) > 0 {
		for _, e := range m.FloorTile {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Level != nil {
		n += 1 + sozHouse(uint64(*m.Level))
	}
	if m.Exp != nil {
		n += 1 + sozHouse(uint64(*m.Exp))
	}
	if m.DepotCapacity != nil {
		n += 1 + sozHouse(uint64(*m.DepotCapacity))
	}
	if m.DepotExtandId != nil {
		n += 1 + sozHouse(uint64(*m.DepotExtandId))
	}
	if len(m.DepotFurnitureList) > 0 {
		for _, e := range m.DepotFurnitureList {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.RoomFurnitureList) > 0 {
		for _, e := range m.RoomFurnitureList {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if m.RoomInfo != nil {
		l = m.RoomInfo.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewRoomInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.WallDecorate) > 0 {
		for _, e := range m.WallDecorate {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.WallPaper) > 0 {
		for _, e := range m.WallPaper {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.FloorDecorate) > 0 {
		for _, e := range m.FloorDecorate {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.FloorTile) > 0 {
		for _, e := range m.FloorTile {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.RemoveList) > 0 {
		for _, e := range m.RemoveList {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if len(m.IncreaseList) > 0 {
		for _, e := range m.IncreaseList {
			l = e.Size()
			n += 1 + l + sovHouse(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_SyncHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Level != nil {
		n += 1 + sozHouse(uint64(*m.Level))
	}
	if m.Exp != nil {
		n += 1 + sozHouse(uint64(*m.Exp))
	}
	if m.DepotCapacity != nil {
		n += 1 + sozHouse(uint64(*m.DepotCapacity))
	}
	if m.DepotExtandTime != nil {
		n += 1 + sozHouse(uint64(*m.DepotExtandTime))
	}
	if m.RoomSize != nil {
		l = m.RoomSize.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if len(m.ExpDiff) > 0 {
		for _, e := range m.ExpDiff {
			n += 1 + sozHouse(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_Bag_FurnitureUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FurnitureInfo != nil {
		l = m.FurnitureInfo.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if len(m.DiffCount) > 0 {
		for _, e := range m.DiffCount {
			n += 1 + sozHouse(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_OtherHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.TarRoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.TarRoleIndex))
	}
	if m.RetIntaddr != nil {
		n += 1 + sozHouse(uint64(*m.RetIntaddr))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_OtherHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovHouse(uint64(*m.RetCode))
	}
	if m.RoomInfo != nil {
		l = m.RoomInfo.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_RoleHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_RoleHomeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HomeInfo != nil {
		l = m.HomeInfo.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_BuyHomeShopGood) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.GoodId != nil {
		n += 1 + sozHouse(uint64(*m.GoodId))
	}
	if m.Count != nil {
		n += 1 + sozHouse(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_BuyHomeShopGood) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovHouse(uint64(*m.RetCode))
	}
	if m.GoodId != nil {
		n += 1 + sozHouse(uint64(*m.GoodId))
	}
	if m.Count != nil {
		n += 1 + sozHouse(uint64(*m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_ExtendRoomSize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_ExtendRoomSize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovHouse(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_HomeDepotSell) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.ItemId != nil {
		n += 1 + sozHouse(uint64(*m.ItemId))
	}
	if m.ItemCount != nil {
		n += 1 + sozHouse(uint64(*m.ItemCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_HomeDepotSell) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovHouse(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_ExtendDepotSize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_ExtendDepotSize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovHouse(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2S_UpdateRoomInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleIndex != nil {
		n += 1 + sozHouse(uint64(*m.RoleIndex))
	}
	if m.RoomInfo != nil {
		l = m.RoomInfo.Size()
		n += 1 + l + sovHouse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2C_UpdateRoomInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RetCode != nil {
		n += 1 + sovHouse(uint64(*m.RetCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovHouse(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozHouse(x uint64) (n int) {
	return sovHouse(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FurnitureInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: furniture_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: furniture_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Id = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.Count = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HomeRoomSize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: home_room_size: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: home_room_size: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SquareId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.SquareId = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxX", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MaxX = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxY", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.MaxY = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DecoratePos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: decorate_pos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: decorate_pos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.X = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Y", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Y = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomDecorateInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: room_decorate_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: room_decorate_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Direction", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Direction = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pos == nil {
				m.Pos = &DecoratePos{}
			}
			if err := m.Pos.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Id = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoomFurnitureInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: room_furniture_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: room_furniture_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomCapacity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomCapacity == nil {
				m.RoomCapacity = &HomeRoomSize{}
			}
			if err := m.RoomCapacity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WallDecorate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WallDecorate = append(m.WallDecorate, &RoomDecorateInfo{})
			if err := m.WallDecorate[len(m.WallDecorate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WallPaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WallPaper = append(m.WallPaper, &RoomDecorateInfo{})
			if err := m.WallPaper[len(m.WallPaper)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FloorDecorate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FloorDecorate = append(m.FloorDecorate, &RoomDecorateInfo{})
			if err := m.FloorDecorate[len(m.FloorDecorate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FloorTile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FloorTile = append(m.FloorTile, &RoomDecorateInfo{})
			if err := m.FloorTile[len(m.FloorTile)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: db_home_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: db_home_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Level = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Exp = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepotCapacity", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.DepotCapacity = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepotExtandId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.DepotExtandId = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepotFurnitureList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepotFurnitureList = append(m.DepotFurnitureList, &FurnitureInfo{})
			if err := m.DepotFurnitureList[len(m.DepotFurnitureList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomFurnitureList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomFurnitureList = append(m.RoomFurnitureList, &FurnitureInfo{})
			if err := m.RoomFurnitureList[len(m.RoomFurnitureList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomInfo == nil {
				m.RoomInfo = &RoomFurnitureInfo{}
			}
			if err := m.RoomInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewRoomInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: new_room_info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: new_room_info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WallDecorate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WallDecorate = append(m.WallDecorate, &RoomDecorateInfo{})
			if err := m.WallDecorate[len(m.WallDecorate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WallPaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WallPaper = append(m.WallPaper, &RoomDecorateInfo{})
			if err := m.WallPaper[len(m.WallPaper)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FloorDecorate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FloorDecorate = append(m.FloorDecorate, &RoomDecorateInfo{})
			if err := m.FloorDecorate[len(m.FloorDecorate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FloorTile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FloorTile = append(m.FloorTile, &RoomDecorateInfo{})
			if err := m.FloorTile[len(m.FloorTile)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveList = append(m.RemoveList, &FurnitureInfo{})
			if err := m.RemoveList[len(m.RemoveList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncreaseList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IncreaseList = append(m.IncreaseList, &FurnitureInfo{})
			if err := m.IncreaseList[len(m.IncreaseList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_SyncHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_SyncHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_SyncHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Level = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Exp = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepotCapacity", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.DepotCapacity = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepotExtandTime", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.DepotExtandTime = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomSize == nil {
				m.RoomSize = &HomeRoomSize{}
			}
			if err := m.RoomSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHouse
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
				m.ExpDiff = append(m.ExpDiff, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHouse
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHouse
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHouse
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExpDiff) == 0 {
					m.ExpDiff = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHouse
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
					m.ExpDiff = append(m.ExpDiff, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpDiff", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_Bag_FurnitureUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_Bag_Furniture_update: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_Bag_Furniture_update: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FurnitureInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FurnitureInfo == nil {
				m.FurnitureInfo = &FurnitureInfo{}
			}
			if err := m.FurnitureInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHouse
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
				m.DiffCount = append(m.DiffCount, int64(v))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHouse
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHouse
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthHouse
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.DiffCount) == 0 {
					m.DiffCount = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHouse
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
					m.DiffCount = append(m.DiffCount, int64(v))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field DiffCount", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_OtherHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_OtherHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_OtherHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TarRoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.TarRoleIndex = &v2
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetIntaddr", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RetIntaddr = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_OtherHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_OtherHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_OtherHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomInfo == nil {
				m.RoomInfo = &RoomFurnitureInfo{}
			}
			if err := m.RoomInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_RoleHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_RoleHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_RoleHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_RoleHomeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_RoleHomeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_RoleHomeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HomeInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HomeInfo == nil {
				m.HomeInfo = &DbHomeInfo{}
			}
			if err := m.HomeInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_BuyHomeShopGood) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_BuyHomeShopGood: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_BuyHomeShopGood: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.GoodId = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Count = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_BuyHomeShopGood) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_BuyHomeShopGood: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_BuyHomeShopGood: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.GoodId = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.Count = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_ExtendRoomSize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_ExtendRoomSize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_ExtendRoomSize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_ExtendRoomSize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_ExtendRoomSize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_ExtendRoomSize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_HomeDepotSell) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_HomeDepotSell: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_HomeDepotSell: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ItemId = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemCount", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.ItemCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_HomeDepotSell) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_HomeDepotSell: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_HomeDepotSell: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_ExtendDepotSize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_ExtendDepotSize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_ExtendDepotSize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_ExtendDepotSize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_ExtendDepotSize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_ExtendDepotSize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_UpdateRoomInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_UpdateRoomInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_UpdateRoomInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			v2 := int64(v)
			m.RoleIndex = &v2
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHouse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthHouse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoomInfo == nil {
				m.RoomInfo = &NewRoomInfo{}
			}
			if err := m.RoomInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_UpdateRoomInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_UpdateRoomInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_UpdateRoomInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetCode", wireType)
			}
			var v E_MSG_RET_CODE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= E_MSG_RET_CODE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetCode = &v
		default:
			iNdEx = preIndex
			skippy, err := skipHouse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHouse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipHouse(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowHouse
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHouse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthHouse
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupHouse
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthHouse
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthHouse        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowHouse          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupHouse = fmt.Errorf("proto: unexpected end of group")
)
